<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Xceed.Wpf.DataGrid.v4.2</name>
  </assembly>
  <members>
    <member name="T:Xceed.Wpf.DataGrid.ICustomVirtualizingPanel">
      <summary>Provides an interface that is implemented by virtualizing panels to allow their child elements to be brought into view.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ICustomVirtualizingPanel.BringIntoView(System.Int32)">
      <summary>Brings the element at the specified index into view.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.AutoFilterMode">
      <summary>Value indicating how <strong>automatic</strong> filtering is performed. <!--<img border="0" alt=
"This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellEditorDisplayConditions">
      <summary>Value representing under what conditions cell editors are displayed.<!--DXMETADATA end --></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ClearFilterButtonVisibility">
      <summary>Value representing the visibility of a clear-filter button, which can be displayed in each cell of a FilterRow. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ColumnWidthUnitType">
      <summary>Value indicating the type of value a ColumnWidth objects contains.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CommitMode">
      <summary>Value representing when the CommitItems event of the <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.html">DataGridVirtualizingCollectionView</see> or <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSource.html">DataGridVirtualizationCollectionViewSource</see> will be raised.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ConnectionLineAlignment">
      <summary>Value representing the alignment of the lines that connect the elements in a StaircasePanel together.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridConnectionState">
      <summary>Value representing the connection state when bound to a data source through a virtualizing data-grid collection view.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridUpdateSourceTrigger">
      <summary>Value representing the moment when data is to be written to the underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorAction">
      <summary>Value representing the action to take when an error occurs while deleting a selected item.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DistinctValuesConstraint">
      <summary>Value representing the constraint applied to the distinct values when <strong>automatically</strong> filtering data items.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.EditTriggers">
      <summary>Value indicating what triggers will cause cells to enter edit mode.<!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%</div>" --></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteriaMode">
      <summary>Value indicating how filters entered into a FilterRow are applied. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.InsertionMode">
      <summary>Value representing how the insertion of data is handled in the grid. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ItemScrollingBehavior">
      <summary>Value indicating how the data items in a grid are scrolled.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.NavigationBehavior">
      <summary>Value indicating how the focus navigates from one element to another in a grid.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.PagingBehavior">
      <summary>Value representing the paging behavior of a grid when the page-up and page-down buttons are pressed.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.PrimaryAxis">
      <summary>Value representing which axis of a DataRow must be completely visible in
order to determine which <strong>DataRow</strong> will receive the focus when the page-up or page-down buttons are pressed.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ScrollOrientation">
      <summary>Value representing the scroll bar orientation for the <strong>Scroll</strong> event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.SelectionUnit">
      <summary>Value representing the type of unit used for selections in the datagrid.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.SortDirection">
      <summary>Value representing the direction in which a column's values are sorted.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ColumnWidth">
      <summary>Structure that represents the width of a column.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupHeaderFooterItem">
      <summary>Structure that represents a container created from a template in the header or footer sections of a group.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.SelectionCellRange">
      <summary>Structure that represents a range of cells.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.SelectionRange">
      <summary>Structure that represents a range of data items.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.#ctor(System.Double)">
      <summary>Initializes a new instance of the <strong>ColumnWidth</strong> structure using the specified absolute value in pixels.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.#ctor(System.Double,Xceed.Wpf.DataGrid.ColumnWidthUnitType)">
      <summary>Initializes a new instance of the <strong>ColumnWidth</strong> structure using the specified absolute value in the provided ColumnWidthUnitType.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.GetHashCode">
      <summary>Retrieves the hash code for the <strong>ColumnWidth</strong> structure.</summary>
      <returns>A value representing the hash code for the current <strong>ColumnWidth</strong> instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.ToString">
      <summary>Returns a string representation of the <strong>ColumnWidth</strong> structure.</summary>
      <returns>The string representation of the current <strong>ColumnWidth</strong> instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.Equals(System.Object)">
      <summary>Determines if the specified object is equal to the current <strong>ColumnWidth</strong> instance.</summary>
      <returns>
        <strong>true</strong> if the specified object has the same value and ColumnWidthUnitType as the current instance; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.Equals(Xceed.Wpf.DataGrid.ColumnWidth)">
      <summary>Determines if the specified <strong>ColumnWidth</strong> is equal to the current <strong>ColumnWidth</strong> instance.</summary>
      <returns>
        <strong>true</strong> if the specified <strong>ColumnWidth</strong> has the same value and ColumnWidthUnitType as the current instance; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.op_Equality(Xceed.Wpf.DataGrid.ColumnWidth,Xceed.Wpf.DataGrid.ColumnWidth)">
      <summary>Compares two (2) <strong>ColumnWidth</strong> structures for equality.</summary>
      <returns>
        <strong>true</strong> if the instances have the same value and ColumnWidthUnitType; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.op_Inequality(Xceed.Wpf.DataGrid.ColumnWidth,Xceed.Wpf.DataGrid.ColumnWidth)">
      <summary>Compares two (2) <strong>ColumnWidth</strong> structures for inequality.</summary>
      <returns>
        <strong>true</strong> if the instances <strong>do not have</strong> the same value and ColumnWidthUnitType; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.op_Implicit(Xceed.Wpf.DataGrid.ColumnWidth)~System.Double">
      <summary>Converts the specified <strong>ColumnWidth</strong> structure value to a <strong>double</strong> structure.</summary>
      <returns>A <strong>double</strong> representing the absolute value in pixels of the provided <strong>ColumnWidth</strong> structure.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnWidth.op_Implicit(System.Double)~Xceed.Wpf.DataGrid.ColumnWidth">
      <summary>Converts the specified <strong>double</strong> value to a <strong>ColumnWidth</strong> structure.</summary>
      <returns>A <strong>ColumnWidth</strong> structure containing the provided absolute value in pixels.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnWidth.UnitType">
      <summary>Gets the ColumnWidthUnitType used by the
<strong>ColumnWidth</strong> structure.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnWidth.Value">
      <summary>Gets a <strong>double</strong> that represents the value of the <strong>ColumnWidth</strong> structure.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>A value representing the hash code for the current instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.Equals(Xceed.Wpf.DataGrid.GroupHeaderFooterItem,Xceed.Wpf.DataGrid.GroupHeaderFooterItem)">
      <summary>Indicates whether the GroupHeaderFooterItem instances are
equal.</summary>
      <returns>
        <strong>true</strong> if the instances are of the same type and represent the same value; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.Equals(System.Object)">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
      <returns>
        <strong>true</strong> if the instances are of the same type and represent the same value; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.Equals(Xceed.Wpf.DataGrid.GroupHeaderFooterItem)">
      <summary>Indicates whether this instance and a specified GroupHeaderFooterItem are equal.</summary>
      <returns>
        <strong>true</strong> if the instances are of the same type and represent the same value; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.op_Equality(Xceed.Wpf.DataGrid.GroupHeaderFooterItem,Xceed.Wpf.DataGrid.GroupHeaderFooterItem)">
      <summary>Tests if the two GroupHeaderFooterItem instances are
equivalent.</summary>
      <returns>
        <strong>true</strong> if both items are equal; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.op_Inequality(Xceed.Wpf.DataGrid.GroupHeaderFooterItem,Xceed.Wpf.DataGrid.GroupHeaderFooterItem)">
      <summary>Tests if the two GroupHeaderFooterItem instances are
different.</summary>
      <returns>
        <strong>true</strong> it the items are different; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.Group">
      <summary>Retrieves the group to which the item belongs.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.Template">
      <summary>Retrieves the template that was used to create the item.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupHeaderFooterItem.Empty">
      <summary>Retrieves an empty <strong>GroupHeaderFooterItem</strong> structure.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <strong>SelectionCellRange</strong> structure using the provided data item and column indexes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <strong>SelectionCellRange</strong> structure using the start and end of the provided data item and column
indexes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.#ctor(Xceed.Wpf.DataGrid.SelectionRange,Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Initializes a new instance of the <strong>SelectionCellRange</strong> structure using the provided SelectionRange structures.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.Equals(System.Object)">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
      <returns>
        <strong>true</strong> if the instances are of the same type and represent the same value; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.Exclude(Xceed.Wpf.DataGrid.SelectionCellRange)">
      <summary>Excludes a range of cells from the selection.</summary>
      <returns>A list of SelectionCellRange structures representing the new range.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>A value representing the hash code for the current instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.Intersect(Xceed.Wpf.DataGrid.SelectionCellRange)">
      <summary>Returns the intersection of the passed SelectionCellRange and the caller.</summary>
      <returns>A SelectionCellRange object representing the intersection of <em>range</em> and
the caller.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.op_Equality(Xceed.Wpf.DataGrid.SelectionCellRange,Xceed.Wpf.DataGrid.SelectionCellRange)">
      <summary>Tests if the two SelectionCellRange instances are equivalent.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionCellRange.op_Inequality(Xceed.Wpf.DataGrid.SelectionCellRange,Xceed.Wpf.DataGrid.SelectionCellRange)">
      <summary>Tests if the two SelectionCellRange instances are different.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionCellRange.ColumnRange">
      <summary>Gets or sets the column range of the selection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionCellRange.IsEmpty">
      <summary>A boolean value indicating whether the cell range selection is empty.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionCellRange.ItemRange">
      <summary>Gets or sets the data item range of the selection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionCellRange.Length">
      <summary>Gets the number of items in the selection.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.SelectionCellRange.Empty">
      <summary>Retrieves an empty <strong>SelectionCellRange</strong> structure.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <strong>SelectionCellRange</strong> structure using the provided start and end indexes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <strong>SelectionCellRange</strong> structure using the provided index.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.CompareTo(Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Compares the passed SelectionRange to the caller.</summary>
      <returns>-1 if the caller is less than <em>other,</em> 1 if the caller is greater than <em>other,</em> or 0 if caller and <em>other</em> are identical.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.Equals(System.Object)">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.Exclude(Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Excludes a range of data items from the selection.</summary>
      <returns>
        <para>A list of SelectionRange structures representing the new range.</para>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.GetHashCode">
      <summary>Returns the hash code for the current instance.</summary>
      <returns>A value representing the hash code for the current instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.GetIndexFromItemOffset(System.Int32)">
      <summary>Returns the index by using the passed item offset.</summary>
      <returns>The index.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.GetOffsetFromItemIndex(System.Int32)">
      <summary>Returns item offset by using the passed the index.</summary>
      <returns>The item offset.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.Intersect(Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Returns the intersection of the passed SelectionRange and the caller.</summary>
      <returns>A SelectionRange object representing the intersection of <em>range</em> and the
caller.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.op_Equality(Xceed.Wpf.DataGrid.SelectionRange,Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Tests if the two SelectionRange instances are equivalent.</summary>
      <returns>
        <strong>true</strong> if the two SelectionRange instances are equivalent;
<strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.op_GreaterThan(Xceed.Wpf.DataGrid.SelectionRange,Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Tests if the first SelectionRange instance is greater than the second.</summary>
      <returns>
        <strong>true</strong> if the first SelectionRange instance is greater than the
second; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.op_Inequality(Xceed.Wpf.DataGrid.SelectionRange,Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Tests if the two SelectionRange instances are different.</summary>
      <returns>
        <strong>true</strong> if the two SelectionRange instances are different;
<strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.SelectionRange.op_LessThan(Xceed.Wpf.DataGrid.SelectionRange,Xceed.Wpf.DataGrid.SelectionRange)">
      <summary>Tests if the first SelectionRange instance is greater than the second.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionRange.EndIndex">
      <summary>Gets or sets the end index of the selection range.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionRange.IsEmpty">
      <summary>Gets a boolean value indicating whether the selection range is empty.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionRange.Length">
      <summary>Gets the length of the selection range.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionRange.StartIndex">
      <summary>Gets or sets the start index of the selection range.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.SelectionRange.Empty">
      <summary>Retrieves an empty <strong>SelectionCellRange</strong> structure.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ActivationGesture">
      <summary>Represents a key or text gesture that causes an element to enter edit mode.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ActivationGestureCollection">
      <summary>Represents a dynamic ActivationGesture collection that provides
notifications when items are added, removed, or when the collection is refreshed.<!--DXMETADATA end --></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.AsyncCommitInfo">
      <summary>Received in the <strong>CommitItems</strong> event to provide information on the virtualized items to allow those that have been modified to be
committed to the underlying data source.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.AsyncQueryInfo">
      <summary>Received in the QueryItems event
to provide the information necessary to retrieve the next batch of items. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.AutoFilterControl">
      <summary>Control that is displayed in a column-manager cell when <strong>automatic</strong> filtering is enabled. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.AutoFilterPopup">
      <summary>The <strong>AutoFilterPopup</strong> class represents the popup that contains the AutoFilterControl, which is displayed in a column-manager cell to allow its associated
column to be automatically filtered. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.AutoFilterValuesChangedEventArgs">
      <summary>Provides information and event data on AutoFilterValues that have changed. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CancelRoutedEventArgs">
      <summary>Provides information and event data on a cancelable routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Cell">
      <summary>Represents a cell in a grid, which is a <strong>ContentControl</strong> used to display the value of a property in a data item.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellCollection">
      <summary>Represents a dynamic cell collection that provides notifications when items are added, removed, or when the collection is refreshed.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellContentPresenter">
      <summary>Displays the content of a cell.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellEditor">
      <summary>Contains the information required to display the template that will be used to edit the content of a cell as well as the activation gestures that
activation the template.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellEditorContext">
      <summary>Class that provides information on a cell editor's parent column and associated foreign key configuration.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellValidatingEventArgs">
      <summary>Provides information on the value to be validated.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellValidationContext">
      <summary>The validation context in which the cell content is validated. The validation context contains the cell and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.CellValidationContext~DataItem.html">data item</see> relative to the content being validated.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellValidationError">
      <summary>Represents the error that is provided when the value of a cell fails the UI-level validation process.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellValidationErrorRoutedEventArgs">
      <summary>Provides information on the CellValidationError that occurred
during the validation process.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CollectionViewGroupExtensions">
      <summary>Class that exposes methods that extend the functionality provided by the <strong>CollectionViewGroup</strong> class.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Column">
      <summary>Represents a column, which defines information on how the Cells it contains are displayed and their content edited.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ColumnBase">
      <summary>Base class that represents a column and from which the Column and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.UnboundColumn.html">UnboundColumn</see> classes derive.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ColumnChooserContextMenu">
      <summary>Class that represents the context menu that allows end users to show and hide columns in a grid.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ColumnCollection">
      <summary>Represents a dynamic column collection that provides notifications when items are added, removed, or when the whole
collection is refreshed.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ColumnManagerCell">
      <summary>Specialization of the Cell class that can be used to rearrange, sort, and
group the columns in a grid.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ColumnManagerRow">
      <summary>Specialization of the Row class that contains a collection of
<see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.ColumnManagerCell.html">ColumnManagerCells</see> that can be used to manipulate the columns in a grid.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CommitItemsEventArgs">
      <summary>Provides information about the virtualized items during the CommitItems event. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataCell">
      <summary>Specialization of the Cell class that represents a cell contained in a
<see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataRow.html">DataRow</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridBindingInfo">
      <summary>Class that creates and wraps a binding that is used by a column to retrieve and validate its values.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCollectionView">
      <summary>The <strong><font color="black">DataGridCollectionView</font></strong> class allows any collection that implements the
<strong>IEnumerable</strong> interface to be grouped, sorted, and filtered.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCollectionViewBase">
      <summary>
        <para>Base class for the DataGridCollectionView
and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.html">DataGridVirtualizingCollectionView</see> classes.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCollectionViewSource">
      <summary>Represents the XAML proxy of the DataGridCollectionView
class and exposes the most commonly used members of the <strong>DataGridCollectionView</strong> class.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase">
      <summary>
        <para>Base class for the DataGridCollectionViewSource and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSource.html">DataGridVirtualizingCollectionViewSource</see> classes, which
represent the XAML proxies of the <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridCollectionView.html">DataGridCollectionView</see> and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.html">DataGridVirtualizingCollectionView</see> classes and expose their most
commonly used members.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCommands">
      <summary>Provides a set of commands that can be used to accomplish various actions.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCommittingNewItemEventArgs">
      <summary>Provides information on the new item that is about to be committed in the CommittingNewItem event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridContext">
      <summary>Class that the provides contextual information on, and access to, items contained in a grid or detail.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridControl">
      <summary>Represents the Xceed DataGrid for WPF control, which allows data to be displayed and edited, regardless of its layout.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCreatingNewItemEventArgs">
      <summary>Provides information that can be used to create a new item in the CreatingNewItem event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCurrentChangedEventArgs">
      <summary>Provides information related to changes made to the current visual row.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCurrentChangingEventArgs">
      <summary>Provides information related to changes about to be made to the current visual row.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridDetailDescription">
      <summary>The <strong>DataGridDetailDescription</strong> class provides information about a detail relation whose content will be displayed as the details
of the <strong>master</strong> data items in a grid or as the data items of another detail. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridDetailDescriptionCollection">
      <summary>Contains a collection of DataGridDetailDescription
objects. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridException">
      <summary>Exception that is thrown when a DataGrid-specific exception occurs.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridFocusException">
      <summary>Exception that is thrown when a focus-related exception is thrown.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridForeignKeyDescription">
      <summary>Class that provides descriptive information about a foreign key or enumeration.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridGroupDescription">
      <summary>Class that describes the grouping of items using a property name as the criteria.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridGroupInfo">
      <summary>Class that provides the information required to created groups when using a virtualized collection view. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridInternalException">
      <summary>Exception that is thrown when an unexpected datagrid-specific exception occurs.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemCancelEventArgs">
      <summary>Provides information for cancelable events.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemEventArgs">
      <summary>Provides information for events that manipulate items.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemHandledEventArgs">
      <summary>
        <para>Provides information for events that can be handled completely in an event handler.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemProperty">
      <summary>Represents the characteristics of a property for an item in a DataGridCollectionView.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemPropertyBase">
      <summary>Base class that represents the characteristics of a property for an item in a datagrid collection view and from which the DataGridItemProperty and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.html">DataGridUnboundItemProperty</see> classes derive.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemPropertyCollection">
      <summary>Contains a collection of DataGridItemProperty objects.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemPropertyCommittingValueEventArgs">
      <summary>Provides information when a value is about to be committed.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemPropertyDictionary">
      <summary>Gets a dictionary of datagrid item properties.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemPropertyQueryValueEventArgs">
      <summary>Provides information when a value is required. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemRemovedEventArgs">
      <summary>Provides information on an item that was removed from a collection view.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridItemsHost">
      <summary>
        <para>Base class whose derived classes are used in DataGridControl templates as a
replacement for the <strong>ItemsPresenter</strong> and that will contain the data items as well as the items contained in <strong>non-fixed</strong> header
and footer sections and whose containers are created from the associated <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridItemsHost~CustomItemContainerGenerator.html">CustomItemContainerGenerator</see>.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridRemovingItemEventArgs">
      <summary>Provides information on the new item that is about to be removed in the RemovingItem event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridSelectionChangedEventArgs">
      <summary>Provides information on the items that were selected/unselected.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridSelectionChangingEventArgs">
      <summary>Provides information on the items that are being selected/unselected.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty">
      <summary>Represents an "unbound" item property whose values can be appended to a data item.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView">
      <summary>The DataGridVirtualizingCollectionView class and
its XAML proxy, the <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSource.html">DataGridVirtualizingCollectionViewSource</see> class, provide support
for data virtualization. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase">
      <summary>Base class that provides support for data virtualization, and from which the DataGridVirtualizingCollectionView and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionView.html">DataGridVirtualizingQueryableCollectionView</see> classes derive. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSource">
      <summary>The DataGridVirtualizingCollectionViewSource class is the XAML proxy
of the <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.html">DataGridVirtualizingCollectionView</see> class, which
provides support for data virtualization. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase">
      <summary>Gets or sets a value representing when the CommitItems event will be raised. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel">
      <summary>
        <para>Arranges and virtualizes the content of a DataGridControl.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionView">
      <summary>The <strong>DataGridVirtualizingQueryableCollectionView</strong> class and its XAML proxy, the DataGridVirtualizingQueryableCollectionViewSource
class, provide support for <strong>IQueryable</strong> data sources.
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionViewSource">
      <summary>The DataGridVirtualizingQueryableCollectionView class and its
XAML proxy, the <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionViewSource.html">DataGridVirtualizingQueryableCollectionViewSource</see>
class, provide support for <strong>IQueryable</strong> data sources. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataRelationDetailDescription">
      <summary>The <strong>DataRelationDetailDescription</strong> class provides information about a DataRelation whose content will be displayed as the details of
the <strong>master</strong> data items in a grid or as the data items of another detail. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataRow">
      <summary>Specialization of the Row that represents a row that contains a collection of
<see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataCell.html">DataCells</see>. <strong>DataRows</strong> are the visual representation of the data items
that are displayed in a grid's viewport.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataTableForeignKeyConverter">
      <summary>
        <para>Represents a foreign key converter, which allows custom key/value mappings to be provided.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataTableForeignKeyDescription">
      <summary>
        <para>Represents a <strong>DataTable</strong> foreign key constraint.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DefaultDetailConfiguration">
      <summary>Class that provides configuration information that will be applied to all the details in a grid <strong>and any descendant details</strong> when
an explicit detail configuration is not provided for a specific detail relation. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs">
      <summary>Provides information on the selected item and the error that occurred while it was being deleted.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DetailConfiguration">
      <summary>Class that provides a detail configuration that will be applied to the details resulting from the corresponding detail description. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DetailConfigurationCollection">
      <summary>Contains a collection of DetailConfiguration objects. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DetailIndicator">
      <summary>Control that provides a visual representation of the number of detail levels in a grid and/or detail. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.EntityDetailDescription">
      <summary>The <strong>EntityDetailDescription</strong> class provides information about a <strong>EntityCollection&lt;TEntity&gt;</strong> detail relation
and whose content will be displayed as the details of the <strong>master</strong> data items in a grid or as the data items of another detail. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.EnumerableDetailDescription">
      <summary>The <strong>EnumerableDetailDescription</strong> class provides information about a detail relation whose parent data item implements
<strong>IEnumerable</strong> and whose content will be displayed as the details of the <strong>master</strong> data items in a grid or as the data items of
another detail. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelector">
      <summary>Represents a group-configuration selector that selects the appropriate group configuration for a group based on the column field names provided
by the FieldNameGroupConfigurationIndictors it contains.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelectorItem">
      <summary>Indicates the group
configuration to apply to the groups that are created by the values of the column with the specified <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelectorItem~FieldName.html">field name</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCell">
      <summary>Represents a cell contained in a FilterRow in which values can be entered
to filter the items displayed in the corresponding column. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterRow">
      <summary>Represents a row in which values can be entered to filter the items displayed in each cell's corresponding column. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ForeignKeyConfiguration">
      <summary>
        <para>Represents the visual representation of a foreign key description.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ForeignKeyConverter">
      <summary>
        <para>Represents a foreign key converter, which allows custom key/value mappings to be provided.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Group">
      <summary>Represents the run-time realization of a group.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupByControl">
      <summary>Represents a control that displays information about how the data items in a grid or detail are grouped and sorted as well as allows the end user
to change how the items are grouped and sorted.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupByItem">
      <summary>Represents an item in a GroupByControl that corresponds to a column
in a grid or detail by whose values the data items are grouped.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupConfiguration">
      <summary>Class that provides configuration information for a corresponding group description.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupConfigurationSelector">
      <summary>Represents a group-configuration selector that selects the appropriate group configuration for a group.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupExtensions">
      <summary>Class that exposes methods that extend the functionality provided by the Group class.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupHeaderControl">
      <summary>Represents the control used as a Group header, which is used to expand and
collapsed its associated group as well as display information on the group's content.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupHeaderFooterItemTemplate">
      <summary>Class that represents an item in the header or footer sections of a group.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupLevelDescription">
      <summary>Represents a description of each group level, which provides complementary information on the group descriptions that were added through the
<strong>CollectionViewSource.GroupDescriptions</strong> property.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupLevelDescriptionCollection">
      <summary>Contains a collection of GroupLevelDescription objects.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupLevelIndicator">
      <summary>Control that provides a visual representation of the number of group levels in a grid and/or detail.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane">
      <summary>The <strong>GroupLevelIndicatorPane</strong> class represents a control that contains group-level indicators that indicate the group-level in which an item is located.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupNameCountPair">
      <summary>Represents a pair consisting of a group name and its corresponding item count. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupNavigationButton">
      <summary>Represents a button that is displayed when the mouse pointer hovers over a group name in the group header.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupNavigationControl">
      <summary>Represents a control that is displayed when the mouse pointer hovers over a group name in the group header.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.GroupNavigationControlItem">
      <summary>Represents an item in a GroupNavigationControl.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.HierarchicalGroupByControl">
      <summary>Represents a control that displays hierarchical information about how the data items in a grid and any of its child details are grouped and
sorted as well as allows the end user to change how the items are grouped and sorted.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode">
      <summary>Represents a control that displays information in a HierarchicalGroupByControl about how the data items in a grid or detail are
grouped and sorted as well as allows the end user to change how the items are grouped and sorted.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.HierarchicalGroupByItem">
      <summary>
        <para>Represents an item in a HierarchicalGroupByControlNode that
corresponds to a column in a grid or detail by whose values the data items are grouped.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.HierarchicalGroupLevelIndicatorPane">
      <summary>
        <para>The <strong>HierarchicalGroupLevelIndicatorPane</strong> class represents a control that contains group-level-indicator panes and detail-level indicators
that indicate the group and detail levels in which an item is located.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.InitializingInsertionRowEventArgs">
      <summary>Provides information on the InsertionRow being initialized.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.InsertionCell">
      <summary>Represents a cell contained in an InsertionRow.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.InsertionRow">
      <summary>Specialization of the Row class, which allows new data items to be added to a
grid.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.KeyActivationGesture">
      <summary>Represents a key gesture that causes an element to enter edit mode.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelector">
      <summary>Represents a group-configuration selector that selects the appropriate group configuration for a group based on the group levels provided by the
LevelGroupConfigurationSelectorItems it contains.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelectorItem">
      <summary>Indicates the group
configuration to apply to the groups of the specified <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.LevelGroupConfigurationSelectorItem~Level.html">group level</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Licenser">
      <summary>Class that registers the classes defined in the Xceed.Wpf.DataGrid assembly.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ListSourceDetailDescription">
      <summary>The <strong>ListSourceDetailDescription</strong> class provides information about a detail relation whose parent data item implements
<strong>IListSource</strong> and whose content will be displayed as the details of the <strong>master</strong> data items in a grid or as the data items of
another detail. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.PropertyDetailDescription">
      <summary>The <strong>PropertyDetailDescription</strong> class provides information about a property whose content will be displayed as the details of the
data items in a grid or detail. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.QueryAutoFilterDistinctValuesEventArgs">
      <summary>Provides the information necessary to allow the distinct values of a DataGridItemProperty to be extrapolated during the <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView~QueryAutoFilterDistinctValues_EV.html">QueryAutoFilterDistinctValues</see> event. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.QueryDistinctValueEventArgs">
      <summary>Provides information on a distinct value extracted from the underlying data source and allows a new one to be provided in its stead. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.QueryEntityDetailsEventArgs">
      <summary>Provides the information required when requesting details for an EntityDetailDescription. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.QueryGroupsEventArgs">
      <summary>Provides the information necessary to create groups in a virtualized collection view. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.QueryItemCountEventArgs">
      <summary>Provides information on the DataGridVirtualizingCollectionView to which the grid is bound
including the number of items that it should contain. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.QueryItemsEventArgs">
      <summary>Provides information on the DataGridVirtualizingCollectionView to which the grid is bound
including the items that have been fetched from the underlying data source. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Row">
      <summary>Represents any type of row in a grid. The DataRow and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.InsertionRow.html">InsertionRow</see> class derive from this class.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.RowSelector">
      <summary>Represents a control used to select a row.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.RowSelectorPane">
      <summary>Represents the <em>Canvas</em> in which the RowSelectors are painted.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.RowValidationError">
      <summary>Represents the error that is provided when the value of a cell fails the binding-level validation process.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.RowValidationErrorRoutedEventArgs">
      <summary>Provides information on the RowValidationError that occurred
during the validation process.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ScrollTip">
      <summary>Represents a content control that displays the value of one or more cells in the first visible row when a grid is scrolled.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.SelectionInfo">
      <summary>Provides information in the SelectionChanged
event about the items that were selected and/or unselected.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.StaircasePanel">
      <summary>Represents a panel whose child elements are laid out in a staircase pattern.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.StatCell">
      <summary>Represents a cell contained in a StatRow that can display the results of a
statistical function. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.StatRow">
      <summary>Specialization of the Row class, which allows the results of statistical
functions to be displayed. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.TextInputActivationGesture">
      <summary>Represents a text input gesture that causes an element to enter edit mode.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.UnboundColumn">
      <summary>Represents a column that can be used to display non-data related information such as a label or controls that allow some sort of action to be
carried out (e.g., a button to open a window in which the current item can be edited).</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.VirtualizedItemInfo">
      <summary>Class that provides information on a data item including its old and new values as well as its index in a virtualized collection view. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection">
      <summary>Contains a collection of old values for a VirtualizedItemInfo. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ActivationGestureCollection.#ctor">
      <summary>Initializes a new instance of the ActivationGestureCollection class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncCommitInfo.AsyncState">
      <summary>Gets a user-defined object that qualifies or contains information about an asynchronous operation.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncCommitInfo.Error">
      <summary>Gets or sets a user-defined object that qualifies or contains information about an error.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncCommitInfo.VirtualizedItemInfos">
      <summary>Gets an array of VirtualizedItemInfo objects representing the
items that are about to be released from memory.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.AsyncQueryInfo.EndQuery(System.Object[])">
      <summary>Called to provide new items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncQueryInfo.AsyncState">
      <summary>Gets a user-defined object that qualifies or contains information about an asynchronous operation.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncQueryInfo.Error">
      <summary>Gets or sets a user-defined object that qualifies or contains information about an error.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncQueryInfo.RequestedItemCount">
      <summary>Gets or sets a value representing the number of new items that should be returned.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncQueryInfo.ShouldAbort">
      <summary>Gets a value indicating whether the operation should be aborted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AsyncQueryInfo.StartIndex">
      <summary>Gets or sets a value indicating the index in the data source at which to start retrieving the new items.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.AutoFilterControl.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.AutoFilterControl.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>AutoFilterControl</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support
dynamic style (view or <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.ViewBase~Theme.html">theme</see> modifications) changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterControl.AutoFilterColumn">
      <summary>Gets or sets the column whose auto-filter values will be
managed by the auto-filter control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterControl.AutoFilterContext">
      <summary>Gets or sets the auto-filter control's data-grid context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterControl.AutoFilterFieldName">
      <summary>
        <para>Gets or sets a value representing the field name of the column whose auto-filter values will be managed by the auto-filter control.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterControl.AutoFilterIndex">
      <summary>Gets or sets a value indicating the order in which the auto-filter control's column is filtered.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterControl.ClearAutoFilterText">
      <summary>Gets or sets the text that is displayed in the auto-filter control's "Clear" button.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterControl.DistinctValueItemContainerStyle">
      <summary>Gets or sets the style that is applied to the container element for each distinct value in the auto-filter control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterControl.DistinctValueItemContainerStyleSelector">
      <summary>
        <para>Gets or sets the style selector that selects the appropriate style to apply to each container element.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterControl.DistinctValueItemTemplate">
      <summary>Gets or sets the data template used to display each distinct value.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterControl.DistinctValueItemTemplateSelector">
      <summary>Gets or sets the data-template selector that selects the appropriate template for a distinct value.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterControl.DistinctValuesHost">
      <summary>Gets the <strong>Selector</strong> that contains the distinct values displayed by the auto-filter control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterControl.HasAutoFilterValues">
      <summary>Gets a value indicating whether the auto-filter control is currently filtering the contents of the AutoFilterColumn.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterControl.HasDistinctValues">
      <summary>
        <para>Gets a value indicating whether the auto-filter control contains the distinct values of the AutoFilterColumn, indicating that it can be automatically
filtered.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.AutoFilterControl.AutoFilterColumnProperty">
      <summary>Identifies the AutoFilterColumn dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.AutoFilterControl.AutoFilterContextProperty">
      <summary>Identifies the AutoFilterContext dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.AutoFilterControl.AutoFilterFieldNameProperty">
      <summary>Identifies the AutoFilterFieldName dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.AutoFilterControl.AutoFilterIndexProperty">
      <summary>Identifies the AutoFilterIndex dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.AutoFilterControl.ClearAutoFilterTextProperty">
      <summary>Identifies the ClearAutoFilterText dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.AutoFilterControl.ClearAutoFilterValues">
      <summary>Represents the <strong>ClearAutoFilterValues</strong> command, which requests that the auto-filter column's AutoFilterValues property be cleared. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.AutoFilterControl.DistinctValueItemContainerStyleProperty">
      <summary>Identifies the DistinctValueItemContainerStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.AutoFilterControl.DistinctValueItemContainerStyleSelectorProperty">
      <summary>Identifies the DistinctValueItemContainerStyleSelector
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.AutoFilterControl.DistinctValueItemTemplateProperty">
      <summary>Identifies the DistinctValueItemTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.AutoFilterControl.DistinctValueItemTemplateSelectorProperty">
      <summary>Identifies the DistinctValueItemTemplateSelector dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.AutoFilterControl.HasAutoFilterValuesProperty">
      <summary>Identifies the HasAutoFilterValues dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.AutoFilterControl.HasDistinctValuesProperty">
      <summary>Identifies the HasDistinctValues dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.AutoFilterControl.AutoFilterNullValue.#ctor">
      <summary>Initializes a new instance of the <strong>AutoFilterNullValue</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.AutoFilterControl.AutoFilterNullValue.Equals(System.Object)">
      <summary>Determines whether two <strong>AutoFilterNullValue</strong> instances are equal.</summary>
      <returns>
        <strong>true</strong> if the instances are equal; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.AutoFilterControl.AutoFilterNullValue.GetHashCode">
      <summary>Retrieves the has code for the current instance.</summary>
      <returns>A hash code for the current instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.AutoFilterControl.AutoFilterNullValue.ToString">
      <summary>Retrieves the string representation of the current instance.</summary>
      <returns>The string representation of the current instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.AutoFilterPopup.#ctor">
      <summary>Initializes a new instance of the <strong>AutoFilterPopup</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.AutoFilterPopup.OnClosed(System.EventArgs)">
      <summary>Responds to the condition in which the value of the <strong>IsOpen</strong> property is changed from <strong>true</strong> to
<strong>false</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.AutoFilterPopup.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>Mouse.MouseDown</strong> attached event reaches an element in its route that is derived from this class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterValuesChangedEventArgs.AutoFilterValues">
      <summary>Gets a collection of auto-filter values.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterValuesChangedEventArgs.CollectionChangedEventArgs">
      <summary>Gets the <strong>NotifyCollectionChangedEventArgs</strong> object received when NotifyCollectionChanged is raised.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterValuesChangedEventArgs.DetailDescription">
      <summary>Gets the detail description to which the
AutoFilterValues collection belongs.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.AutoFilterValuesChangedEventArgs.ItemProperty">
      <summary>Gets the DataGridItemPropertyBase object whose filter has been modified.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CancelRoutedEventArgs.#ctor">
      <summary>Initializes a new instance of the <strong>CancelRoutedEventArgs</strong> class</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CancelRoutedEventArgs.#ctor(System.Windows.RoutedEvent)">
      <summary>Initializes a new instance of the <strong>CancelRoutedEventArgs</strong> class, using the supplied routed event identifier.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CancelRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the <strong>CancelRoutedEventArgs</strong> class, using the supplied routed event identifier and providing the
opportunity to declare a different source for the event.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CancelRoutedEventArgs.Cancel">
      <summary>Gets or sets a value that allows the routed event to be canceled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.BeginEdit">
      <summary>Signals the beginning of the edit process and places the cell in edit mode.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.CancelEdit">
      <summary>Cancels the edit process. Any modifications made to the cell's content will be lost.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.ClearContainer">
      <summary>Clears the content of the cell.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.GetCellEditor">
      <summary>Retrieves the cell editor that is used, or that will be used, to edit the content of the cell.</summary>
      <returns>The CellEditor that is used, or that will be used, to edit the content
of the cell. If the parent column's <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Column~CellEditor.html">CellEditor</see> property is $$NULL$$, a new
instance of the appropriate cell editor will be created.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.GetCellEditorContext(System.Windows.DependencyObject)">
      <summary>Gets the value of the <strong>CellEditorContext</strong> attached property for the specified dependency object.</summary>
      <returns>The <strong>CellEditorContext</strong> property value for the dependency object.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.GetFittedWidth">
      <summary>Retrieves the fitted width of the cell, in device-independent units (1/96th inch per unit).</summary>
      <returns>A value representing the fitted width of the cell, in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.GetIsCellFocusScope(System.Windows.DependencyObject)">
      <summary>Gets the value of the <strong>IsCellFocusScope</strong> attached property for the specified dependency object.</summary>
      <returns>The <strong>IsCellFocusScope</strong> property value for the dependency object. By default, <strong>false</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.Initialize(Xceed.Wpf.DataGrid.DataGridContext,Xceed.Wpf.DataGrid.Row,Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>Initializes the cell specifying its parent DataGridControl,
<see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Row.html">Row</see>, and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Column.html">Column</see>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.InitializeCore(Xceed.Wpf.DataGrid.DataGridContext,Xceed.Wpf.DataGrid.Row,Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>Called after the Initialize method to allow custom initialization.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnApplyTemplate">
      <summary>Builds the visual tree for the element.On</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnCreateAutomationPeer">
      <summary>Creates an appropriate <strong>AutomationPeer</strong> for this instance.</summary>
      <returns>The <strong>AutomationPeer</strong> for this instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnEditBeginning(Xceed.Wpf.DataGrid.CancelRoutedEventArgs)">
      <summary>Raises the EditBeginning event, which signals that the edit
process is about to begin.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnEditBegun">
      <summary>Raises the EditBegun event, which signals that the edit process
has begun.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnEditCanceled">
      <summary>Raises the EditCanceled event, which signals that the edit
process has been canceled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnEditCanceling">
      <summary>Raises the EditCanceling event, which signals that the edit
process is being canceled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnEditEnded">
      <summary>Raises the EditEnded event, which signals that the edit process
has ended.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnEditEnding(Xceed.Wpf.DataGrid.CancelRoutedEventArgs)">
      <summary>Raises the EditEnding event, which signals that the edit process
is about to end.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseEnter</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeave</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonDown</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when an unhandled <strong>PreviewKeyDown</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>Invoked when an unhandled <strong>PreviewTextInput</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.OnValidationErrorChanging(Xceed.Wpf.DataGrid.CellValidationErrorRoutedEventArgs)">
      <summary>Invoked when an unhandled <strong>ValidationErrorChanging</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.PostInitialize">
      <summary>Concludes the initialization of the cell.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.PrepareContainer(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Prepares a container in the specified DataGridContext for the <em>item</em>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>Cell</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic style
(view or <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.ViewBase~Theme.html">theme</see> modifications) changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.SetIsCellFocusScope(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <strong>IsCellFocusScope</strong> attached property to the specified dependency object.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.ToString">
      <summary>Returns the string representation of this <strong>Cell</strong> instance.</summary>
      <returns>The string representation of this <strong>Cell</strong> instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.EndEdit">
      <summary>Signals the end of the edit process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.FindFromChild(System.Windows.DependencyObject)">
      <summary>Finds the parent cell for the specified dependency object.</summary>
      <returns>The parent cell of the <em>child</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.FindFromChild(Xceed.Wpf.DataGrid.DataGridContext,System.Windows.DependencyObject)">
      <summary>Finds the parent cell for the specified dependency object.</summary>
      <returns>The parent cell of the <em>child</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Cell.FindFromChild(Xceed.Wpf.DataGrid.DataGridControl,System.Windows.DependencyObject)">
      <summary>Finds the parent cell for the specified dependency object.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.CellErrorStyle">
      <summary>Gets or sets the style that will be used by the cell when its content fails the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.CellValidationRules">
      <summary>Gets the list of CellValidationRules against
which a cell's content is validated before the cell exists edit mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.CoercedContentTemplate">
      <summary>Gets the template that is currently being used.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.CurrentBackground">
      <summary>Gets or sets the brush that will be used to paint the cell's background when the cell becomes current.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.CurrentForeground">
      <summary>Gets or sets the brush that will be used to paint the cell's foreground when the cell becomes current.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.FieldName">
      <summary>Gets or sets the field name of the parent column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.HasValidationError">
      <summary>Gets a value indicating whether the cell's content failed the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.InactiveSelectionBackground">
      <summary>Gets or sets the brush that will be used to paint the cell's background when the cell is selected but inactive.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.InactiveSelectionForeground">
      <summary>Gets or sets the brush that will be used to paint the cell's foreground when the cell is selected but inactive.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.IsBeingEdited">
      <summary>Gets a value indicating whether the cell is being edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.IsCellEditorDisplayed">
      <summary>Gets a value indicating whether the cell's editor is displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.IsCurrent">
      <summary>Gets a value indicating whether the cell is the current cell.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.IsDirty">
      <summary>Gets a value indicating whether the content of the cell has been modified since it entered edit mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.IsSelected">
      <summary>Gets a value indicating whether the cell is selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.IsValidationErrorRestrictive">
      <summary>Gets a value indicating whether the validation rule that failed prevents the focus from moving to another row until the error is fixed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.OverrideColumnCellContentTemplate">
      <summary>Gets a value indicating whether the cell inherits the template provided by the parent column's CellContentTemplate property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.ParentColumn">
      <summary>Gets the cell's parent column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.ParentRow">
      <summary>Gets the cell's parent row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.ReadOnly">
      <summary>Gets or sets a value indicating whether the cell is readonly.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.SelectionBackground">
      <summary>Gets or sets the brush that will be used to paint the cell's background when the cell is selected and active.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.SelectionForeground">
      <summary>Gets or sets the brush that will be used to paint the cell's foreground when the cell is selected and active</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Cell.ValidationError">
      <summary>Gets or sets information about the validation rule that failed the validation process.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.CellEditorContextProperty">
      <summary>Identifies the CellEditorContext attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.CellErrorStyleProperty">
      <summary>Identifies the CellErrorStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.CoercedContentTemplateProperty">
      <summary>Identifies the CoercedContentTemplate dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.CurrentBackgroundProperty">
      <summary>Identifies the CurrentBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.CurrentForegroundProperty">
      <summary>Identifies the CurrentForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.EditBeginningEvent">
      <summary>Identifies the EditBeginning routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.EditBegunEvent">
      <summary>Identifies the EditBegun routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.EditCanceledEvent">
      <summary>Identifies the EditCanceled routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.EditCancelingEvent">
      <summary>Identifies the EditCanceling routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.EditEndedEvent">
      <summary>Identifies the EditEnded routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.EditEndingEvent">
      <summary>Identifies the EditEnding routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.HasValidationErrorProperty">
      <summary>Identifies the HasValidationError dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.InactiveSelectionBackgroundProperty">
      <summary>Identifies the InactiveSelectionBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.InactiveSelectionForegroundProperty">
      <summary>Identifies the InactiveSelectionForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.IsBeingEditedProperty">
      <summary>Identifies the IsBeingEdited dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.IsCellFocusScopeProperty">
      <summary>Identifies the <strong>IsCellFocusScope</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.IsCurrentProperty">
      <summary>Identifies the IsCurrent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.IsDirtyProperty">
      <summary>Identifies the IsDirty dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.IsSelectedProperty">
      <summary>Identifies the IsSelected dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.IsValidationErrorRestrictiveProperty">
      <summary>Identifies the IsValidationErrorRestrictive
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.ParentCellProperty">
      <summary>Identifies the <strong>ParentCell</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.ParentColumnProperty">
      <summary>Identifies the ParentColumn dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.ParentRowProperty">
      <summary>Identifies the ParentRow dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.ReadOnlyProperty">
      <summary>Identifies the ReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.SelectionBackgroundProperty">
      <summary>Identifies the SelectionBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.SelectionForegroundProperty">
      <summary>Identifies the SelectionForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.ValidationErrorChangingEvent">
      <summary>Identifies the ValidationErrorChanging routed
event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Cell.ValidationErrorProperty">
      <summary>Identifies the ValidationError dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.EditBeginning">
      <summary>Raised when the BeginEdit method has been called to signal that the
edit process is about to begin.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.EditBegun">
      <summary>Raised after the EditBeginning event to signal that the edit
process has begun.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.EditCanceled">
      <summary>Raised after the EditCanceling event to signal that the edit
process has been canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.EditCanceling">
      <summary>Raised when the CancelEdit method has been called to signal that
the edit process is being canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.EditEnded">
      <summary>Raised after the EditEnding event to signal that the edit
process has ended.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.EditEnding">
      <summary>Raised when the EndEdit method has been called to signal that the edit
process is about to end.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Cell.ValidationErrorChanging">
      <summary>Raised when the value of the ValidationError property is about
to change.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellCollection.#ctor">
      <summary>Initializes a new instance of the CellCollection class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellCollection.#ctor">
      <summary>Initializes a new instance of the <strong>CellCollection</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellCollection.ClearItems">
      <summary>Removes all cells from the collection.</summary>
      <exception caption="InvalidOperationException" cref="T:System.InvalidOperationException">An attempt was made to remove a cell when the row is contained by a DataGridControl.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellCollection.InsertItem(System.Int32,Xceed.Wpf.DataGrid.Cell)">
      <summary>Inserts a cell at the specified index.</summary>
      <exception caption="InvalidOperationException" cref="T:System.InvalidOperationException">An attempt was made to insert a cell when the row is contained by a DataGridControl.</exception>
      <exception caption="ArgumentNullException" cref="T:System.ArgumentNullException">item is $$NULL$$.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellCollection.RemoveItem(System.Int32)">
      <summary>Removes the cell at the specified index.</summary>
      <exception caption="InvalidOperationException" cref="T:System.InvalidOperationException">An attempt was made to remove a cell when the row is contained by a DataGridControl.</exception>
      <exception caption="ArgumentOutOfRangeException" cref="T:System.ArgumentOutOfRangeException">index is less than zero or equal to or greater than count.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellCollection.SetItem(System.Int32,Xceed.Wpf.DataGrid.Cell)">
      <summary>Replaces an existing cell with the specified <em>item</em>.</summary>
      <exception caption="InvalidOperationException" cref="T:System.InvalidOperationException">An attempt was made to replace a cell when the row is contained by a DataGridControl.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellContentPresenter.EndInit">
      <summary>
        <para>Signals the object that initialization is complete.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellEditor.#ctor">
      <summary>Initializes a new instance of the CellEditor class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellEditor.CreateInstanceCore">
      <summary>Creates a new instance of the <strong>CellEditor</strong> class.</summary>
      <returns>The new <strong>CellEditor</strong> instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellEditor.GetHasError(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the value being edited by the cell editor is in error.</summary>
      <returns>
        <strong>true</strong> if the value being edited by the cell editor is in error; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellEditor.SetHasError(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the value being edited by the cell editor is in error.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellEditor.ActivationGestures">
      <summary>Retrieves a collection of the activation gestures supported by
the cell editor.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellEditor.CheckBoxEditor">
      <summary>Gets a static instance of a CheckBox control that will be used by default
for cells that have boolean content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellEditor.DatePickerEditor">
      <summary>Gets a static instance of a DatePicker control that will be used by
default for cells that have date-time content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellEditor.EditTemplate">
      <summary>Gets or sets the data template that will be used to edit the content of a <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Cell.html">cell</see>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellEditor.TextBoxEditor">
      <summary>Gets a static instance of a AutoSelectorTextBox control that will
be used by default for cells that have text content.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditor.ActivationGesturesProperty">
      <summary>Identifies the ActivationGestures dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditor.EditTemplateProperty">
      <summary>Identifies the EditTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditor.HasErrorProperty">
      <summary>Identifies the <strong>HasError</strong> attached property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellEditorContext.ForeignKeyConfiguration">
      <summary>Gets the ForeignKeyConfiguration of the cell editor's
parent column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellEditorContext.ParentColumn">
      <summary>Gets the cell editor's parent column.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditorContext.ForeignKeyConfigurationProperty">
      <summary>Identifies the ForeignKeyConfiguration
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.CellEditorContext.ParentColumnProperty">
      <summary>Identifies the ParentColumn dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellValidatingEventArgs.#ctor(System.Object,System.Globalization.CultureInfo,Xceed.Wpf.DataGrid.CellValidationContext)">
      <summary>Initializes a new instance of the CellValidatingEventArgs
class specifying the value to validate as well as the <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.CellValidationContext.html">validation context</see>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidatingEventArgs.Context">
      <summary>Gets the validation context of the value to validate. The
validation context includes both the associated <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Cell.html">cell</see> and data item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidatingEventArgs.Culture">
      <summary>Gets the <strong>CultureInfo</strong> for the value.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidatingEventArgs.Result">
      <summary>Represents the result returned by a validation rule's <strong>Validate</strong> method that indicates whether the value passed the validation
process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidatingEventArgs.Value">
      <summary>Gets the value to validated.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellValidationContext.#ctor(System.Object,Xceed.Wpf.DataGrid.Cell)">
      <summary>Initializes a new instance of the CellValidationContext class
specifying the <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Cell.html">cell</see> and data item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidationContext.Cell">
      <summary>Gets the cell in which the value to be validated is contained.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidationContext.DataItem">
      <summary>Gets the data item from which the value to be validated has been retrieved.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellValidationError.#ctor(Xceed.Wpf.DataGrid.ValidationRules.CellValidationRule,Xceed.Wpf.DataGrid.Cell,System.Object,System.Exception)">
      <summary>Initializes a new instance of the CellValidationError class
specifying various information on the validation rule that caused the caused the value to fail the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidationError.CellInError">
      <summary>Gets the cell whose value failed the UI-level validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidationError.ErrorContent">
      <summary>Gets an object containing the error content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidationError.Exception">
      <summary>Gets the exception that was raised when the value failed the UI-level validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidationError.RuleInError">
      <summary>Gets the CellValidationRule that caused the
value to fail the UI-level validation process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellValidationErrorRoutedEventArgs.#ctor(Xceed.Wpf.DataGrid.CellValidationError)">
      <summary>Initializes a new instance of the <strong>CellValidationErrorRoutedEventArgs</strong> class specifying the CellValidationError that occurred.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellValidationErrorRoutedEventArgs.#ctor(System.Windows.RoutedEvent,Xceed.Wpf.DataGrid.CellValidationError)">
      <summary>Initializes a new instance of the <strong>CellValidationErrorRoutedEventArgs</strong> class specifying the CellValidationError that occurred and using the supplied routed event identifier.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CellValidationErrorRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object,Xceed.Wpf.DataGrid.CellValidationError)">
      <summary>Initializes a new instance of the <strong>CellValidationErrorRoutedEventArgs</strong> class specifying the CellValidationError that occurred and using the supplied routed event identifier
and providing the opportunity to declare a different source for the event.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CellValidationErrorRoutedEventArgs.CellValidationError">
      <summary>Gets the CellValidationError that occurred during the
validation process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CollectionViewGroupExtensions.GetItemCount(System.Windows.Data.CollectionViewGroup)">
      <summary>Retrieves the item count for the specified <strong>CollectionViewGroup</strong>.</summary>
      <returns>The item count.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.CollectionViewGroupExtensions.GetItems(System.Windows.Data.CollectionViewGroup)">
      <summary>Retrieves the items for the specified <strong>CollectionViewGroup</strong>.</summary>
      <returns>An IList&lt;object&gt; containing the items in the <strong>CollectionViewGroup</strong>.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Column.AllowAutoFilter">
      <summary>Gets or sets a value indicating if the values in the column can be filtered using automatic filtering.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Column.AllowGroup">
      <summary>Gets or sets a value indicating if the values in the column can be grouped.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Column.AllowSort">
      <summary>Gets or sets a value indicating if the values in the column can be sorted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Column.DisplayMemberBindingInfo">
      <summary>Gets or sets the binding information between a column and its corresponding field in the underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Column.ForeignKeyConfiguration">
      <summary>Gets or sets a ForeignKeyConfiguration through which the
visual representation of a foreign key description can be configured.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Column.ForeignKeyConfigurationProperty">
      <summary>Identifies the ForeignKeyConfiguration dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnBase.GetFittedWidth">
      <summary>Retrieves the fitted width of the column, in device-independent units (1/96th inch per unit).</summary>
      <returns>The fitted width of the column, in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnBase.ToString">
      <summary>Returns the string representation of the column.</summary>
      <returns>The string representation of the column.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event using the specified
<strong>PropertyChangedEventArgs</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.ActualWidth">
      <summary>Gets the actual width of the column considering the Width,
<see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.ColumnBase~MinWidth.html">MinWidth</see>, and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.ColumnBase~MaxWidth.html">MaxWidth</see> properties.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.AllowAutoFilter">
      <summary>Gets or sets a value indicating whether the values of a column can be filtered through the auto-filter drop down displayed in its corresponding
ColumnManagerCell. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.AllowGroup">
      <summary>Gets or sets a value indicating whether the data items in a grid can be grouped according to the values of the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.AllowSort">
      <summary>Gets or sets a value indicating whether the data items in a grid can be sorted according to the values of the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.AutoFilterControlStyle">
      <summary>Gets or sets the style that will be used by the column's associated AutoFilterControl. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CanBeCurrentWhenReadOnly">
      <summary>Gets or sets a value indicating whether cells in the column can receive focus when the parent column's ReadOnly property is set to <strong>true</strong>. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellContentTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to display the cells' content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellContentTemplateSelector">
      <summary>Gets or sets a <strong>DataTemplateSelector</strong> that provides a way to apply a different CellContentTemplate based on custom logic.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellEditor">
      <summary>Gets or sets the CellEditor that contains the information required to
display the template that will be used to edit the content of the cells contained in the column as well as the activation gestures that activate the template.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellEditorDisplayConditions">
      <summary>Gets or sets a value indicating under what conditions the editors for the cells contained in the column are displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellErrorStyle">
      <summary>Gets or sets the style that will be used by the cells contained in the column when their content fails the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellHorizontalContentAlignment">
      <summary>Gets or sets a value representing the horizontal content alignment of cells contained in the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellValidationRules">
      <summary>Gets the list of CellValidationRules against
which the content of the cells contained in the column are validated before they exist edit mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.CellVerticalContentAlignment">
      <summary>Gets or sets a value representing the vertical content alignment of cells contained in the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.DataGridControl">
      <summary>Gets the column's parent data-grid control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.FieldName">
      <summary>Gets or sets the <strong>case-sensitive</strong> field name that uniquely identifies the column in a grid's column collection.</summary>
      <exception caption="" cref="System.InvalidOperationException">Thrown when a column's FieldName property is set after the column has been added to a grid's column collection.</exception>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.GroupConfiguration">
      <summary>Gets or sets the group configuration that will be applied to the groups that are created from the values of this column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.GroupDescription">
      <summary>Gets or sets the group description that is used whenever groups are created according to the values of this column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.GroupValueTemplate">
      <summary>Gets or sets the template that will be used by a group to display its value when the group is created according the values of the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.GroupValueTemplateSelector">
      <summary>Gets or sets a <strong>DataTemplateSelector</strong> that provides a way to apply a different GroupValueTemplates based on custom logic.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.HasFixedWidth">
      <summary>Gets a value indicating whether the column has a fixed width.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.HasValidationError">
      <summary>Gets a value indicating whether the content of one of the cells contained in
the column failed the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.Index">
      <summary>Gets the index of the column in a grid's Column collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.IsFirstVisible">
      <summary>Gets a value indicating whether the column is the first visible column in a grid's.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.IsLastVisible">
      <summary>Gets a value indicating whether the column is the last visible column in a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.IsMainColumn">
      <summary>Gets or sets a value indicating whether the column is a grid's main (primary) column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.MaxWidth">
      <summary>Gets or sets the maximum width of the column, in device-independent units (1/96th inch per unit).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.MinWidth">
      <summary>Gets or sets the minimum width of the column, in device-independent units (1/96th inch per unit).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.OverrideReadOnlyForInsertion">
      <summary>Gets or sets a value indicating whether an InsertionRow can be edited
regardless of the value of the <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.ColumnBase~ReadOnly.html">ReadOnly</see> property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.ReadOnly">
      <summary>Gets or sets a value indicating whether the content of the cells in the column can be edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.ShowInColumnChooser">
      <summary>Gets or sets a value indicating if the title of the column appears in the column chooser context menu, allowing its visibility to be changed at
run time by the end user.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.SortDirection">
      <summary>Gets a value indicating the direction in which the values contained in the column are sorted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.SortIndex">
      <summary>Gets the sort index of the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.TextTrimming">
      <summary>Gets or sets a value that indicates the text trimming behavior to employ when <strong>textual</strong> content overflows the content area.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.TextWrapping">
      <summary>Gets or sets a value indicating how <strong>textual</strong> content should be wrapped.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.Title">
      <summary>Gets or sets the data displayed in a column's corresponding ColumnManagerCell and/or <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.GroupByItem.html">GroupByItem</see>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.TitleTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to display the Title's content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.TitleTemplateSelector">
      <summary>Gets or sets a <strong>DataTemplateSelector</strong> that provides a way to apply a different TitleTemplates based on custom logic.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.Visible">
      <summary>Gets or sets a value indicating whether the column is visible.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.VisiblePosition">
      <summary>Gets or sets the visible position of the column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnBase.Width">
      <summary>Gets or sets the width of the column, in device-independent units (1/96th inch per unit).</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.ActualWidthProperty">
      <summary>Identifies the ActualWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.AutoFilterControlStyleProperty">
      <summary>Identifies the AutoFilterControlStyle dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CanBeCurrentWhenReadOnlyProperty">
      <summary>Identifies the CanBeCurrentWhenReadOnlyProperty
dependency property. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CellContentTemplateProperty">
      <summary>Identifies the CellContentTemplate dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CellContentTemplateSelectorProperty">
      <summary>Identifies the CellContentTemplateSelector
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CellEditorDisplayConditionsProperty">
      <summary>Identifies the CellEditorDisplayConditions
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CellEditorProperty">
      <summary>Identifies the CellEditor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CellErrorStyleProperty">
      <summary>Identifies the CellErrorStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CellHorizontalContentAlignmentProperty">
      <summary>Identifies the CellHorizontalContentAlignment dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.CellVerticalContentAlignmentProperty">
      <summary>Identifies the CellVerticalContentAlignment
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.FieldNameProperty">
      <summary>Identifies the FieldName dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.GroupConfigurationProperty">
      <summary>Identifies the GroupConfiguration dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.GroupDescriptionProperty">
      <summary>Identifies the GroupDescription dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.GroupValueTemplateProperty">
      <summary>Identifies the GroupValueTemplate dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.GroupValueTemplateSelectorProperty">
      <summary>Identifies the GroupValueTemplateSelector
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.HasFixedWidthProperty">
      <summary>Identifies the HasFixedWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.HasValidationErrorProperty">
      <summary>Identifies the HasValidationError dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.IsFirstVisibleProperty">
      <summary>Identifies the IsFirstVisible dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.IsLastVisibleProperty">
      <summary>Identifies the IsLastVisible dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.MaxWidthProperty">
      <summary>Identifies the MaxWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.MinWidthProperty">
      <summary>Identifies the MinWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.OverrideReadOnlyForInsertionProperty">
      <summary>Identifies the OverrideReadOnlyForInsertion
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.ReadOnlyProperty">
      <summary>Identifies the ReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.ShowInColumnChooserProperty">
      <summary>Identifies the ShowInColumnChooser dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.SortDirectionProperty">
      <summary>Identifies the SortDirection dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.SortIndexProperty">
      <summary>Identifies the SortIndex dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.TextTrimmingProperty">
      <summary>Identifies the TextTrimming dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.TextWrappingProperty">
      <summary>Identifies the TextWrapping dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.TitleProperty">
      <summary>Identifies the Title dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.TitleTemplateProperty">
      <summary>Identifies the TitleTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.TitleTemplateSelectorProperty">
      <summary>Identifies the TitleTemplateSelector dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.VisiblePositionProperty">
      <summary>Identifies the VisiblePosition dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.VisibleProperty">
      <summary>Identifies the Visible dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnBase.WidthProperty">
      <summary>Identifies the Width dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.ColumnBase.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnChooserContextMenu.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Called when the <strong>ItemsSource</strong> property changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnChooserContextMenu.OnOpened(System.Windows.RoutedEventArgs)">
      <summary>Invoked when an unhandled <strong>Opened</strong> event reaches an element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnChooserContextMenu.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>ColumnChooserContextMenu</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to
support dynamic style (view or theme modifications) changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnChooserContextMenu.SortOrder">
      <summary>Gets or sets a value representing the order in which the column titles displayed in the column-chooser context menu are displayed.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnChooserContextMenu.SortOrderProperty">
      <summary>Identifies the SortOrder dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnCollection.ClearItems">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnCollection.InsertItem(System.Int32,Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>Inserts a column at the specified <em>index</em>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>Raises the <strong>CollectionChanged</strong> event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnCollection.RemoveItem(System.Int32)">
      <summary>Removes the column at the specified <em>index</em>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnCollection.SetItem(System.Int32,Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>Replaces an existing column with the specified <em>column</em>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnCollection.MainColumn">
      <summary>Gets or sets a grid's main (primary) column.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.ClearContainer">
      <summary>Clears the content of the column-manager cell.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.OnCreateAutomationPeer">
      <summary>Creates an appropriate <strong>AutomationPeer</strong> for this <strong>ColumnManagerCell</strong> instance.</summary>
      <returns>The <strong>AutomationPeer</strong> for this <strong>ColumnManagerCell</strong> instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>LostMouseCature</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonDown</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonUp</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseMove</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.PrepareContainer(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Prepares a container in the specified DataGridContext for the <em>item</em>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerCell.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>ColumnManagerCell</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support
dynamic style (view or theme modifications) changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnManagerCell.IsBeingDragged">
      <summary>Gets a value if the ColumnManagerCell is currently being dragged.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnManagerCell.IsPressed">
      <summary>Gets a value indicating whether the ColumnManagerCell is
currently pressed.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnManagerCell.IsBeingDraggedProperty">
      <summary>Identifies the IsBeingDragged dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnManagerCell.IsPressedProperty">
      <summary>Identifies the IsPressed dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerRow.CreateCell(Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>Create a new Cell in the row.</summary>
      <returns>A reference to the newly created Cell.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerRow.IsValidCellType(Xceed.Wpf.DataGrid.Cell)">
      <summary>Retrieves a value indicating whether the type of the specified cell is supported by the row.</summary>
      <returns>
        <strong>true</strong> if the type of the cell is supported by the row; <strong>false</strong> otherwise. By default, all ColumnManagerCells will return <strong>true</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerRow.OnCreateAutomationPeer">
      <summary>Creates an appropriate <strong>AutomationPeer</strong> for this <strong>ColumnManagerRow</strong> instance.</summary>
      <returns>The <strong>AutomationPeer</strong> for this <strong>ColumnManagerRow</strong> instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerRow.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>PreviewMouseLeftButtonDown</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ColumnManagerRow.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>ColumnManagerRow</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support
dynamic style (view or theme modifications) changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnManagerRow.AllowAutoFilter">
      <summary>Gets or sets a value indicating whether the end user can modify the values used to automatically filter the data items through the column-manager
row. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnManagerRow.AllowColumnReorder">
      <summary>Gets or sets a value indicating whether the end user can reorder the columns' visible positions.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnManagerRow.AllowColumnResize">
      <summary>Gets or sets a value indicating whether the end user can resize the width of the columns in a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ColumnManagerRow.AllowSort">
      <summary>Gets or sets a value indicating whether the end user can sort columns.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnManagerRow.AllowAutoFilterProperty">
      <summary>Identifies the AllowAutoFilter dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnManagerRow.AllowColumnReorderProperty">
      <summary>Identifies the AllowColumnReorder dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnManagerRow.AllowColumnResizeProperty">
      <summary>Identifies the AllowColumnResize dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ColumnManagerRow.AllowSortProperty">
      <summary>Identifies the AllowSort dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CommitItemsEventArgs.AsyncCommitInfo">
      <summary>Gets an AsyncCommitInfo that provides information on the
virtualized items to allow those that have been modified to be committed to the underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.CommitItemsEventArgs.CollectionView">
      <summary>Gets the DataGridVirtualizingCollectionView to
which the grid is bound.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataCell.#ctor">
      <summary>Initializes a new instance of the DataCell class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataCell.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the DataCell class specifying the parent
column's <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Column~FieldName.html">field name</see> and the cell's content.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataCell.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>DataCell</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic
style (view or theme modifications) changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridBindingInfo.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridBindingInfo</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.BindsDirectlyToSource">
      <summary>Gets or sets a value indicating whether the Path is
evaluated relative to the data item or the data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.Converter">
      <summary>Gets or sets the convert that will be used to convert the value returned by the binding.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.ConverterCulture">
      <summary>Gets or sets the <strong>CultureInfo</strong> in which the values returned by the Converter will be evaluated.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.ConverterParameter">
      <summary>Gets or sets the parameter that will be passed to the Converter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.ElementName">
      <summary>Gets or sets the name of the element that will be used as the binding source object.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.FallbackValue">
      <summary>Gets or sets the value that will be used when the binding is unable to return a value.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.NotifyOnSourceUpdated">
      <summary>Gets or sets a value indicating whether to provide notification when a value is transferred from the binding target to the binding source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.Path">
      <summary>Gets or sets the path to the binding source property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.ReadOnly">
      <summary>Gets or sets a value indicate whether the binding is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.UpdateSourceExceptionFilter">
      <summary>Gets or sets a callback that can be handled to provide custom logic for when an exception is thrown by the binding engine during the update of
the binding source value.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.ValidationRules">
      <summary>Gets a collection of rules that will be used to validate user input.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridBindingInfo.XPath">
      <summary>Gets or sets the <strong>XPath</strong> query that returns the value to use on the XML binding source.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.#ctor">
      <summary>Initializes a new instance of the DataGridCollectionView
class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.#ctor(System.Collections.IEnumerable)">
      <summary>Initializes a new instance of the <strong>DataGridCollectionView</strong> class specifying the collection—which must implement the
<strong>IEnumerable</strong> interface—around which the <strong>DataGridCollectionView</strong> will be created.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.#ctor(System.Collections.IEnumerable,System.Type)">
      <summary>Initializes a new instance of the <strong>DataGridCollectionView</strong> class specifying the collection—which must implement the
<strong>IEnumerable</strong> interface—around which the <strong>DataGridCollectionView</strong> will be created, including the type of the items contained in
the collection or added through the SourceItems property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.#ctor(System.Collections.IEnumerable,System.Type,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <strong>DataGridCollectionView</strong> class specifying the collection—which must implement the
<strong>IEnumerable</strong> interface—around which the <strong>DataGridCollectionView</strong> will be created, including the type of the items contained in
the collection or added through the SourceItems property, as
well as indicating whether item properties and detail descriptions are to be automatically created.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.#ctor(System.Collections.IEnumerable,System.Type,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <strong>DataGridCollectionView</strong> class specifying the collection—which must implement the
<strong>IEnumerable</strong> interface—around which the <strong>DataGridCollectionView</strong> will be created, including the type of the items contained in
the collection or added through the SourceItems property, as
well as indicating whether item properties, detail descriptions, and foreign key descriptions are to be automatically created.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.Contains(System.Object)">
      <summary>Returns a value indicating whether the specified item exists in the collection.</summary>
      <returns>
        <strong>true</strong> if the item exists in the collection; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.GetEnumerator">
      <summary>Retrieves an object that can be used to enumerate the items in the view.</summary>
      <returns>An <strong>IEnumerator</strong> that can be used to enumerate the items in the view.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.GetItemAt(System.Int32)">
      <summary>Retrieves the item at the specified index in the view.</summary>
      <returns>The item at the specified <em>index</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.IndexOf(System.Object)">
      <summary>Returns the zero-based index of the specified item.</summary>
      <returns>The zero-based index of <em>item</em>. If the item is not found, -1 is returned.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index as the new CurrentItem .</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionView.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified index from the underlying data source.</summary>
      <exception caption="DataGridException" cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridException">RemoveAt was canceled.</exception>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionView.AllowNew">
      <summary>Gets a value indicating whether new items can be added to the collection through the AddNew method.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionView.Count">
      <summary>Gets the number of items in the view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionView.IsEmpty">
      <summary>Gets a value indicating whether the <strong>filtered</strong> view is empty.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionView.SourceCollection">
      <summary>Gets the underlying un-filtered collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionView.SourceItems">
      <summary>Gets the items that are contained in the SourceCollection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionView.StatFunctions">
      <summary>Gets a collection of the statistical functions whose results can be used by various elements throughout a grid. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.AddNew">
      <summary>Adds a new item to the underlying data source.</summary>
      <exception caption="" cref="System.InvalidOperationException">When manually handling the item-insertion process the CreatingNewItem, CommittingNewItem, and CancelingNewItem events must all be handled.</exception>
      <returns>A reference to the item that was added to the list.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CancelEdit">
      <summary>Cancels the edit process.</summary>
      <exception caption="" cref="System.InvalidOperationException">When manually handling the edit process the BeginningEdit, CommittingEdit, and CancelingEdit events must all be handled</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CancelNew">
      <summary>Discards the new item added through a call to the AddNew method before it is committed.</summary>
      <exception caption="" cref="System.InvalidOperationException">When manually handling the item-insertion process the CreatingNewItem, CommittingNewItem, and CancelingNewItem events must all be handled.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CommitEdit">
      <summary>Commits the modifications made to the item in the underlying data source that is being edited.</summary>
      <exception caption="DataGridException" cref="">CommitEdit was canceled.</exception>
      <exception caption="" cref="System.InvalidOperationException">When manually handling the edit process the BeginningEdit, CommittingEdit, and CancelingEdit events must all be handled.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CommitNew">
      <summary>Commits the new item to the underlying data source.</summary>
      <exception caption="" cref="System.InvalidOperationException">When manually handling the item-insertion process the CreatingNewItem, CommittingNewItem, and CancelingNewItem events must all be handled.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.DeferRefresh">
      <summary>Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</summary>
      <returns>An <strong>IDisposable</strong> object that you can use to dispose of the calling object.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.EditItem(System.Object)">
      <summary>Edits the specified item in the underlying data source.</summary>
      <exception caption="" cref="System.InvalidOperationException">When manually handling the edit process the BeginningEdit, CommittingEdit, and CancelingEdit events must all be handled.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.GetDistinctValues(System.String)">
      <summary>Retrieves the distinct values for the column that has the specified field name. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.MoveCurrentTo(System.Object)">
      <summary>Sets the specified item as the new CurrentItem.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.MoveCurrentToFirst">
      <summary>Sets the first item in the view as the new CurrentItem.</summary>
      <returns>
        <strong>true</strong> if the specified item belongs to the view; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.MoveCurrentToLast">
      <summary>Sets the last item in the view as the new CurrentItem.</summary>
      <returns>
        <strong>true</strong> if the specified item belongs to the view; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.MoveCurrentToNext">
      <summary>Sets the next item in the view as the new CurrentItem.</summary>
      <returns>
        <strong>true</strong> if the specified item belongs to the view; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.MoveCurrentToPrevious">
      <summary>Sets the previous item in the view as the new CurrentItem.</summary>
      <returns>
        <strong>true</strong> if the specified item belongs to the view; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.PassesFilter(System.Object)">
      <summary>Returns a value indicating whether the specified item in the underlying data source passes the filtering criteria, and is therefore included in
the view.</summary>
      <returns>&lt;<strong>true</strong> if the item is to be included in the view; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.Refresh">
      <summary>Recreates the view.</summary>
      <returns>
        <para style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 8px">
          <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
When <strong>Refresh</strong> is called, the view will be cleared and reconstructed from the items in the underlying source. If the items were provided
directly through the <strong>Items</strong> collection, they will not be touched nor will the view be cleared.</span>
        </para>
        <para style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 8px">Once the view has been refreshed, any sorting, grouping, or filtering criteria that were applied to the view
will be re-applied.</para>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.Remove(System.Object)">
      <exception caption="DataGridException" cref="">Remove was canceled.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.RemoveAt(System.Int32)">
      <summary>Removes the item at the specified index from the underlying data source.</summary>
      <exception caption="DataGridException" cref="">RemoveAt was canceled.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
Raises the <strong>CollectionChanged</strong>event.</span>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.AutoCreateDetailDescriptions">
      <summary>Gets a value indicating whether the detail descriptions
are automatically created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.AutoCreateForeignKeyDescriptions">
      <summary>Gets a value indicating whether the foreign key descriptions are automatically created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.AutoCreateItemProperties">
      <summary>Gets a value indicating whether the item properties are automatically created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.AutoFilterMode">
      <summary>Gets or sets a value indicating how automatic filtering of the data items will be performed.
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.AutoFilterValues">
      <summary>Gets a dictionary that contains a list of the view's DataGridItemProperty objects with their corresponding auto-filter values. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CanAddNew">
      <summary>Gets a value indicating whether a new item can be added to the collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CanAutoFilter">
      <summary>Gets a value indicating whether the collection view supports automatic filtering.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CanCancelEdit">
      <summary>Gets a value indicating whether the collection can discard pending changes and restore the original values of an edited object.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CanFilter">
      <summary>Gets a value indicating whether the view supports filtering.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CanGroup">
      <summary>Gets a value indicating whether the view can be grouped.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CanRemove">
      <summary>Gets a value indicating whether an item can be removed from the collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CanSort">
      <summary>Gets a value indicating whether the view can be sorted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.Culture">
      <summary>Gets or sets the culture to use during sorting.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CurrentAddItem">
      <summary>Gets the item that is currently being added to the underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CurrentEditItem">
      <summary>Gets the item in the underlying data source that is currently being edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CurrentItem">
      <summary>Gets the view's current item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CurrentPosition">
      <summary>Gets the position of the CurrentItem within
the view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.DetailDescriptions">
      <summary>Gets a collection of DataGridDetailDescription objects
that provide information on the details that will be contained in a grid, including sorting, grouping, and child detail descriptions.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.DistinctValues">
      <summary>Gets a dictionary that contains a list of DataGridItemProperty
objects with their corresponding distinct values. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <exception caption="" cref="System.NotSupportedException">The ICollection&lt;&gt;, IEnumerable&lt;&gt;, and IEnumerable interfaces are not supported. Only IDictionary members can be used.</exception>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.DistinctValuesConstraint">
      <summary>Gets or sets a value representing the constraint applied to the DistinctValues when <strong>automatically</strong> filtering data
items. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.Filter">
      <summary>Gets or sets a callback used to determine if an item is suitable for inclusion in the view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.FilterCriteriaMode">
      <summary>Gets or sets a value indicating how filters entered into a FilterRow are
applied. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.GroupDescriptions">
      <summary>Gets a collection of <strong>GroupDescription</strong> objects that describe how the items in the collection are grouped in the view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.Groups">
      <summary>Gets the runtime groups that are created based on the GroupDescriptions.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.IsAddingNew">
      <summary>Gets a value indicating whether an add transaction is in progress.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.IsCurrentAfterLast">
      <summary>Gets a value indicating whether the CurrentItem is beyond the end of the collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.IsCurrentBeforeFirst">
      <summary>Gets a value indicating whether the CurrentItem is before the beginning of the collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.IsEditingItem">
      <summary>Gets a value indicating whether an item in the underlying data source is being edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.ItemProperties">
      <summary>Gets the DataGridItemProperty objects that determine the
characteristics of the items contained in the view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.ItemType">
      <summary>Gets the type of the items contained in the collection view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.NeedsRefresh">
      <summary>Gets a value that indicates whether this view needs to be refreshed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.ParentDetailDescription">
      <summary>Gets the parent detail description of the collection view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.SortDescriptions">
      <summary>Gets a collection of <strong>SortDescription</strong> objects that describe how the items in the collection are sorted in the view.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.AutoFilterValuesChanged">
      <summary>
        <para>Occurs after the <strong>AutoFilterValues</strong> of the <strong>DataGridItemProperty</strong> of a detail level changes. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.BeginningEdit">
      <summary>Raised when the EditItem method has been called
to signal that the edit process of an item in the underlying data source is about to begin.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CancelingEdit">
      <summary>Raised when the CancelEdit &gt;method has
been called to signal that the edit process of an item in the underlying data source is about to be canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CancelingNewItem">
      <summary>Raised when the CancelNew method has been
called to signal that the insertion process of a new item is about to be canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CommittingEdit">
      <summary>Raised when the CommitEdit method has been
called to signal that modifications made to an item in the underlying data source are about to be committed.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CommittingNewItem">
      <summary>Raised when the CommitNew method has been
called to signal that a new item is about to be committed to the underlying data source.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.CreatingNewItem">
      <summary>Raised when the AddNew method has been called to
signal that a new item is about to be created.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.EditBegun">
      <summary>Raised after the BeginningEdit event to
signal that the edit process of an item in the underlying data source has begun.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.EditCanceled">
      <summary>Raised after the CancelingEdit event to
signal that the edit process of an item in the underlying data source has been canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.EditCommitted">
      <summary>Raised after the CommittingEdit event
to signal that the modifications made to an item in the underlying data source have been committed.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.InitializingNewItem">
      <summary>Raised after the CreatingNewItem
event to allow the new item to be initialized.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.ItemRemoved">
      <summary>Raised after the RemovingItem event to
signal that an item has been removed from the underlying data source.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.NewItemCanceled">
      <summary>Raised after the CancelingNewItem
event to signal that the insertion process of a new item has been canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.NewItemCommitted">
      <summary>Raised after the CommittingNewItem
event to signal that a new item has been committed to the underlying data source.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.NewItemCreated">
      <summary>Raised after the CreatingNewItem and
<see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridCollectionViewBase~InitializingNewItem_EV.html">InitializingNewItem</see> events to signal that a new
item has been created.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridCollectionViewBase.RemovingItem">
      <summary>Raised when the Remove ora
href="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridCollectionViewBase~RemoveAt.html"&gt;RemoveAt methods have been called to signal that an item is about
to be removed from the underlying data source.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)">
      <summary>Raised when the <strong>CollectionViewType</strong> property is changed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewSource.StatFunctions">
      <summary>Gets a collection of the statistical functions whose results can be used by various elements throughout a grid. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.OnCollectionViewTypeChanged(System.Type,System.Type)">
      <summary>Raised when the <strong>CollectionViewType</strong> property is changed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.AutoCreateDetailDescriptions">
      <summary>Gets a value indicating whether the detail descriptions
are automatically created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.AutoCreateForeignKeyDescriptions">
      <summary>Gets a value indicating whether the foreign key descriptions are automatically created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.DefaultCalculateDistinctValues">
      <summary>Get or sets the default value of the CalculateDistinctValues property when a <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridItemProperty.html">DataGridItemProperty</see> has not explicitly set its value. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.FilterCriteriaMode">
      <summary>Gets or sets a value indicating how filters entered into a FilterRow are
applied. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.Source">
      <summary>Gets or sets the collection from which the view is created.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.AutoCreateDetailDescriptionsProperty">
      <summary>Identifies the AutoCreateDetailDescriptions dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.AutoCreateForeignKeyDescriptionsProperty">
      <summary>Identifies the AutoCreateForeignKeyDescriptions
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.AutoCreateItemPropertiesProperty">
      <summary>Identifies the AutoCreateItemProperties dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.AutoFilterModeProperty">
      <summary>Identifies the AutoFilterMode
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.DefaultCalculateDistinctValuesProperty">
      <summary>Identifies the DefaultCalculateDisctinctValues
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.DistinctValuesConstraintProperty">
      <summary>Identifies the DistinctValuesConstraint dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.FilterCriteriaModeProperty">
      <summary>Identifies the FilterCriteriaMode dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCollectionViewSourceBase.ItemTypeProperty">
      <summary>Identifies the ItemType dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.ApplyFilter">
      <summary>Represents the <strong>ApplyFilter</strong> command, which requests that filter criteria be applied. By default, Enter.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.BeginEdit">
      <summary>Represents the <strong>BeginEdit</strong> command, which requests the row enters edit mode. By default, <em>F2</em>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.CancelEdit">
      <summary>Represents the <strong>CancelEdit</strong> command, which requests that row exit edit mode and any changes be discarded. By default,
<em>Escape</em>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.ClearFilter">
      <summary>Represents the <strong>ClearFilter</strong> command, which requests that any and all filter criteria be cleared.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.CollapseDetails">
      <summary>Represents the <strong>CollapseDetails</strong> command, which requests that the associated detail and its possible child details be collapsed.
By default, the <em>Left arrow</em> key.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.CollapseGroup">
      <summary>Represents the <strong>CollapseGroup</strong> command, which requests that the associated group be collapsed. By default, the <em>Left arrow</em> key.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.EndEdit">
      <summary>Represents the <strong>EndEdit</strong> command, which requests that the row exit edit mode. By default, <em>Enter</em>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.ExpandDetails">
      <summary>Represents the <strong>ExpandDetails</strong> command, which requests that the associated detail and its possible child details be expanded. By
default, the <em>Right arrow</em> key.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.ExpandGroup">
      <summary>Represents the <strong>ExpandGroup</strong> command, which requests that the associated group be expanded. By default, the <em>Right arrow</em> key.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.Refresh">
      <summary>Represents the <strong>Refresh</strong> command, which requests that the items in the grid be refreshed. By default, F5.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.ToggleDetailExpansion">
      <summary>Represents the <strong>ToggleDetailExpansion</strong> command, which requests that the associated detail and its possible child details be
collapsed if the root detail is expanded, and expanded if the root detail is collapsed. By default, <em>Space</em> or double-clicking the left mouse button. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridCommands.ToggleGroupExpansion">
      <summary>Represents the <strong>ToggleGroupExpansion</strong> command, which requests that the associated group be collapsed if it is expanded, and expanded if it is collapsed. By default, <em>Space</em>
or double-clicking the left mouse button.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCommittingNewItemEventArgs.#ctor(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object,System.Boolean)">
      <summary>Initializes a new instance of the <strong>DataGridCommittingNewItemEventArgs</strong> class specifying the new item, the collection view to which
it is to be added, and a value indicating whether the process is to be canceled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCommittingNewItemEventArgs.Index">
      <summary>Gets or sets the index at which the item is to be inserted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCommittingNewItemEventArgs.NewCount">
      <summary>Gets or sets the new item count.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.AreDetailsExpanded(System.Object)">
      <summary>Retrieves a value indicating whether the details for the specified data item are expanded.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified data item is not part of the current context.</exception>
      <exception caption="" cref="System.ArgumentNullException"></exception>
      <returns>
        <strong>true</strong> if the details of the specified data item are expanded; <strong>false</strong> if they are collapsed. Cannot be $$NULL$$.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.CancelEdit">
      <summary>Cancels the edit process of the item that is being edited.</summary>
      <exception caption="" cref="System.InvalidOperationException">The item being edited is not part of the current context.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.CollapseDetails(System.Object)">
      <summary>Collapses the details owned by the specified data item. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <exception caption="" cref="System.InvalidOperationException">The specified data item is not part of the current context.</exception>
      <exception caption="" cref="System.ArgumentNullException"></exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.CollapseGroup(System.Windows.Data.CollectionViewGroup)">
      <summary>Collapses the specified group.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified CollectionViewGroup is not part of the current context.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.EndEdit">
      <summary>Ends the edit process of the item that is being edited.</summary>
      <exception caption="" cref="System.InvalidOperationException">The item being edited is not part of the current context.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.ExpandDetails(System.Object)">
      <summary>Expands any details owned by the specified data item. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <exception caption="" cref="System.InvalidOperationException">The specified data item is not part of the current context.</exception>
      <exception caption="" cref="System.ArgumentNullException"></exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.ExpandGroup(System.Windows.Data.CollectionViewGroup)">
      <summary>Expands the specified group.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified group is not part of the current context.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.GetChildContexts">
      <summary>Retrieves the child DataGridContexts of the context.</summary>
      <returns>An <strong>IEnumerable</strong> that contains the child DataGridContexts of the context. Can be empty if the context does not have child
contexts.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.GetContainerFromItem(System.Object)">
      <summary>Retrieves the container of the specified item.</summary>
      <returns>A <strong>DependencyObject</strong> representing the container of the specified item. Can be $$NULL$$ if the item belongs to the context but does
not have a container.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.GetGroupFromCollectionViewGroup(System.Windows.Data.CollectionViewGroup)">
      <summary>Retrieves the group for the specified <strong>CollectionViewGroup</strong>.</summary>
      <returns>A reference to <strong>CollectionViewGroup</strong>'s corresponding Group.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.GetItemFromContainer(System.Windows.DependencyObject)">
      <summary>Retrieves an item for the specified container.</summary>
      <returns>The item for the specified <em>container.</em></returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.GetParentGroupFromItem(System.Object)">
      <summary>Retrieves the parent group for the specified item.</summary>
      <returns>A <strong>CollectionViewGroup</strong> representing the parent group of the specified item. Can be $$NULL$$ if the item is part of the context
but does not have parent group.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.IsGroupExpanded(System.Windows.Data.CollectionViewGroup)">
      <summary>Retrieves a value indicating whether the specified group is expanded.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified CollectionViewGroup is not part of the current context. </exception>
      <returns>
        <strong>true</strong> if the group is expanded; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.ToggleDetailExpansion(System.Object)">
      <summary>Toggles any details owned by the specified data item. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <exception caption="" cref="System.InvalidOperationException">The specified item is not part of the current context.</exception>
      <exception caption="" cref="System.ArgumentNullException"></exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.ToggleGroupExpansion(System.Windows.Data.CollectionViewGroup)">
      <summary>Toggles the specified group.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified CollectionViewGroup is not part of the current context.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.BeginEdit">
      <summary>Places the context's current item in edit mode.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.BeginEdit(System.Object)">
      <summary>Places the specified item in edit mode.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified item is not part of the current context.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.GetChildContext(System.Object,Xceed.Wpf.DataGrid.DetailConfiguration)">
      <summary>Retrieves the child DataGridContext created from the specified
<see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DetailConfiguration.html">DetailConfiguration</see> of an item.</summary>
      <exception caption="" cref="System.ArgumentNullException"></exception>
      <returns>The child DataGridContext of the specified <em>parentItem</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridContext.GetChildContext(System.Object,System.String)">
      <summary>Retrieves the child DataGridContext created from the detail
configuration that has the specified relation name.</summary>
      <exception caption="" cref="System.ArgumentNullException"></exception>
      <returns>The child DataGridContext of the specified <em>parentItem</em>.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.AllowDetailToggle">
      <summary>Gets a value indicating whether the end user can toggle the expansion state of details in the context. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.AutoFilterValues">
      <summary>Gets a dictionary that contains a list of the context's DataGridItemProperty objects with their corresponding auto-filter values. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.ColumnChooserColumns">
      <summary>Gets a collection of the columns whose titles are displayed in the column-chooser context menu.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.Columns">
      <summary>Gets a list of the columns contained in the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.CurrentColumn">
      <summary>Gets or sets the context's current column.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.CurrentItem">
      <summary>Gets or sets the context's current data item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.CurrentItemIndex">
      <summary>Gets or sets the index of the context's current data item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.DataGridControl">
      <summary>Gets the context's parent DataGridControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.DefaultGroupConfiguration">
      <summary>Gets the default configuration that will be used by any groups in the context for which an explicit group configuration is not provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.DetailConfigurations">
      <summary>Gets a list of the configurations that will be applied to their corresponding details. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.DistinctValues">
      <summary>Gets a dictionary that contains a list of the context's DataGridItemProperty objects with their corresponding distinct values. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <exception caption="" cref="System.NotSupportedException">The ICollection&lt;&gt;, IEnumerable&lt;&gt;, and IEnumerable interfaces are not supported. Only IDictionary members can be used.</exception>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.Footers">
      <summary>Gets a collection that contains the items that are located in the footer section of the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.GroupConfigurationSelector">
      <summary>Gets a group-configuration selector that will be used to select the appropriate configuration for a group in the context based on its information
and/or content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.GroupLevelDescriptions">
      <summary>Gets a collection of GroupLevelDescription objects that
contain information on each group level contained in the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.HasDetails">
      <summary>Gets a value indicating whether the context has details. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.Headers">
      <summary>Gets a collection that contains the items that are located in the header section of the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.IsCurrent">
      <summary>Gets a value indicating whether the context is current.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.ItemContainerStyle">
      <summary>Gets the style that is applied to the container element (DataRow) generated
for each item in the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.ItemContainerStyleSelector">
      <summary>Gets a style selector that selects the appropriate style to apply to each generated container element (DataRow) in the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.Items">
      <summary>Gets the collection view that was used to generate the content of the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.MaxGroupLevels">
      <summary>Gets a value indicating the maximum number of group levels that can be created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.MaxSortLevels">
      <summary>
        <br />
Gets a value indicating the maximum number of sort levels that can be created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.ParentDataGridContext">
      <summary>Gets the context's parent DataGridContext.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.ParentItem">
      <summary>Gets the parent data item to which the context belongs</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.SelectedCellRanges">
      <summary>Gets the cell ranges selected in the data context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.SelectedItemRanges">
      <summary>Gets the data item ranges selected in the data context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.SelectedItems">
      <summary>Gets a collection of data items that are currently selected in the context.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.SourceDetailConfiguration">
      <summary>Gets the detail configuration that was applied to the detail that is the source of the context. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridContext.VisibleColumns">
      <summary>Gets a list of the columns in the context whose Visible property is
<strong>true</strong>, ordered according to their <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Column~VisiblePosition.html">VisiblePosition</see>.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridContext.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.#ctor">
      <summary>Initializes a new instance of the DataGrid class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.AreDetailsExpanded(System.Object)">
      <summary>Retrieves a value indicating whether the details for the specified <strong>master</strong> data item are expanded. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <exception caption="" cref="System.InvalidOperationException">The specified item is not a master data item.</exception>
      <exception caption="" cref="System.ArgumentNullException"></exception>
      <returns>
        <strong>true</strong> if the details of the master data item are expanded; <strong>false</strong> if they are collapsed;</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.BeginInit">
      <summary>Signals the beginning of a batch modification process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.BringItemIntoView(System.Object)">
      <summary>Brings the specified item into view.</summary>
      <returns>
        <strong>true</strong> if the specified element was brought into view; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.CancelEdit">
      <summary>Cancels the edit process of master item being edited.</summary>
      <exception caption="" cref="System.InvalidOperationException">The item being edited is not a master item.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
        <para>Reverts the effects of PrepareContainerForItemOverride.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.CollapseDetails(System.Object)">
      <summary>Collapses any details owned by the specified <strong>master</strong> data item. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <exception caption="" cref="System.InvalidOperationException">The specified item is not a master data item.</exception>
      <exception caption="" cref="System.ArgumentNullException"></exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.CollapseGroup(System.Windows.Data.CollectionViewGroup)">
      <summary>Collapses the specified <strong>master</strong> group.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified CollectionViewGroup is not a master group.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.CreateDocumentPaginator">
      <summary>Creates a new instance of a <strong>DocumentPaginator</strong> from which the DataGridControl will be paginated.</summary>
      <returns>A new instance of the <strong>DocumentPaginator</strong> class from which the DataGridControl will be paginated.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.EndEdit">
      <summary>Ends the edit process of the master item that is being edited.</summary>
      <exception caption="" cref="System.InvalidOperationException">The item being edited is not a master item.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.EndInit">
      <summary>Signals the end of a batch modification process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExpandDetails(System.Object)">
      <summary>Expands any details owned by the specified <strong>master</strong> data item. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <exception caption="" cref="System.InvalidOperationException">The specified item is not a master data item.</exception>
      <exception caption="" cref="System.ArgumentNullException"></exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExpandGroup(System.Windows.Data.CollectionViewGroup)">
      <summary>Expands the specified <strong>master</strong> group.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified CollectionViewGroup is not a master group.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToExcel">
      <summary>Exports the content of the grid in the Excel xmlss format .</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToXps">
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetChildContexts">
      <summary>Retrieves the child DataGridContexts of the grid.</summary>
      <returns>An <strong>IEnumerable</strong> that contains the child DataGridContexts of the grid. Can be empty if the grid does not have child contexts.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetContainer(System.Windows.DependencyObject)">
      <summary>Retrieves the container for the specified <strong>DependencyObject</strong>.</summary>
      <returns>A <strong>FrameworkElement</strong> object representing the container.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetContainerForItemOverride">
      <summary>Creates or identifies the element used to display the specified item.</summary>
      <returns>The element that is used to display the given item.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetContainerFromItem(System.Object)">
      <summary>Retrieves a container of the specified item.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified item is neither a master data item nor an item located in the headers or footers of a grid or master group.</exception>
      <returns>A <strong>DependencyObject</strong> representing the container of the specified master item. Can be $$NULL$$ if the item belongs to the context
but does not have a container.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetDataGridContext(System.Windows.DependencyObject)">
      <summary>Retrieves the DataGridContext for the specified
<strong>DependencyObject</strong>.</summary>
      <returns>A reference to the item's DataGridContext.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetGroupFromCollectionViewGroup(System.Windows.Data.CollectionViewGroup)">
      <summary>Retrieves the group for the specified <strong>CollectionViewGroup</strong>.</summary>
      <returns>A reference to <strong>CollectionViewGroup</strong>'s corresponding Group.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetHasExpandedDetails(System.Windows.DependencyObject)">
      <summary>Gets a value that indicates whether a container (DataRow) has one or more
expanded details. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <returns>
        <strong>true</strong> if the container has one or more expanded details; <strong>false</strong> if the container does not have expanded details.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetIsFixedFootersHost(System.Windows.DependencyObject)">
      <summary>
        <para>Gets a value that, when set by a panel, identifies that panel as the host that will contain all elements added to the grid's fixed footers through the
FixedFooters property.</para>
      </summary>
      <returns>
        <strong>true</strong> if a panel is used as the fixed-footers host; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetIsFixedHeadersHost(System.Windows.DependencyObject)">
      <summary>
        <para>Gets a value that, when set by a panel, identifies that panel as the host that will contain all elements added to the grid's fixed headers through the
FixedHeaders property.</para>
      </summary>
      <returns>
        <strong>true</strong> if a panel is used as the fixed-headers host; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetItemFromContainer(System.Windows.DependencyObject)">
      <summary>Retrieves an item for the specified container.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified container is neither for a master data item nor for an item located in the headers or footers of a grid or master group.</exception>
      <returns>The item for the specified <em>container</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetParentGroupFromItem(System.Object)">
      <summary>Retrieves the parent group for the specified item.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified item is neither a master data item nor an item located in the headers or footers of a grid or master group.</exception>
      <returns>A <strong>CollectionViewGroup</strong> representing the parent group of the specified item. Can be $$NULL$$ if the item exists but does not have
a parent group.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetStatContext(System.Windows.DependencyObject)">
      <summary>Gets the context from which a statistical function retrieves the values needed to calculate its result, and that exposes the results as
properties that have the same names as the functions' ResultPropertyName properties. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <returns>An object representing the context from which a statistical function retrieves the values needed to calculate its result, and that exposes the
results as properties that have the same names as the functions' ResultPropertyName properties.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.IsGroupExpanded(System.Windows.Data.CollectionViewGroup)">
      <summary>Retrieves a value indicating whether the specified <strong>master</strong> group is expanded.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified CollectionViewGroup is not a master group.</exception>
      <returns>
        <strong>true</strong> if the group is expanded; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own <strong>ItemContainer</strong>.</summary>
      <returns>
        <strong>true</strong> if the item is its own <strong>ItemContainer</strong><font color="black">; <strong>false</strong> otherwise.</font></returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.LoadUserSettings(Xceed.Wpf.DataGrid.Settings.SettingsRepository,Xceed.Wpf.DataGrid.Settings.UserSettings)">
      <summary>Loads the settings persisted in a settings repository and re-applies them to the grid.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnCreateAutomationPeer">
      <summary>Creates an appropriate <strong>AutomationPeer</strong> for this <strong>DataGridControl</strong> instance.</summary>
      <returns>The <strong>AutomationPeer</strong> for this <strong>DataGridControl</strong> instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnCurrentChanged(Xceed.Wpf.DataGrid.DataGridCurrentChangedEventArgs)">
      <summary>Raises the CurrentChanged event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnCurrentChanging(Xceed.Wpf.DataGrid.DataGridCurrentChangingEventArgs)">
      <summary>Raises the CurrentChanging event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnDeletingSelectedItemError(Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs)">
      <summary>Raises the DeletingSelectedItemError
event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnDeletingSelectedItems(Xceed.Wpf.DataGrid.CancelRoutedEventArgs)">
      <summary>Raises the DeletingSelectedItems event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnInitializingInsertionRow(Xceed.Wpf.DataGrid.InitializingInsertionRowEventArgs)">
      <summary>Raises the InitializingInsertionRow
event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <para>Reports a change to the <strong>IsKeyboardFocusWithin</strong><font color="black">property.</font></para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>
        <para>Reports a change to the <strong>ItemsSource</strong><font color="black">property.</font></para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when an unhandled <strong>KeyDown</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Raises the <strong>MouseLeave</strong> event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Raises the <strong>MouseLeftButtonDown</strong> event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnNotifyPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Invoked when an unhandled <strong>PreviewGotKeyboardFocus</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>PreviewMouseDown</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Raises the <strong>PreviewMouseUp</strong> event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnSelectedItemsDeleted">
      <summary>Raises the SelectedItemsDeleted event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnSelectionChanged(Xceed.Wpf.DataGrid.DataGridSelectionChangedEventArgs)">
      <summary>Raises the SelectionChanged event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.OnSelectionChanging(Xceed.Wpf.DataGrid.DataGridSelectionChangingEventArgs)">
      <summary>Raises the SelectionChangingevent.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified <em>element</em> to display the specified <em>item</em>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.SaveUserSettings(Xceed.Wpf.DataGrid.Settings.SettingsRepository,Xceed.Wpf.DataGrid.Settings.UserSettings)">
      <summary>Saves the settings to a settings repository.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.SetIsFixedFootersHost(System.Windows.DependencyObject,System.Boolean)">
      <summary>
        <para>Sets a value that, when set by a panel, identifies that panel as the host that will contain all elements added to the grid's fixed footers through the
FixedFooters property.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.SetIsFixedHeadersHost(System.Windows.DependencyObject,System.Boolean)">
      <summary>
        <para>Sets a value that, when set by a panel, identifies that panel as the host that will contain all elements added to the grid's fixed headers through the
FixedHeaders property.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ShowPrintPreviewWindow">
      <summary>Creates a print preview using the specified parameters.</summary>
      <returns>
        <strong>true</strong> if the job has completed; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ToggleDetailExpansion(System.Object)">
      <summary>Toggles any details owned by the specified <strong>master</strong> data item. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
      <exception caption="" cref="System.InvalidOperationException">The specified item is not a master data item.</exception>
      <exception caption="" cref="System.ArgumentNullException"></exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ToggleGroupExpansion(System.Windows.Data.CollectionViewGroup)">
      <summary>Toggles the specified <strong>master</strong> group.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified CollectionViewGroup is not a master group.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.BeginEdit">
      <summary>Places the grid's current item in edit mode.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.BeginEdit(System.Object)">
      <summary>Places the specified <strong>master</strong> item in edit mode.</summary>
      <exception caption="" cref="System.InvalidOperationException">The specified item is not a master item.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToCsv(System.IO.Stream)">
      <summary>Exports the content of the grid in a CSV (comma-separated value) format to the specified stream.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToCsv(System.String)">
      <summary>Exports the content of the grid in a CSV (comma-separated value) format to the specified file.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToExcel(System.IO.Stream)">
      <summary>Exports the content of the grid in the Excel xmlss format to the specified stream.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToExcel(System.String)">
      <summary>Exports the content of the grid in the Excel xmlss format to the specified file.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToXps(System.String,System.Windows.Size)">
      <summary>Exports the grid to an XPS document that has the specified file name and using the provided page size.</summary>
      <exception caption="" cref="System.IO.IOException">Can be thrown if access to the specified file  is denied.</exception>
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToXps(System.String,System.Windows.Size,System.Boolean)">
      <summary>Exports the grid to an XPS document that has the specified file name and page size, as well as indicating whether the progress window is
displayed.</summary>
      <exception caption="" cref="System.IO.IOException">Can be thrown if access to the specified file is denied.</exception>
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToXps(System.String,System.Windows.Size,System.Windows.Rect,System.Boolean)">
      <summary>Exports the grid to an XPS document that has the specified file name and using the provided page size and imageable area, as well as indicating
whether the progress window is displayed.</summary>
      <exception caption="" cref="System.IO.IOException">Can be thrown if access to the specified file is denied.</exception>
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToXps(System.String,System.Windows.Size,System.Windows.Rect,System.Windows.Controls.PageRange,System.Boolean)">
      <summary>Exports the grid to an XPS document that has the specified file name and using the provided page size, page range, and imageable area, as well as
indicating whether the progress window is displayed.</summary>
      <exception caption="" cref="System.IO.IOException">Can be thrown if access to the specified file is denied.</exception>
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToXps(System.String,System.Windows.Size,System.Windows.Rect,System.Windows.Controls.PageRange,System.IO.Packaging.CompressionOption,System.Boolean)">
      <summary>Exports the grid to an XPS document that has the specified file name and using the provided page size, page range, imageable area, as well as
indicating whether the progress window is displayed.</summary>
      <exception caption="" cref="System.IO.IOException">Can be thrown if access to the specified file is denied.</exception>
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToXps(System.String,System.Windows.Size,System.Windows.Rect,System.Windows.Controls.PageRange,System.IO.Packaging.CompressionOption,System.EventHandler{Xceed.Wpf.DataGrid.Print.ProgressEventArgs},System.Boolean)">
      <summary>Exports the grid to an XPS document that has the specified file name and using the provided page size, page range, imageable area, compression
option, and providing the callback to invoke during the process, as well as indicating whether the progress window is displayed.</summary>
      <exception caption="" cref="System.IO.IOException">Can be thrown if access to the specified file is denied.</exception>
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToXps(System.IO.Stream,System.Windows.Size)">
      <summary>Exports the grid as an XPS document to the specified stream using the provided page size.</summary>
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToXps(System.IO.Stream,System.Windows.Size,System.Int32)">
      <summary>Exports the grid as an XPS document to the specified stream using the provided page and preview sizes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToXps(System.IO.Stream,System.Windows.Size,System.Boolean)">
      <summary>Exports the grid as an XPS document to the specified stream and page size, as well as indicating whether the progress window is displayed.</summary>
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToXps(System.IO.Stream,System.Windows.Size,System.Windows.Rect,System.Boolean)">
      <summary>Exports the grid as an XPS document to the specified stream using the provided page size and imageable area, as well as indicating whether the
progress window is displayed.</summary>
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToXps(System.IO.Stream,System.Windows.Size,System.Windows.Rect,System.Windows.Controls.PageRange,System.Boolean)">
      <summary>Exports the grid as an XPS document to the specified stream using the provided page size, page range, and imageable area, as well as indicating
whether the progress window is displayed.</summary>
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToXps(System.IO.Stream,System.Windows.Size,System.Windows.Rect,System.Windows.Controls.PageRange,System.IO.Packaging.CompressionOption,System.Boolean)">
      <summary>Exports the grid as an XPS document to the specified stream using the provided page size, page range, imageable area, compression option, as well
as indicating whether the progress window is displayed.</summary>
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ExportToXps(System.IO.Stream,System.Windows.Size,System.Windows.Rect,System.Windows.Controls.PageRange,System.IO.Packaging.CompressionOption,System.EventHandler{Xceed.Wpf.DataGrid.Print.ProgressEventArgs},System.Boolean,System.Boolean)">
      <summary>Exports the grid as an XPS document to the specified stream using the provided page size, page range, imageable area, compression option, and
providing the callback to invoke during the process, as well as indicating whether the progress window is displayed.</summary>
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetChildContext(System.Object,Xceed.Wpf.DataGrid.DetailConfiguration)">
      <summary>Retrieves the child DataGridContext created from the specified
<see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DetailConfiguration.html">DetailConfiguration</see> of an item.</summary>
      <exception caption="" cref="System.ArgumentNullException"></exception>
      <returns>The child DataGridContext of the specified <em>parentItem</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.GetChildContext(System.Object,System.String)">
      <summary>Retrieves the child DataGridContext created from the detail
configuration that has the specified relation name.</summary>
      <exception caption="" cref="System.ArgumentNullException"></exception>
      <returns>The child DataGridContext of the specified <em>parentItem</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.Print">
      <summary>Displays a Print dialog that allows the grid to be printed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.Print(System.Boolean)">
      <summary>Displays a Print dialog that allows the grid to be printed, as well as indicating whether the progress window is displayed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.Print(System.String,System.Boolean)">
      <summary>Displays a Print dialog that allows the grid to be printed specifying the title that will be used as the print-job, as well as indicating whether
the progress window is displayed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.Print(System.String,System.Boolean,System.Boolean)">
      <summary>Displays a Print dialog that allows the grid to be printed specifying the title that will be used as the print-job name and indicating whether
the end user can specify the range of pages to print, as well as indicating whether the progress window is displayed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.Print(System.String,System.Boolean,System.EventHandler{Xceed.Wpf.DataGrid.Print.ProgressEventArgs},System.Boolean)">
      <summary>Displays a Print dialog that allows the grid to be printed specifying the title that will be used as the print-job name, indicating whether the
end user can specify the range of pages to print, and providing a callback that will handle the <strong>PrintProgression</strong> event, as well as indicating
whether the progress window is displayed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ShowPrintPreviewPopup(System.String)">
      <summary>Dsiplays a print preview in a popup window using the provided document title.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ShowPrintPreviewPopup(System.String,System.Boolean,System.EventHandler{Xceed.Wpf.DataGrid.Print.ProgressEventArgs},System.Boolean,System.Windows.Size,System.Windows.Size)">
      <summary>
        <para>Displays a print preview dialog in a popup specifying the title that will be used as the print-job name, indicating whether the end user can specify the
range of pages to print, and providing a callback that will handle the <strong>PrintProgression</strong> event, the size of the popup, and the default paper
size, as well as indicating whether the progress window is displayed.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ShowPrintPreviewWindow(System.String)">
      <summary>Displays a print preview in a window using the provided document title.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridControl.ShowPrintPreviewWindow(System.String,System.Boolean,System.EventHandler{Xceed.Wpf.DataGrid.Print.ProgressEventArgs},System.Boolean,System.Windows.Size,System.Windows.Size)">
      <summary>
        <para>Displays a print preview dialog in a popup specifying the title that will be used as the print-job name, indicating whether the end user can specify the
range of pages to print, and providing a callback that will handle the <strong>PrintProgression</strong> event, the size of the window, and the default paper
size, as well as indicating whether the progress window is displayed.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.AllowDetailToggle">
      <summary>Gets or sets a value indicating whether the end user can toggle the expansion state of the grid's immediate child details. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.AllowDrag">
      <summary>Gets or sets a value indicating whether selected rows can be dragged to a target host, such as Excel, in order to copy the data directly without
performing an explicit copy/paste.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.AutoCreateColumns">
      <summary>
        <para>Gets or sets a value indicating whether columns should automatically be created when
the grid is bound to an <strong>ItemsSource</strong>.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.AutoCreateDetailConfigurations">
      <summary>
        <para>Gets or sets a value indicating whether the detail configurations of the grid are automatically created.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.AutoCreateForeignKeyConfigurations">
      <summary>
        <para>Gets or sets a value indicating whether the foreign key configurations are automatically created.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.AutoRemoveColumnsAndDetailConfigurations">
      <summary>Gets or sets a value indicating whether existing columns and detail configurations that do not have a matching field or relation in the data
source are removed from their corresponding collections.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.CellEditorDisplayConditions">
      <summary>Gets or sets a value indicating under what conditions the editors for the cells are displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.CellErrorStyle">
      <summary>Gets or sets the style that will be used by the cells contained in the grid when their content fails the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ClipboardExporters">
      <summary>Gets a collection of clipboard exporters (see Remarks).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.Columns">
      <summary>Gets a list of the columns contained in the grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ConnectionError">
      <summary>Gets the connection error.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ConnectionState">
      <summary>Gets the connection state of the underlying virtualized collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.CurrentColumn">
      <summary>
        <para>Gets or sets the grid's current <strong>master</strong>column.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.CurrentContext">
      <summary>Gets the context in which the global current item
is located.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.CurrentItem">
      <summary>Gets or sets the grid's current <strong>master</strong> data item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.DefaultCellEditors">
      <summary>Gets a list of CellEditors that will be used, by default, for cells of
the associated data type if none is explicitly provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.DefaultDetailConfiguration">
      <summary>Gets or sets the detail configuration that will be applied to the child details of the grid <strong>and any descendant details</strong> when an
explicit detail configuration is not provided for a specific detail relation. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.DefaultGroupConfiguration">
      <summary>Gets or sets the default configuration that will be applied to any groups in the grid for which an explicit group configuration is not provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.DetailConfigurations">
      <summary>Gets the list of the detail configurations that have been explicitly provided for specific detail relations and that will be applied to any
corresponding details. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.EditTriggers">
      <summary>Gets or sets a value indicating what triggers will cause cells to enter edit mode.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.GlobalCurrentColumn">
      <summary>Gets the column that is current in all the available contexts.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.GlobalCurrentItem">
      <summary>Gets the data item that is current in all the available contexts.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.GlobalSelectedItems">
      <summary>Gets the data items that are selected in all the available contexts.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.GroupConfigurationSelector">
      <summary>Gets or sets a group-configuration selector that will be used to select the appropriate configuration for a master group based on its information
and/or content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.GroupLevelDescriptions">
      <summary>Gets a collection of GroupLevelDescription objects that
contain information on each group level contained in the grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.HandlesScrolling">
      <summary>Gets a value indicating whether the grid supports scrolling.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.HasDetails">
      <summary>Gets a value indicating whether the grid has details. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.HasValidationError">
      <summary>Gets a value indicating whether the content of one of the cells contained in
the grid failed the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.HideSelection">
      <summary>
        <para>Gets or sets a value indicating whether the selected rows should
remain highlighted when the grid loses focus.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.IsBeingEdited">
      <summary>Gets a value indicating whether a row is being edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.IsCopyCommandEnabled">
      <summary>Gets or sets a value indicating whether the selected items in the grid can be copied when the CTRL-C keys are pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.IsDeleteCommandEnabled">
      <summary>Gets or sets a value indicating whether the selected items in the grid can be deleted when the DELETE key is pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.IsRefreshCommandEnabled">
      <summary>Gets or sets a value indicating whether the items in the grid are refreshed when the F5 key is pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ItemScrollingBehavior">
      <summary>Gets or sets a value indicating how the data items in the grid are scrolled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ItemsPrimaryAxis">
      <summary>Gets or sets a value representing which axis of a DataRow must be completely visible in
order to determine which <strong>DataRow</strong> will receive the focus when the page-up or page-down buttons are pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ItemsSourceName">
      <summary>Gets or sets the name of the grid's items source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ItemsSourceNameTemplate">
      <summary>Gets or sets the template that is used to display the name of the grid's items source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.MaxGroupLevels">
      <summary>Gets or sets a value indicating the maximum number of group levels that can be created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.MaxSortLevels">
      <summary>Gets or sets a value indicating the maximum number of sort levels that can be created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.NavigationBehavior">
      <summary>Gets or sets a value indicating how the focus navigates from one element to another in the grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.PagingBehavior">
      <summary>Gets or sets a value representing the paging behavior of the grid when the page-up and page-down buttons are pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.PrintView">
      <summary>Gets or sets the PrintView, which will be used when printing or
exporting the grid. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.ReadOnly">
      <summary>Gets or sets a value indicating whether the values of the cells contained in the grid can be edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectedCellRanges">
      <summary>
        <para>Gets the cell ranges selected in the datagrid control.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectedContexts">
      <summary>Gets the contexts in which items are selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectedIndex">
      <summary>
        <para>Gets or sets the index of the currently selected <strong>data item</strong>.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectedItem">
      <summary>Gets or sets the selected <strong>data item</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectedItemRanges">
      <summary>
        <para>Gets a collection of the data item ranges selected in the datagrid control.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectedItems">
      <summary>Gets a collection of the data items that are currently selected in the grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectionMode">
      <summary>
        <para>Gets or sets a value indicating how data items in the grid are selected.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SelectionUnit">
      <summary>Gets or sets a value indicating which type of unit (cell or row) is used for selections in the datagrid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SynchronizeCurrent">
      <summary>Gets or setes a value indicating whether the grid's current item is synchronized with the collection view's current item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.SynchronizeSelectionWithCurrent">
      <summary>Gets or sets a value indicating whether the current item is always selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.UpdateSourceTrigger">
      <summary>Gets or sets a value representing the moment when data is to be written to the underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.View">
      <summary>Gets or sets the view applied to the grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridControl.VisibleColumns">
      <summary>Gets a list of the columns whose Visible property is
<strong>true</strong>, ordered according to their <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Column~VisiblePosition.html">VisiblePositions</see>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.AllowDetailToggleProperty">
      <summary>Identifies the AllowDetailToggle dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.AllowDragProperty">
      <summary>Identifies the AllowDrag dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.AutoCreateColumnsProperty">
      <summary>Identifies the AutoCreateColumns dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.AutoCreateDetailConfigurationsProperty">
      <summary>Identifies the AutoCreateDetailConfigurations dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.AutoCreateForeignKeyConfigurationsProperty">
      <summary>Identifies the AutoCreateForeignKeyConfigurations dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.AutoRemoveColumnsAndDetailConfigurationsProperty">
      <summary>Identifies the AutoRemoveColumnsAndDetailConfigurations
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.CellEditorDisplayConditionsProperty">
      <summary>Identifies the CellEditorDisplayConditions dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.CellErrorStyleProperty">
      <summary>Identifies the CellErrorStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ColumnsProperty">
      <summary>Identifies the Columns dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ConnectionErrorProperty">
      <summary>Identifies the ConnectionError dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ConnectionStateProperty">
      <summary>Identifies the ConnectionState dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ContainerProperty">
      <summary>Identifies the <strong>Container</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.CurrentChangedEvent">
      <summary>Identifies the CurrentChanging routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.CurrentChangingEvent">
      <summary>Identifies the CurrentChanged routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.DataGridContextProperty">
      <summary>Identifies the <strong>DataGridContext</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.DefaultDetailConfigurationProperty">
      <summary>Identifies the DefaultDetailConfiguration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.DefaultGroupConfigurationProperty">
      <summary>Identifies the DefaultGroupConfiguration
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.DeletingSelectedItemErrorEvent">
      <summary>Identifies the DeletingSelectedItemError routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.DeletingSelectedItemsEvent">
      <summary>Identifies the DeletingSelectedItems
routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.DetailConfigurationsProperty">
      <summary>Identifies the DetailConfigurations dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.EditTriggersProperty">
      <summary>Identifies the EditTriggers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.GroupConfigurationSelectorProperty">
      <summary>Identifies the GroupConfigurationSelector dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.GroupLevelDescriptionsProperty">
      <summary>Identifies the GroupLevelDescriptions
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.HasExpandedDetailsProperty">
      <summary>Identifies the <strong>HasExpandedDetails</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.HasValidationErrorProperty">
      <summary>Identifies the HasValidationError dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.HideSelectionProperty">
      <summary>Identifies the HideSelection dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.IsBeingEditedProperty">
      <summary>Identifies the IsBeingEdited dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.IsCopyCommandEnabledProperty">
      <summary>Identifies the IsCopyCommandEnabled dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.IsDeleteCommandEnabledProperty">
      <summary>Identifies the IsDeleteCommandEnabled
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.IsFixedFootersHostProperty">
      <summary>Identifies the <strong>IsFixedFootersHost</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.IsFixedHeadersHostProperty">
      <summary>Identifies the <strong>IsFixedHeadersHost</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.IsRefreshCommandEnabledProperty">
      <summary>Identifies the IsRefreshCommandEnabled
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ItemScrollingBehaviorProperty">
      <summary>Identifies the ItemScrollingBehavior
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ItemsPrimaryAxisProperty">
      <summary>Identifies the ItemsPrimaryAxis dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ItemsSourceNameTemplateProperty">
      <summary>Identifies the ItemsSourceNameTemplate
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.MaxGroupLevelsProperty">
      <summary>Identifies the MaxGroupLevels dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.MaxSortLevelsProperty">
      <summary>Identifies the MaxSortLevels dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.NavigationBehaviorProperty">
      <summary>Identifies the NavigationBehavior dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.PagingBehaviorProperty">
      <summary>Identifies the PagingBehavior dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ParentDataGridControlProperty">
      <summary>Identifies the <em>ParentDataGridControl</em> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.PreserveExtendedSelectionProperty">
      <summary>Identifies the PreserveExtendedSelection
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.PrintViewProperty">
      <summary>Identifies the PrintView dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ReadOnlyProperty">
      <summary>Identifies the ReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectedCellRangesProperty">
      <summary>Identifies the SelectedCellRanges dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectedIndexProperty">
      <summary>Identifies the SelectedIndex dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectedItemProperty">
      <summary>Identifies the SelectedItem dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectedItemRangesProperty">
      <summary>Identifies the SelectedRanges dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectedItemsDeletedEvent">
      <summary>Identifies the SelectedItemsDeleted routed
event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectedItemsProperty">
      <summary>Identifies the SelectedItems dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectionChangedEvent">
      <summary>Identifies the SelectionChanged routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectionChangingEvent">
      <summary>Identifies the SelectionChangingEvent routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectionModeProperty">
      <summary>Identifies the SelectionMode dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SelectionUnitProperty">
      <summary>Identifies the SelectionUnit dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.StatContextProperty">
      <summary>Identifies the <strong>StatContext</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SynchronizeCurrentProperty">
      <summary>Identifies the SynchronizeCurrent dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.SynchronizeSelectionWithCurrentProperty">
      <summary>Identifies the SynchronizeSelectionWithCurrent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.UpdateSourceTriggerProperty">
      <summary>Identifies the UpdateSourceTrigger dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.ViewProperty">
      <summary>Identifies the View dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridControl.VisibleColumnsProperty">
      <summary>Identifies the VisibleColumns dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.CurrentChanged">
      <summary>Raised after the current visual row (any type that can be current) has been changed.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.CurrentChanging">
      <summary>Raised when the current visual row (any type that can be current) is about to change.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.DeletingSelectedItemError">
      <summary>Raised when an error occurs while attempting to delete a selected item.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.DeletingSelectedItems">
      <summary>Raised before the delete command is executed to signal that the selected items are about to be deleted.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.InitializingInsertionRow">
      <summary>Raised when an InsertionRow in the grid is being initialized.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.ItemsSourceChangeCompleted">
      <summary>Raised after the items-source change has completed to notify that the items are loaded and accessible.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.PropertyChanged">
      <summary>Raised when the value of a property changes.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.SelectedItemsDeleted">
      <summary>Raised when the delete command has been executed to signal that the selected items have been deleted.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.SelectionChanged">
      <summary>Raised after the selected items have changed.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridControl.SelectionChanging">
      <summary>Raised when the selected items are being changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridCreatingNewItemEventArgs.#ctor(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object,System.Boolean)">
      <summary>Initializes a new instance of the <strong>DataGridCreatingNewItemEventArgs</strong> class specify the collection view to which the item will
potentially be added and allowing the process to be canceled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCreatingNewItemEventArgs.CollectionView">
      <summary>Gets the DataGridCollectionView
to which the item will potentially be added.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCreatingNewItemEventArgs.Handled">
      <summary>Gets or sets a value that indicates whether the event handler has completely handled the event or whether the system should continue its own
processing.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCreatingNewItemEventArgs.NewItem">
      <summary>Gets or sets the new item to add to the CollectionView.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangedEventArgs.NewCurrent">
      <summary>Gets the new current visual row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangedEventArgs.NewDataGridContext">
      <summary>Gets the new DataGridContext.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangedEventArgs.OldCurrent">
      <summary>Gets the old current visual row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangedEventArgs.OldDataGridContext">
      <summary>Gets the old DataGridContext.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangingEventArgs.IsCancelable">
      <summary>Gets a value indicating whether the current visual row change is cancelable.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangingEventArgs.NewCurrent">
      <summary>Gets the new current visual row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangingEventArgs.NewDataGridContext">
      <summary>Gets the new DataGridContext.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangingEventArgs.OldCurrent">
      <summary>Gets the old current visual row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridCurrentChangingEventArgs.OldDataGridContext">
      <summary>Gets the old DataGridContext.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridDetailDescription.GetDetailsForParentItem(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object)">
      <summary>Retrieves the details for the specified parent data item.</summary>
      <returns>An <strong>IEnumerable</strong> representing the details of the specified data item.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridDetailDescription.Initialize(Xceed.Wpf.DataGrid.DataGridCollectionViewBase)">
      <summary>Initializes the detail using the information retrieved from the specified parent collection view.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridDetailDescription.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>Receives events from the centralized event manager.</summary>
      <returns>
        <strong>true</strong> if the listener handled the event. It is considered an error by the WeakEventManager handling in WPF to register a listener
for an event that the listener does not handle. Regardless, the method should return <strong>false</strong> if it receives an event that it does not recognize
or handle.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.AutoCreateDetailDescriptions">
      <summary>Gets or sets a value indicating whether detail descriptions are to be automatically created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.AutoCreateForeignKeyDescriptions">
      <summary>Gets a value indicating whether the foreign key descriptions are automatically created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.AutoCreateItemProperties">
      <summary>Gets or sets a value indicating whether item properties are to be automatically created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.AutoFilterMode">
      <summary>Gets or sets a value indicating how automatic filtering of the data items in the detail will be performed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.AutoFilterValues">
      <summary>Gets a dictionary that contains a list of the detail's DataGridItemProperty objects with their corresponding auto-filter values.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.DefaultCalculateDistinctValues">
      <summary>Get or sets the default value of the CalculateDistinctValues
property when a <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridItemProperty.html">DataGridItemProperty</see> has not
explicitly set its value.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.DetailDescriptions">
      <summary>Gets a collection of DataGridDetailDescription objects that provide information on the details that will be contained in the detail, including sorting,
grouping, and child detail descriptions.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.DistinctValuesConstraint">
      <summary>Gets or sets a value representing the constraint applied to the distinct values of the underlying <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridCollectionView.html">DataGridCollectionView</see> when <strong>automatically</strong> filtering data items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.FilterCriteriaMode">
      <summary>Gets or sets a value indicating how filters entered into a FilterRow are
applied. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.GroupDescriptions">
      <summary>Gets a collection of group descriptions that describe how the items in the detail are grouped.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.ItemProperties">
      <summary>Gets a collection of DataGridItemProperty objects, which represent the items that are contained in the detail.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.RelationName">
      <summary>Gets or sets the relation name of the detail.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.SortDescriptions">
      <summary>Gets a collection of <strong>SortDescription</strong> objects that describe how the items in the collection are sorted in the detail.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.StatFunctions">
      <summary>Gets a collection of the statistical functions whose results can be used by various elements throughout the detail.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.Title">
      <summary>Gets or sets the title that can be used to provide a user-friendly name for the detail configuration associated with the detail description.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridDetailDescription.TitleTemplate">
      <summary>Gets or sets the template that will be used to display the description's title.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridDetailDescriptionCollection.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridDetailDescriptionCollection</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridDetailDescriptionCollection.#ctor(System.Collections.Generic.List{Xceed.Wpf.DataGrid.DataGridDetailDescription})">
      <summary>Initializes a new instance of the <strong>DataGridDetailDescriptionCollection</strong> specifying the list of the DataGridDetailDescription objects it will contain.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridDetailDescriptionCollection.InsertItem(System.Int32,Xceed.Wpf.DataGrid.DataGridDetailDescription)">
      <summary>Inserts a DataGridDetailDescription into the collection
at the specified index.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridDetailDescriptionCollection.SetItem(System.Int32,Xceed.Wpf.DataGrid.DataGridDetailDescription)">
      <summary>Replaces the detail description at the specified index.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridDetailDescriptionCollection.IndexOf(System.String)">
      <summary>Retrieves the index of the detail description with the specified relation name.</summary>
      <returns>A value representing the index of the detail description.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridException.#ctor">
      <summary>Initializes a new instance of the DataGridException class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridException.#ctor(System.String)">
      <summary>Initializes a new instance of the DataGridException class with
the specified error message.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the DataGridException class with
the specified error message and inner exception.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the DataGridException class with
serialized data.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridFocusException.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridFocusException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridFocusException.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridFocusException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridFocusException.#ctor(System.String)">
      <summary>Initializes a new instance of the <strong>DataGridFocusException</strong> class with the specified error message.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridFocusException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <strong>DataGridFocusException</strong> class with the specified error message and inner exception.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridFocusException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <strong>DataGridFocusException</strong> class with serialized data.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridForeignKeyDescription.ForeignKeyConverter">
      <summary>Gets or sets a foreign key converter, which allows custom key/value mappings to be provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridForeignKeyDescription.ItemsSource">
      <summary>Gets or sets the source from which the values to be displayed are retrieved.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridForeignKeyDescription.ValuePath">
      <summary>Gets or sets the path in the ItemsSource
that contains the values to be displayed.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridForeignKeyDescription.ForeignKeyConverterProperty">
      <summary>Identifies the ForeignKeyConverter dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridForeignKeyDescription.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridForeignKeyDescription.ValuePathProperty">
      <summary>Identifies the ValuePath dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridGroupDescription.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridGroupDescription</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridGroupDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the the <strong>DataGridGroupDescription</strong> class specifying the name of the property that is used to group
the items.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridGroupDescription.GetPropertyValue(System.Object)">
      <summary>Retrieves the property value for the specified <em>item</em>.</summary>
      <returns>An object representing the property value for the specified <em>item</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>Retrieves the group name for the specified <em>item</em>.</summary>
      <returns>An object representing the group name for the specified <em>item</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridGroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>Returns a value indicating whether the group name and the item name match, which means that the item belongs to the group.</summary>
      <returns>
        <strong>true</strong> if the names match—indicating that the item belongs to the group; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridGroupDescription.GroupConfiguration">
      <summary>Gets or sets the group configuration that will be applied to the groups created by this group description.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridGroupDescription.PropertyName">
      <summary>Gets or sets the name of the property that is used to determine which group an item belongs to.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridGroupDescription.SortComparer">
      <summary>Gets or sets the data comparer that will be used to sort the groups in a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridGroupInfo.GroupDescription">
      <summary>Gets the <strong>GroupDescription</strong> that matches the current <strong>DataGridGroupInfo</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridGroupInfo.PropertyName">
      <summary>Gets the property name of the parent group.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridGroupInfo.Value">
      <summary>Gets the value of the parent group.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridInternalException.#ctor">
      <summary>Initializes a new instance of the DataGridInternalException class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridInternalException.#ctor(System.String)">
      <summary>Initializes a new instance of the DataGridInternalException class with the specified error message.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridInternalException.#ctor(System.Exception)">
      <summary>Initializes a new instance of the DataGridInternalException class with the specified inner exception.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridInternalException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the DataGridInternalException class with the specified error message and inner
exception.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the DataGridInternalException class with serialized data.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemCancelEventArgs.#ctor(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridtemCancelEventArgs</strong> class specifying the item, the collection view to which it is to be added or
removed, and a value indicating whether the process is to be canceled.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemCancelEventArgs.Cancel">
      <summary>Gets or sets a value indicating whether the process is to be canceled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemEventArgs.#ctor(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridtemEventArgs</strong> class specifying the item and the collection view to which it is to be added or
removed.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemEventArgs.CollectionView">
      <summary>Gets the DataGridCollectionView
to which the item will potentially be added or removed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemEventArgs.Item">
      <summary>Gets the item to add to or remove from the CollectionView.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemHandledEventArgs.#ctor(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridtemHandledEventArgs</strong> class specifying the item and the collection view to which it is to be added
or removed.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemHandledEventArgs.Handled">
      <summary>Gets or sets a value that indicates whether the event handler has completely handled the event or whether the system should continue its own
processing.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridItemProperty</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.String,System.Type)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its value path, and its data
type.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.String,System.String,System.Type)">
      <summary>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its value and X paths, and its
data type</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.String,System.Type,System.Boolean)">
      <summary>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its value path, its data type,
and indicating whether it is read-only.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.String,System.String,System.Type,System.Boolean)">
      <summary>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its value and X paths, its
data type, and indicating whether it is read-only</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.ComponentModel.PropertyDescriptor)">
      <summary>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the <strong>PropertyDescriptor</strong> that determines
the characteristics of a property for an item in a DataGridCollectionView.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.Type)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property and its value path.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.Type,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its value path, and indicating whether it
is readonly.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.Type,System.Boolean,System.Nullable{System.Boolean})">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its value path, indicating whether it is
read only, and if the corresponding cell can be edited when a new item is being inserted.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.#ctor(System.String,System.ComponentModel.PropertyDescriptor)">
      <summary>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name and the <strong>PropertyDescriptor</strong>
that determines the characteristics of a property for an item in a DataGridCollectionView.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.GetValueCore(System.Object)">
      <summary>Retrieves the value of the specified component.</summary>
      <returns>The retrieved value.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemProperty.SetValueCore(System.Object,System.Object)">
      <summary>Sets the value for the specified component.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemProperty.IsAutoCreated">
      <summary>Gets a value indicating whether the <strong>DataGridItemProperty</strong> was automatically created (see AutoCreateItemProperties property).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemProperty.PropertyDescriptor">
      <summary>Gets or sets the <strong>PropertyDescriptor</strong> that determines the characteristics of a property for an item in a DataGridCollectionView.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemProperty.ValuePath">
      <summary>Gets or sets the path to access the value of a property for an item in a <strong>DataGridCollectionView</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemProperty.ValueXPath">
      <summary>Gets or sets the <font color="black"><span class="keyword">XPath</span> query that returns the value on the XML binding source to use</font></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.Clone">
      <summary>Returns a clone of the current instance.</summary>
      <returns>An object representing the clone of the current instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.GetValue(System.Object)">
      <summary>Retrieves the current value of the property for the specified component.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The current value for the property for the specified <em>component</em>.</span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.GetValueCore(System.Object)">
      <summary>Retrieves the value of the specified component.</summary>
      <returns>The retrieved value.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.Initialize(System.String,System.String,System.Type,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name and title of the property, its value path, indicating
whether it is read only, if the corresponding cell can be edited when a new item is being inserted, and if it represents a sub relationship.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.SetValue(System.Object,System.Object)">
      <summary>Sets the current value of the property for the specified component.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The current value for the property for the specified <em>component</em>.</span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.SetValueCore(System.Object,System.Object)">
      <summary>Sets the value for the specified component.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.ToString">
      <summary>Retrieves the string representation of the current instance.</summary>
      <returns>The string representation of the current instance.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.CalculateDistinctValues">
      <summary>Gets or sets a value indicating whether distinct values are to be calculated for the property. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.Converter">
      <summary>Gets or sets the converter to convert values to and from the corresponding field in the underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.ConverterCulture">
      <summary>Gets or sets the culture in which to evaluate the converter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.ConverterParameter">
      <summary>Gets or sets the parameter to pass to the converter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.DataType">
      <summary>Gets or sets the property's data type.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.DistinctValuesEqualityComparer">
      <summary>Gets or sets the <strong>IEqualityComparer</strong> that is used to compare the equality of the item property's distinct values. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.DistinctValuesSortComparer">
      <summary>Gets or sets the <strong>IComparer</strong> that is used to sort the item property's distinct values. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.FilterCriterion">
      <summary>Gets or sets the filter criterion that is initially applied and displayed in a FilterRow when a grid is loaded. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.ForeignKeyDescription">
      <summary>Gets or set the DataGridForeignKeyDescription that
represents a foreign key constraint or enumeration.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.GroupSortStatResultComparer">
      <summary>Gets or sets the <strong>IComparer</strong> used when sorting groups by the result of a statistical function.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.GroupSortStatResultPropertyName">
      <summary>Gets or sets the result property name of the
statistical function by whose values the <strong>groups</strong> will be sorted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.IsReadOnly">
      <summary>Gets or sets a value indicating whether the property is readonly.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.MaxDistinctValues">
      <summary>Gets or sets a value indicating the maximum number of distinct values to calculate. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.Name">
      <summary>Gets or sets the name of a property in a DataGridCollectionView.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.OverrideReadOnlyForInsertion">
      <summary>Gets or sets a value indicating whether the value of the IsReadOnly property is ignored when new data items are inserted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.SortComparer">
      <summary>Gets or sets the custom data comparer that will be used to sort the values of the data-grid item property's associated column. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.Title">
      <summary>Gets or sets the property's title.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.PropertyChanged">
      <summary>Raised when the value of a property changes.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridItemPropertyBase.QueryDistinctValue">
      <summary>Raised to allow custom distinct values to be provided.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyCollection.ClearItems">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyCollection.InsertItem(System.Int32,Xceed.Wpf.DataGrid.DataGridItemPropertyBase)">
      <summary>Inserts a DataGridItemProperty object into the collection at
the specified index.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyCollection.RemoveItem(System.Int32)">
      <summary>Removes the column at the specified <em>index</em>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyCollection.SetItem(System.Int32,Xceed.Wpf.DataGrid.DataGridItemPropertyBase)">
      <summary>Replaces the DataGridItemProperty at the specified index.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyCollection.IndexOf(System.String)">
      <summary>Retrieves the index of the DataGridItemProperty with the
specified name.</summary>
      <returns>The zero-based index of the <strong>DataGridItemProperty</strong> in the collection.</returns>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridItemPropertyCollection.FilterCriterionChanged">
      <summary>Raised when a filter criterion is added, removed, or cleared as well as an item property's FilterCriterion changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyCommittingValueEventArgs.#ctor(System.Object,System.Object)">
      <summary>Initializes a new instance of the <strong>DataGridItemPropertyCommittingValueEventArgs</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyCommittingValueEventArgs.Item">
      <summary>Gets the item whose value is being committed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyCommittingValueEventArgs.Value">
      <summary>Gets the value being committed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemPropertyQueryValueEventArgs.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>DataGridItemPropertyQueryValueEventArgs</strong> class specifying the item property for which a value
is required.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyQueryValueEventArgs.Item">
      <summary>Gets the item property for which a value is required.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemPropertyQueryValueEventArgs.Value">
      <summary>Gets or sets the value for the item property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemRemovedEventArgs.#ctor(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridtemRemovedEventArgs</strong> class specifying the item and the collection view from which it was
removed.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemRemovedEventArgs.Index">
      <summary>Gets the index at which the item was removed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.CreateChildCollection">
      <summary>Creates an empty list of <strong>UIElements</strong> that will contain the containers that are generated for data items and items contained in
non-fixed header and footer sections.</summary>
      <returns>An empty <strong>IList&lt;UIElement</strong>&gt; collection that will contain the containers that are generated for data items and items
contained in the non-fixed header and footer sections.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.GetVisualChild(System.Int32)">
      <summary>Gets the index of a visual child element.</summary>
      <returns>The visual child element at the specified <em>index</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleDownKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Down key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleEndKey(System.Windows.Input.KeyEventArgs)">
      <summary>
        <para>Handles the End key event.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleHomeKey(System.Windows.Input.KeyEventArgs)">
      <summary>
        <para>Handles the Home key event.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleLeftKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Left key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePageDownKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the PageDown key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePageUpKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the PageUp key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewDownKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview Down key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewEndKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview End key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewHomeKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview Home key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewLeftKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview Left key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewPageDownKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview PageDown key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewPageUpKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview PageUp key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewRightKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview Right key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewSystemKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview System key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewTabKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview Tab key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandlePreviewUpKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Preview Up key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleRightKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Right key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleSystemKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the System key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleTabKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Tab key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.HandleUpKey(System.Windows.Input.KeyEventArgs)">
      <summary>Handles the Up key event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.OnContainersRemoved(System.Collections.Generic.IList{System.Windows.DependencyObject})">
      <summary>Indicates that containers in the CustomItemContainerGenerator will no longer be
used/recycled and can be removed from the items host.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.OnItemsAdded(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32,System.Int32)">
      <summary>Indicates that items have been added to the data source or through the expansion of groups or details and need to be added to the items host.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.OnItemsMoved(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32,System.Windows.Controls.Primitives.GeneratorPosition,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{System.Windows.DependencyObject})">
      <summary>Indicates that items have been moved in the data source and need to be repositioned in the items host.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.OnItemsRemoved(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32,System.Windows.Controls.Primitives.GeneratorPosition,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{System.Windows.DependencyObject})">
      <summary>Indicates that items have been removed from the data source or through the collapse of groups or details and need to be removed to the items
host.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.OnItemsReplaced(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32,System.Windows.Controls.Primitives.GeneratorPosition,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{System.Windows.DependencyObject})">
      <summary>Indicates that items have been replaced in the data source and need to be removed from the items host.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.OnItemsReset">
      <summary>Indicates that the data source was reset and that the items host should clear its children.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when a key is pressed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridItemsHost.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>Invoked when a key is pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemsHost.Children">
      <summary>Gets the child <strong>UIElements</strong> contained in the items host.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemsHost.CustomItemContainerGenerator">
      <summary>Gets the CustomItemContainerGenerator that creates
the containers for the data items as well as the items located in the <strong>non-fixed</strong> header and footer sections of a grid, its groups, and its
details.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemsHost.LogicalChildren">
      <summary>Gets an enumerator for logical child elements of this element</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemsHost.ParentDataGridControl">
      <summary>Gets the parent DataGridControl of the items host.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridItemsHost.VisualChildrenCount">
      <summary>Gets the number of visual child elements within this element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridRemovingItemEventArgs.#ctor(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <strong>DataGridRemovingItemEventArgs</strong> class specifying the item, the collection view from which it is
to be removed, and a value indicating whether the process is to be canceled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridRemovingItemEventArgs.Index">
      <summary>Gets the index at which the item is to be removed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridSelectionChangedEventArgs.SelectionInfos">
      <summary>Gets a a list of SelectionInfo objects, which provide information on
the items that were selected/unselected on a per-<see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridContext.html">DataGridContext</see> basis.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridSelectionChangingEventArgs.IsCancelable">
      <summary>Gets a boolean value indicating whether the selection change can be canceled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridSelectionChangingEventArgs.SelectionInfos">
      <summary>Gets a list of SelectionInfo objects, which provide information on
the items that are being selected/unselected on a per-<see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridContext.html">DataGridContext</see> basis.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.#ctor">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridUnboundItemProperty</strong> class.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.#ctor(System.String,System.Type)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property and its data type.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.#ctor(System.String,System.Type,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its data type, and indicating whether it
is read only.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.#ctor(System.String,System.Type,System.Boolean,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <strong>DataGridItemProperty</strong> class specifying the name of the property, its data type, indicating whether it is
read only, and if the corresponding cell can be edited when a new item is being inserted.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.Clone">
      <summary>Returns a clone of the current instance.</summary>
      <returns>An object representing the clone of the current instance.</returns>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.CommittingValue">
      <summary>
        <br />
Raised for each data item to allow the unbound value to be committed, if required.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridUnboundItemProperty.QueryValue">
      <summary>Raised for each data item in the underlying data source and allows unbound values to be provided for each item through the Value property received in the
event arguments.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingCollectionView</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.#ctor(System.Type)">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingCollectionView</strong> specifying the type of the items it will contain.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.#ctor(System.Type,System.Boolean,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingCollectionView</strong> specifying the type of the items it will contain, if item
properties should be automatically created, the page size, and the maximum realized item count.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.#ctor(System.Data.DataTable)">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingCollectionView</strong> specifying the <strong>DataTable</strong> to use as the
source schema.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.#ctor(System.Data.DataTable,System.Boolean,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingCollectionView</strong> specifying the <strong>DataTable</strong> to use as the
source schema, if item properties should be automatically created, the page size, and the maximum realized item count.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.AbortQueryItems">
      <summary>Raised when a QueryItems event has
been raised for a page of data that is no longer needed and whose corresponding <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.AsyncQueryInfo.html">AsyncQueryInfo</see> object's <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.AsyncQueryInfo~EndQuery.html">EndQuery</see> method has not yet been called, allowing the pending operation to be
canceled and preventing useless processing on the data server.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.QueryAutoFilterDistinctValues">
      <summary>Raised when an auto-filter control is open for the first time to allow the distinct values for the column to be provided.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.QueryGroups">
      <summary>Raised to allow the data items contained in a virtualized collection view to be grouped using the information provided by the QueryGroupsEventsArgs received in the event parameters.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.QueryItemCount">
      <summary>Raised every time the grid is loaded or refreshed or its state changes (e.g., new sorting or filtering criteria are applied), the total number of
records in the underlying data source must be provided, taking into account any filters that are currently applied to the items. <strong>This event must be
handled.</strong></summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionView.QueryItems">
      <summary>Raised whenever new records are required, allowing the next batch of records to be fetched from the data source and provided to the grid.
<strong>This event must be handled</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.CommitAll">
      <summary>Raises the CommitItems event
for each page with modified data even if those pages are not being released from memory.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.CommitNew">
      <summary>Commits the new item to the underlying data source.</summary>
      <exception caption="" cref="System.InvalidOperationException">When manually handling the item-insertion process the CreatingNewItem, CommittingNewItem, and CancelingNewItem events must all be handled.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.Contains(System.Object)">
      <summary>Returns a value indicating whether the specified item exists in the collection.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
          <strong>true</strong> if the item exists in the collection; <strong>false</strong> otherwise.</span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.GetEnumerator">
      <summary>Retrieves an object that can be used to enumerate the items in the view.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
An <strong>IEnumerator</strong> that can be used to enumerate the items in the view.</span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.GetItemAt(System.Int32)">
      <summary>Retrieves the item at the specified index in the view.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The item at the specified <em>index</em>.</span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.IndexOf(System.Object)">
      <summary>Returns the zero-based index of the specified item.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The zero-based index of <em>item</em>. If the item is not found, -1 is returned.</span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index as the new CurrentItem.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
          <strong>true</strong>if the new current item in within the view; <strong>false</strong>otherwise.</span>
      </returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.CanFilter">
      <summary>Gets a value indicating whether the view supports filtering.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.CanGroup">
      <summary>Gets a value indicating whether the view supports grouping.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.CommitMode">
      <summary>Gets or sets a value representing when the CommitItems event will be raised.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.ConnectionError">
      <summary>Gets the connection error.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.ConnectionState">
      <summary>Gets the connection state of the underlying virtualized collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.Count">
      <summary>Gets the number of items in the view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.CurrentItem">
      <summary>Gets the current item in the view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.IsEmpty">
      <summary>Gets a value indicating whether the <strong>filtered</strong> view is empty.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.MaxRealizedItemCount">
      <summary>Gets a value representing the maximum amount of items that can be loaded in memory.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.PageSize">
      <summary>Gets a value representing the number of items that are contained in each page of data that is loaded in memory.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.PreemptivePageQueryRatio">
      <summary>Gets or sets a value representing the percentage from the start or the end of a page that, when accessed, will cause the previous or next page to
be queried and the items loaded in memory.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.SourceCollection">
      <summary>Gets the underlying un-filtered collection.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewBase.CommitItems">
      <summary>Raised when a page of data that contains edited items is about to be released from memory. <strong>This event must be handled when dealing with
an editable grid</strong>.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSource.QueryGroups">
      <summary>Raised to allow the data items contained in a virtualized collection view to be grouped using the information provided by the QueryGroupsEventsArgs received in the event parameters.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.CommitMode">
      <summary>Gets or sets a value representing when the CommitItems event will be raised.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.MaxRealizedItemCount">
      <summary>Gets a value representing the maximum amount of items that can be loaded in memory.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.PageSize">
      <summary>Gets a value representing the number of items that are contained in each page of data that is loaded in memory.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.PreemptivePageQueryRatio">
      <summary>Gets or sets a value representing the percentage from the start or the end of a page that, when accessed, will cause the previous or next page to
be queried and the items loaded in memory.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.CommitModeProperty">
      <summary>Identifies the CommitMode
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.MaxRealizedItemCountProperty">
      <summary>Identifies the MaxRealizedItemCount dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.PageSizeProperty">
      <summary>Identifies the PageSize
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.PreemptivePageQueryRatioProperty">
      <summary>Identifies the PreemptivePageQueryRatio dependency
property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DataGridVirtualizingCollectionViewSourceBase.CommitItems">
      <summary>Raised when a page of data that contains edited items is about to be released from memory. <strong>This event must be handled when dealing with
an editable grid</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel.GetItemIndex(System.Windows.DependencyObject)">
      <summary>Gets the index of an item contained in the <strong>DataGridVirtualizingPanel</strong>.</summary>
      <returns>The zero-based index of the index.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel.OnClearChildren">
      <summary>Called when the collection of child elements is cleared by the panel.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>Called when the <strong>Items</strong> collection associated with the panel's containing DataGridControl is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel.SetItemIndex(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the index of an item contained in the <strong>DataGridVirtualizingPanel</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel.CustomItemContainerGenerator">
      <summary>Gets the <strong>ItemContainerGenerator</strong> associated with this control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel.ItemCount">
      <summary>Gets a count of <strong>all</strong> the immediate child elements contained in the panel.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridVirtualizingPanel.ItemIndexProperty">
      <summary>Identifies the <strong>ItemIndex</strong> attached property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionView.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingQueryableCollectionView</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionView.#ctor(System.Linq.IQueryable)">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingQueryableCollectionView</strong> specifying the <strong>IQueryable</strong> source
that will provide the data items.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionView.#ctor(System.Linq.IQueryable,System.Boolean,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <strong>DataGridVirtualizingQueryableCollectionView</strong> specifying the <strong>IQueryable</strong> source,
if item properties should be automatically created, the page size, and the maximum realized item count.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionView.QueryableSource">
      <summary>Gets the queryable source that will provide the data items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionViewSource.QueryableSource">
      <summary>Gets the queryable source that will provide the data items.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataGridVirtualizingQueryableCollectionViewSource.QueryableSourceProperty">
      <summary>Identifies the QueryableSource dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRelationDetailDescription.#ctor">
      <summary>Initializes a new instance of the <strong>DataRelationDetailDescription</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRelationDetailDescription.#ctor(System.Data.DataRelation)">
      <summary>Initializes a new instance of the <strong>DataRelationDetailDescription</strong> using the specified data relation.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataRelationDetailDescription.DataRelation">
      <summary>Gets or sets the data relation that links the detail to the parent collection view.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.BeginEditCore">
      <summary>Called after the BeginEdit method to allow custom edit behavior.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.CancelEditCore">
      <summary>Called after the CancelEdit method to allow custom edit behavior.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.ClearContainer">
      <summary>Clears the content of the <strong>DataRow</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.CreateCell(Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>Create a new Cell in the row.</summary>
      <returns>A reference to the newly created Cell.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.EndEditCore">
      <summary>Called after the EndEdit method to allow custom edit behavior.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.IsValidCellType(Xceed.Wpf.DataGrid.Cell)">
      <summary>Retrieves a value indicating whether the type of the specified cell is supported by the row.</summary>
      <returns>
        <strong>true</strong> if the type of the cell is supported by the row; <strong>false</strong> otherwise. By default, all DataCells will return <strong>true</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.PrepareContainer(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Prepares a container in the specified DataGridContext for the <em>item</em>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>DataRow</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic
style (view or theme modifications) changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataRow.SetDataContext(System.Object)">
      <summary>Sets the data context of the <strong>DataRow</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataTableForeignKeyConverter.#ctor">
      <summary>Initializes a new instance of the <strong>ForeignKeyConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataTableForeignKeyConverter.GetKeyFromValue(System.Object,Xceed.Wpf.DataGrid.ForeignKeyConfiguration)">
      <summary>Retrieves the key for the specified value.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataTableForeignKeyConverter.GetValueFromKey(System.Object,Xceed.Wpf.DataGrid.ForeignKeyConfiguration)">
      <summary>Retrieves the value for the specified key.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DataTableForeignKeyDescription.#ctor">
      <summary>Initializes a new instance of the <strong>DataTableForeignKeyDescription</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DataTableForeignKeyDescription.ForeignKeyConstraint">
      <summary>Gets or sets a <strong>ForeignKeyConstraint</strong> representing a foreign key constraint defined in a <strong>DataTable</strong>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DataTableForeignKeyDescription.ForeignKeyConstraintProperty">
      <summary>Identifies the ForeignKeyConstraint dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.AllowDetailToggle">
      <summary>Gets or sets a value indicating whether the end user can toggle the expansion state of the child details of the details to which the default
configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.DefaultGroupConfiguration">
      <summary>Gets or sets the configuration that will be applied to groups without an explicit group configuration in the details to which the default
configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.DetailIndicatorStyle">
      <summary>Gets or sets the style that will be applied to the detail indicators of the details to which the default configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.Footers">
      <summary>Gets a collection that contains the items that are located in the footer sections of the details to which the default configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.GroupConfigurationSelector">
      <summary>Gets or sets a group-configuration selector that will be used to select the appropriate configuration for a group based on its information and/or
content for the details to which the default configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.Headers">
      <summary>Gets a collection containing the items in the header sections of the details to which the default configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.IsDeleteCommandEnabled">
      <summary>Gets or sets a value indicating whether the delete command is enabled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.ItemContainerStyle">
      <summary>Gets or sets the style that will be applied to the containers (DataRow) of
the data items in the details to which the default configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.ItemContainerStyleSelector">
      <summary>Gets or sets a style selector that will select the appropriate style to apply to the containers (DataRow) of the data items in the detail to which the default configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.MaxGroupLevels">
      <summary>
        <para>Gets or sets a value indicating the maximum number of group levels that can be created.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.MaxSortLevels">
      <summary>
        <para>Gets or sets a value indicating the maximum number of sort levels that can be created.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.UseDefaultHeadersFooters">
      <summary>Gets or sets a value indicating whether the default headers and footers are automatically added to the header and footer sections of the details
to which default the configuration is applied.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.AllowDetailToggleProperty">
      <summary>Identifies the AllowDetailToggle
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.DefaultGroupConfigurationProperty">
      <summary>Identifies the DefaultGroupConfiguration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.DetailIndicatorStyleProperty">
      <summary>Identifies the DetailIndicatorStyle
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.FootersProperty">
      <summary>Identifies the Footers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.GroupConfigurationSelectorProperty">
      <summary>Identifies the GroupConfigurationSelector dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.HeadersProperty">
      <summary>Identifies the Headers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.IsDeleteCommandEnabledProperty">
      <summary>Identifies the IsDeleteCommandEnabled dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.ItemContainerStyleProperty">
      <summary>Identifies the ItemContainerStyle
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.ItemContainerStyleSelectorProperty">
      <summary>Identifies the ItemContainerStyleSelector dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.MaxGroupLevelsProperty">
      <summary>Identifies the MaxGroupLevels dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.MaxSortLevelsProperty">
      <summary>Identifies the MaxSortLevels dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DefaultDetailConfiguration.UseDefaultHeadersFootersProperty">
      <summary>Identifies the UseDefaultHeadersFooters dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs.#ctor(System.Object,System.Exception)">
      <summary>Initializes a new instance of the <strong>DeletingSelectedItemErrorRoutedEventArgs</strong> class specifying the item and the exception that
occurred while attempting to delete it.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs.#ctor(System.Object,System.Exception,System.Windows.RoutedEvent)">
      <summary>Initializes a new instance of the <strong>DeletingSelectedItemErrorRoutedEventArgs</strong> class specifying the item and the exception that
occurred while attempting to delete it and using the supplied routed event identifier.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs.#ctor(System.Object,System.Exception,System.Windows.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the <strong>DeletingSelectedItemErrorRoutedEventArgs</strong> class specifying the item and the exception that
occurred while attempting to delete it and using the supplied routed event identifier and providing the opportunity to declare a differnent source for the
event.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs.Action">
      <summary>Gets or sets the action to take when an error occurs while attempting to delete an item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs.Exception">
      <summary>Gets the exception that occurred while attempting to delete the <em>item</em>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventArgs.Item">
      <summary>Gets t#he item being deleted.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DetailConfiguration.BeginInit">
      <summary>Signals the beginning of a batch modification process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DetailConfiguration.EndInit">
      <summary>Signals the end of a batch modification process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DetailConfiguration.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.AllowDetailToggle">
      <summary>Gets or sets a value indicating whether the end user can toggle the expansion state of the child details of the details to which the
configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.AutoCreateColumns">
      <summary>Gets or sets a value indicating whether the columns of the detail are automatically created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.AutoCreateDetailConfigurations">
      <summary>Gets or sets a value indicating whether the detail configurations of the detail are automatically created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.AutoCreateForeignKeyConfigurations">
      <summary>
        <para>Gets or sets a value indicating whether the foreign key configurations are automatically created.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.Columns">
      <summary>Gets a list of the columns that will be displayed in the details to which
the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.DefaultDetailConfiguration">
      <summary>Gets or sets the detail configuration that will be applied to the child details of the detail <strong>and any descendant details</strong> when an
explicit detail configuration is not provided for a specific detail relation.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.DefaultGroupConfiguration">
      <summary>Gets or sets the default configuration that will be applied to any groups in the detail for which an explicit group configuration is not
provided.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.DetailConfigurations">
      <summary>Gets the list of the detail configurations that have been explicitly provided for specific detail relations and that will be applied to any
corresponding details.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.DetailIndicatorStyle">
      <summary>Gets or sets the style that will be applied to the detail indicators of the details to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.Footers">
      <summary>Gets a collection that contains the items that are located in the footer sections of the details to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.GroupConfigurationSelector">
      <summary>Gets or sets a group-configuration selector that will be used to select the appropriate configuration for a group based on its information and/or
content for the details to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.GroupLevelDescriptions">
      <summary>Gets a collection of GroupLevelDescription objects that
contain information on each group level contained in the grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.Headers">
      <summary>Gets a collection containing the items in the header sections of the details to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.IsDeleteCommandEnabled">
      <summary>Gets or sets a value indicating whether the delete command is enabled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.ItemContainerStyle">
      <summary>Gets or sets the style that will be applied to the containers (DataRow) of
the data items in the details to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.ItemContainerStyleSelector">
      <summary>Gets or sets a style selector that will select the appropriate style to apply to the containers (DataRow) of the data items in the detail to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.MaxGroupLevels">
      <summary>
        <para>Gets or sets a value indicating the maximum number of group levels that can be created.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.MaxSortLevels">
      <summary>
        <para>Gets or sets a value indicating the maximum number of sort levels that can be created.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.RelationName">
      <summary>Gets or sets the name that identifies the configuration's corresponding detail descriptions defined in the parent <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridCollectionView.html">DataGridCollectionView</see>, <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridCollectionViewSource.html">DataGridCollectionViewSource</see>, or <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridDetailDescription.html">DataGridDetailDescription</see>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.Title">
      <summary>Gets or sets the title that can be used to provide a user-friendly name for the configurations corresponding detail relation and detail description.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.TitleTemplate">
      <summary>Gets or sets the template that will be used to display the configuration's title.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.UseDefaultHeadersFooters">
      <summary>Gets or sets a value indicating whether the default headers and footers are automatically added to the header and footer sections of the details
to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.Visible">
      <summary>Gets or sets a value indicating whether the details to which the configuration is applied are visible.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.DetailConfiguration.VisibleColumns">
      <summary>Gets a list of the columns whose Visible property is
<strong>true</strong>, ordered according to their <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Column~VisiblePosition.html">VisiblePositions</see>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.AllowDetailToggleProperty">
      <summary>Identifies the AllowDetailToggle dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.AutoCreateColumnsProperty">
      <summary>Identifies the AutoCreateColumns dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.AutoCreateDetailConfigurationsProperty">
      <summary>Identifies the AutoCreateDetailConfigurations dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.AutoCreateForeignKeyConfigurationsProperty">
      <summary>Identifies the AutoCreateForeignKeyConfigurations dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.ColumnsProperty">
      <summary>Identifies the Columns dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.DefaultDetailConfigurationProperty">
      <summary>Identifies the DefaultDetailConfiguration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.DefaultGroupConfigurationProperty">
      <summary>Identifies the DefaultGroupConfiguration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.DetailConfigurationsProperty">
      <summary>Identifies the DetailConfigurations
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.DetailIndicatorStyleProperty">
      <summary>Identifies the DetailIndicatorStyle
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.FootersProperty">
      <summary>Identifies the Footers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.GroupConfigurationSelectorProperty">
      <summary>Identifies the GroupConfigurationSelector dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.GroupLevelDescriptionsProperty">
      <summary>Identifies the GroupLevelDescriptions
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.HeadersProperty">
      <summary>Identifies the Headers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.IsDeleteCommandEnabledProperty">
      <summary>Identifies the IsDeleteCommandEnabled
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.ItemContainerStyleProperty">
      <summary>Identifies the ItemContainerStyle dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.ItemContainerStyleSelectorProperty">
      <summary>Identifies the ItemContainerStyleSelector dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.MaxGroupLevelsProperty">
      <summary>Identifies the MaxGroupLevels dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.MaxSortLevelsProperty">
      <summary>Identifies the MaxSortLevels dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.RelationNameProperty">
      <summary>Identifies the RelationName dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.TitleProperty">
      <summary>Identifies the Title dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.TitleTemplateProperty">
      <summary>Identifies the TitleTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.UseDefaultHeadersFootersProperty">
      <summary>Identifies the UseDefaultHeadersFooters dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.VisibleColumnsProperty">
      <summary>Identifies the VisibleColumns dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.DetailConfiguration.VisibleProperty">
      <summary>Identifies the Visible dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DetailConfiguration.InitializingInsertionRow">
      <summary>Raised when an InsertionRow in the detail is being initialized.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.DetailConfiguration.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DetailConfigurationCollection.ClearItems">
      <summary>
        <para>Removes all items from the collection.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DetailConfigurationCollection.InsertItem(System.Int32,Xceed.Wpf.DataGrid.DetailConfiguration)">
      <summary>Inserts the specified DetailConfiguration into the collection
at the specified index.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DetailConfigurationCollection.RemoveItem(System.Int32)">
      <summary>Removes the item at the specified index.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DetailConfigurationCollection.SetItem(System.Int32,Xceed.Wpf.DataGrid.DetailConfiguration)">
      <summary>Replaces the element at the specified index.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.DetailIndicator.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>DetailIndicator</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support
dynamic style (view or theme modifications) changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.EntityDetailDescription.#ctor">
      <summary>Initializes a new instance of the <strong>EntityDetailDescription</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.EntityDetailDescription.#ctor(System.String)">
      <summary>Initializes a new instance of the <strong>EntityDetailDescription</strong> class specifying its property name.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.EntityDetailDescription.GetDetailsForParentItem(Xceed.Wpf.DataGrid.DataGridCollectionViewBase,System.Object)">
      <summary>Retrieves the details for the specified parent data item.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
An <strong>IEnumerable</strong>representing the details of the specified data item.</span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.EntityDetailDescription.OnQueryDetails(Xceed.Wpf.DataGrid.QueryEntityDetailsEventArgs)">
      <summary>Raises the QueryDetails event.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.EntityDetailDescription.QueryDetails">
      <summary>Raised to (optionally) provided details for a data item.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.EnumerableDetailDescription.#ctor">
      <summary>Initializes a new instance of the <strong>EnumerableDetailDescription</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelector.#ctor">
      <summary>Initializes a new instance of the <strong>FieldNameGroupConfigurationSelector</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelector.SelectorItems">
      <summary>Gets the FieldNameGroupConfigurationIndictors contained in this
group-configuration selector.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelectorItem.#ctor">
      <summary>Initializes a new instance of the <strong>FieldNameGroupConfigurationSelectorItem</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelectorItem.FieldName">
      <summary>Gets or sets the field name of the column whose values were used to create the groups to which the group configuration will be applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelectorItem.GroupConfiguration">
      <summary>Gets or sets the group configuration that will be applied to the groups that are created by the values of the column with the specified field name</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FieldNameGroupConfigurationSelectorItem.IsSealed">
      <summary>Gets a value indicating whether this group-configuration indicator has been sealed (i.e., it has been added to a FieldNameGroupConfigurationSelectorItemCollection).</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCell.#ctor">
      <summary>Initializes a new instance of the <strong>FilterCell</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCell.ClearContainer">
      <summary>Clears the content of the cell.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCell.OnContentChanged(System.Object,System.Object)">
      <summary>Called when the <strong>Content</strong> property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCell.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Invoked when an unhandled <strong>LostKeyboardFocus</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FilterCell.ClearFilterButtonVisibility">
      <summary>Gets or sets a value representing the visibility of the clear-filter button</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FilterCell.FilterEditorTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> that defines the control that will be used to edit a filter criterion.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FilterCell.HasFilter">
      <summary>Gets a value indicating whether the a filter is currently active in the cell.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.FilterCell.ClearFilterButtonVisibilityProperty">
      <summary>Identfies the ClearFilterButtonVisibility
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.FilterCell.FilterEditorTemplateProperty">
      <summary>Identifies the FilterEditorTemplate dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.FilterCell.HasFilterProperty">
      <summary>Identifies the HasFilter dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterRow.#ctor">
      <summary>Initializes a new instance of the <strong>FilterRow</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterRow.CreateCell(Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>Creates a new FilterCell in the row.</summary>
      <returns>A reference to the newly created Cell.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterRow.IsValidCellType(Xceed.Wpf.DataGrid.Cell)">
      <summary>Retrieves a value indicating whether the type of the specified cell is supported by the row.</summary>
      <returns>
        <strong>true</strong> if the type of the cell is supported by the row; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterRow.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterRow.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Invoked when an unhandled <strong>GotKeyboardFocus</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterRow.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Reports a change to the <strong>IsKeyboardFocusWithin</strong><font color="black">property.</font></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterRow.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>PreviewMouseRightButtonUp</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterRow.PrepareContainer(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Prepares a container in the specified DataGridContext for the <em>item</em>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterRow.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>FilterRow</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic
style (view or theme modifications) changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FilterRow.ApplyFilterDelay">
      <summary>Gets or sets a value that determines the delay, in milliseconds, after which a newly provided filter criterion is applied once the keyboard is
idle.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FilterRow.ClearFilterButtonVisibility">
      <summary>Gets or sets a value representing the visibility of the clear-filter button of each cell in the row.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.FilterRow.ApplyFilterDelayProperty">
      <summary>Identifies the ApplyFilterDelay dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.FilterRow.ClearFilterButtonVisibilityProperty">
      <summary>Identifies the ClearFilterButtonVisibility
dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.DisplayMemberPath">
      <summary>Gets or sets a path to a value on the source object to serve as the visual representation of the object.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ForeignKeyConverter">
      <summary>
        <para>Gets or sets a foreign key converter, which allows custom key/value mappings to be provided.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ItemContainerStyle">
      <summary>Gets or sets the style that will be applied to the containers ( DataRow ) of the data items in the details to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ItemContainerStyleSelector">
      <summary>Gets or sets a style selector that will select the appropriate style to apply to the containers ( DataRow ) of the data items in the detail to which the configuration
is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ItemsSource">
      <summary>Gets or sets the source from which the values to be displayed are retrieved.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ValuePath">
      <summary>Gets or sets the path to the value on the source object that corresponds to the "key"</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.DisplayMemberPathProperty">
      <summary>Identifies the DisplayMemberPath
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ForeignKeyConverterProperty">
      <summary>Identifies the ForeignKeyConverter
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ItemContainerStyleProperty">
      <summary>Identifies the ItemContainerStyle
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ItemContainerStyleSelectorProperty">
      <summary>Identifies the ItemContainerStyleSelector dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ItemsSourceProperty">
      <summary>Identifies the ItemsSource dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.ForeignKeyConfiguration.ValuePathProperty">
      <summary>Identifies the ValuePath dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ForeignKeyConverter.GetKeyFromValue(System.Object,Xceed.Wpf.DataGrid.ForeignKeyConfiguration)">
      <summary>Retrieves the key for the specified value.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ForeignKeyConverter.GetValueFromKey(System.Object,Xceed.Wpf.DataGrid.ForeignKeyConfiguration)">
      <summary>
        <para>Retrieves the value for the specified key.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.GroupConfiguration">
      <summary>Gets the GroupConfiguration from which the group was created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.IsBottomLevel">
      <summary>Gets a value indicating whether the group is in the last group level of the group hierarchy.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.IsExpanded">
      <summary>Gets or sets a value indicating whether the group is expanded.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.ItemCount">
      <summary>Gets the number of data items contained in the group.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.Level">
      <summary>Gets a value indicating the level of the group within the group hierarchy.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.ParentGroups">
      <summary>Gets a reference to the parent groups of the group.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.SiblingGroups">
      <summary>Gets a reference to the sibling groups of the group.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.Title">
      <summary>Gets the data displayed in a group's associated GroupHeaderControl.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.TitleTemplate">
      <summary>Gets the <strong>DataTemplate</strong> used to display the Title's
content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.TitleTemplateSelector">
      <summary>Gets a <strong>DataTemplateSelector</strong> that provides a way to apply a different TitleTemplates based on custom logic.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.Value">
      <summary>Gets an object representing the value which caused the group to be created.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.ValueTemplate">
      <summary>Gets the <strong>DataTemplate</strong> used to display the group's Value.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Group.ValueTemplateSelector">
      <summary>Gets a <strong>DataTemplateSelector</strong> that provides a way to apply a different ValueTemplate based on custom logic.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Group.PropertyChanged">
      <summary>Raised when the value of a property changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByControl.GetContainerForItemOverride">
      <summary>Creates or identifies the container that is used to display an item in a grid or detail.</summary>
      <returns>A <strong>DependencyObject</strong> representing the container that is used to display an item in a grid or detail.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>
        <br />
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByControl.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>GroupByControl</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support
dynamic style (view or theme modifications) changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.AllowGroupingModification">
      <summary>Gets or sets a value indicating whether modifications to groups in the corresponding grid or detail can be made by the end user through the
group-by control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.AllowSort">
      <summary>Gets or sets a value indicating whether the sort direction of the columns in the corresponding grid or detail can be modified by the end user
through the group-by control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.ConnectionLineAlignment">
      <summary>Gets or sets the alignment of the lines that connect the group-by items in the group-by control together.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.ConnectionLineOffset">
      <summary>Gets or sets the offset at which to begin and end drawing the connection lines between the group-by items in the group-by control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.ConnectionLinePen">
      <summary>Gets or sets the pen that is used to draw the connection lines that connect the group-by items in the group-by control.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.NoGroupContent">
      <summary>Gets or sets the content that is displayed in the group-by control when it does not contain group-by items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.StairHeight">
      <summary>Gets or sets the vertical spacing between the tops of two consecutive group-by items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByControl.StairSpacing">
      <summary>Gets or sets the horizontal spacing between the right of a first group-by item and the left of the next group-by item.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.AllowGroupingModificationProperty">
      <summary>Identifies the AllowGroupingModification
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.AllowSortProperty">
      <summary>Identifies the AllowSort dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.ConnectionLineAlignmentProperty">
      <summary>Identifies the ConnectionLineAlignment
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.ConnectionLineOffsetProperty">
      <summary>Identifies the ConnectionLineOffset dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.ConnectionLinePenProperty">
      <summary>Identifies the ConnectionLinePen dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.NoGroupContentProperty">
      <summary>Identifies the NoGroupContent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.StairHeightProperty">
      <summary>Identifies the StairHeight dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByControl.StairSpacingProperty">
      <summary>Identifies the StairSpacing dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByItem.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>LostMouseCapture</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonDown</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonUp</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseMove</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByItem.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>GroupByItem</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic
style (view or theme modifications) changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupByItem.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event with the specified
event arguments.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupByItem.IsBeingDragged">
      <summary>Gets a value indicating whether the group-by item is being dragged.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupByItem.IsBeingDraggedProperty">
      <summary>Identifies the IsBeingDragged dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.GroupByItem.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupConfiguration.CreateInstanceCore">
      <summary>Creates a new instance of the <strong>GroupConfiguration</strong>.</summary>
      <returns>A reference to the new <strong>GroupConfiguration</strong> object.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupConfiguration.Footers">
      <summary>Gets a collection that contains the items that are located if the footer sections of the groups to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupConfiguration.GroupLevelIndicatorStyle">
      <summary>Gets or sets the style that will be applied to the group-level
indicators in the groups to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupConfiguration.Headers">
      <summary>Gets a collection that contains the items that are located if the header sections of the groups to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupConfiguration.InitiallyExpanded">
      <summary>Gets or sets the default expansion state of the groups to which the configuration will be applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupConfiguration.ItemContainerStyle">
      <summary>Gets or sets the style that will be applied to the containers ( DataRow ) of the data items in the groups to which the configuration is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupConfiguration.ItemContainerStyleSelector">
      <summary>Gets or sets a style selector that will select the appropriate style to apply to the containers ( DataRow ) of the data items in the groups to which the configuration
is applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupConfiguration.UseDefaultHeadersFooters">
      <summary>Gets a value indicating whether the default header and footers items are automatically added to the header and footer sections of the groups to
which the configuration is applied.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupConfiguration.FootersProperty">
      <summary>Identifies the Footers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupConfiguration.GroupLevelIndicatorStyleProperty">
      <summary>Identifies the GroupLevelIndicatorStyle
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupConfiguration.HeadersProperty">
      <summary>Identifies the Headers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupConfiguration.InitiallyExpandedProperty">
      <summary>Identifies the InitiallyExpanded dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupConfiguration.ItemContainerStyleProperty">
      <summary>Identifies the ItemContainerStyle dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupConfiguration.ItemContainerStyleSelectorProperty">
      <summary>Identifies the ItemContainerStyleSelector dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupConfiguration.UseDefaultHeadersFootersProperty">
      <summary>Identifies the UseDefaultHeadersFooters
dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupConfigurationSelector.SelectGroupConfiguration(System.Int32,System.Windows.Data.CollectionViewGroup,System.ComponentModel.GroupDescription)">
      <summary>Selects the appropriate group configuration based on the specified information.</summary>
      <returns>The GroupConfiguration that will be applied to the group. Can be
$$NULL$$ if the selector does not have a group configuration that corresponds to the specified information.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupExtensions.GetItems(Xceed.Wpf.DataGrid.Group)">
      <summary>Retrieves the items for the specified Group.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderControl.ClearContainer">
      <summary>Clears the content of the group-header control.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderControl.OnCreateAutomationPeer">
      <summary>Creates an appropriate <strong>AutomationPeer</strong> for this <strong>GroupHeaderControl</strong> instance.</summary>
      <returns>
        <span class="Apple-style-span" style="WORD-SPACING: 0px; FONT: 11px Verdana; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; BORDER-COLLAPSE: separate; orphans: 2; widows: 2; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0">
The <strong>AutomationPeer</strong> for this <strong>GroupHeaderControl</strong> instance.</span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderControl.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <para>Reports a change to the <strong>IsKeyboardFocusWithin</strong><font color="black">property.</font></para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderControl.PrepareContainer(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Prepares a container in the specified DataGridContext for the <em>item</em>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderControl.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>GroupHeaderControl</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support
dynamic style (view or theme modifications) changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupHeaderControl.Group">
      <summary>Gets the <strong>GroupHeaderControl's</strong> associated Group.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.GroupHeaderControl.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupHeaderFooterItemTemplate.#ctor">
      <summary>Initializes a new instance of the <strong>GroupHeaderFooterItemTemplate</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupHeaderFooterItemTemplate.Template">
      <summary>Gets or sets the template that is used by the <strong>GroupHeaderFooterItemTemplate</strong> to create its items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupHeaderFooterItemTemplate.VisibleWhenCollapsed">
      <summary>Gets or sets a value indicating whether the items created by the <strong>GroupHeaderFooterItemTemplate</strong> remain visible when their parent
groups are collapsed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelDescription.FieldName">
      <summary>Gets the field name of the column by which the data items are
grouped.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelDescription.Title">
      <summary>Gets the data displayed in the associated GroupHeaderControls of
the groups contained in this level.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelDescription.TitleTemplate">
      <summary>Gets the <strong>DataTemplate</strong> used to display the Title's content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelDescription.TitleTemplateSelector">
      <summary>Gets a <strong>DataTemplateSelector</strong> that provides a way to apply a different TitleTemplates based on custom logic.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelDescription.ValueTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to display the group's value.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelDescription.ValueTemplateSelector">
      <summary>Gets or sets a <strong>DataTemplateSelector</strong> that provides a way to apply a different ValueTemplate based on custom logic.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupLevelDescription.ValueTemplateProperty">
      <summary>Identifies the ValueTemplate dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupLevelDescription.ValueTemplateSelectorProperty">
      <summary>Identifies the ValueTemplateSelector
dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.GroupLevelDescription.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelDescriptionCollection.#ctor">
      <summary>Initializes a new instance of the GroupLevelDescriptionCollection class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicator.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>GroupLevelIndicator</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support
dynamic style (view or theme modifications) changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.GetGroupLevel(System.Windows.DependencyObject)">
      <summary>
        <para>Gets the group-level for which the group-level-indicator pane is displayed.</para>
      </summary>
      <returns>
        <para>A zero-based value indicating the group-level for which the group-level-indicator pane is displayed.</para>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.GetShowIndicators(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the group-level indicators contained in the group-level-indicator pane are shown.</summary>
      <returns>
        <strong>true</strong> if group-level indicators are shown; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.GetShowVerticalBorder(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the vertical borders of the group-level-indicator pane are displayed.</summary>
      <returns>
        <strong>true</strong> if the vertical borders of the group-level-indicator pane are displayed; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.MeasureOverride(System.Windows.Size)">
      <summary>Called to remeasure a control.</summary>
      <returns>The size of the control.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Raises the <strong>PropertyChanged</strong> event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.SetGroupLevel(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the group-level for which the group-level-indicator pane is displayed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.SetShowIndicators(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the group-level indicators contained in the group-level-indicator pane are shown.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.SetShowVerticalBorder(System.Windows.DependencyObject,System.Boolean)">
      <summary>Gets a value indicating whether the vertical borders of the group-level-indicator pane are displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.CurrentIndicatorCount">
      <summary>Gets a value indicating the number of child indicators contained in the <strong>GroupLevelIndicatorPane</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.Indented">
      <summary>Gets or sets a value indicating whether the group-level indicator pane is indented.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.IsLeaf">
      <summary>Gets a value indicating whether the <strong>GroupLevelIndicatorPane</strong> displays group-level indicatorsfor the context of the item in which
it is contained.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.CurrentIndicatorCountProperty">
      <summary>Identifies the CurrentIndicatorCount
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.GroupLevelProperty">
      <summary>Identifies the <strong>GroupLevel</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.IndentedProperty">
      <summary>
        <para align="left">Identifies the Indented dependency
property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.IsLeafProperty">
      <summary>Identifies the IsLeaf dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.ShowIndicatorsProperty">
      <summary>Identifies the <strong>ShowIndicators</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupLevelIndicatorPane.ShowVerticalBorderProperty">
      <summary>Identifies the <strong>ShowVerticalBorder</strong> attached property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupNameCountPair.#ctor(System.Object,System.Int32)">
      <summary>Initializes a new instance of the <strong>GroupNameCountPair</strong> class specifying the group name and item count.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupNameCountPair.ItemCount">
      <summary>Gets the number of items contained in the corresponding group.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupNameCountPair.Name">
      <summary>Gets the name of the corresponding group.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupNavigationButton.NavigateToGroup">
      <summary>Represents the <strong>NavigateToGroup</strong> command, which requests that clicked group header be brought to the top of the viewport.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.GroupNavigationControl.OnApplyTemplate">
      <summary>Builds the visual tree for this element.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupNavigationControl.Group">
      <summary>Gets or sets the group of the <strong>GroupNavigationControl</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupNavigationControl.MainItemTemplate">
      <summary>Gets or set the <strong>DataTemplate</strong> used <font color="black">to display each</font> main item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupNavigationControl.MainItemTemplateSelector">
      <summary>Gets or sets a <strong>DataTemplateSelector</strong> which provides custom logic for choosing a template used to display each main item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupNavigationControl.MaxDropDownHeight">
      <summary>Gets or sets the maximum height of the group navigation control's drop-down menu, in pixels.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupNavigationControl.GroupProperty">
      <summary>Identifies the Group dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupNavigationControl.MainItemTemplateProperty">
      <summary>Identifies the MainItemTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupNavigationControl.MainItemTemplateSelectorProperty">
      <summary>Identifies the MainItemTemplateSelector dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupNavigationControl.MaxDropDownHeightProperty">
      <summary>Identifies the MaxDropDownHeight dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.GroupNavigationControlItem.Group">
      <summary>Gets or sets the group of the <strong>GroupNavigationControlItem</strong>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.GroupNavigationControlItem.GroupProperty">
      <summary>Identifies the Group dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>HierarchicalGroupByControl</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to
support dynamic style (view or theme modifications) changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.HasGroups">
      <summary>Gets a value indicating whether the hierarchical group-by control contains group-by items, which display information about the groups that exist
in the corresponding grid or detail.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.NoGroupContent">
      <summary>Gets or sets the content that is displayed in the group-by control when it does not contain group-by items.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.AllowGroupingModificationProperty">
      <summary>Identifies the AllowGroupingModification dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.AllowSortProperty">
      <summary>Identifies the AllowSort dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.ConnectionLineAlignmentProperty">
      <summary>Identifies the ConnectionLineAlignment dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.ConnectionLineOffsetProperty">
      <summary>Identifies the ConnectionLineOffset
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.ConnectionLinePenProperty">
      <summary>Identifies the ConnectionLinePen
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.NoGroupContentProperty">
      <summary>Identifies the NoGroupContent dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.StairHeightProperty">
      <summary>Identifies the StairHeight dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.StairSpacingProperty">
      <summary>Identifies the StairSpacing dependency
property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.HierarchicalGroupByControl.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.GetContainerForItemOverride">
      <summary>Creates or identifies the container that is used to display an item in a detail.</summary>
      <returns>A <strong>DependencyObject</strong> representing the container that is used to display an item in a detail.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.IsItemItsOwnContainerOverride(System.Object)">
      <summary>Determines if the specified item is (or is eligible to be) its own <strong>ItemContainer</strong>.</summary>
      <returns>
        <strong>true</strong> if the item is (or is eligible to be) its own <strong>ItemContainer</strong>; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>Prepares the specified container to display the <em>item</em>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>HierarchicalGroupByControlNode</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order
to support dynamic style (view or theme modifications) changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.AllowGroupingModification">
      <summary>Gets or sets a value indicating whether modifications to groups in the corresponding grid or detail can be made by the end user through the
hierarchical group-by control node.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.AllowSort">
      <summary>Gets or sets a value indicating whether the sort direction of the columns in the corresponding grid or detail can be modified by the end user
through the hierarchical group-by control node.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.ConnectionLineAlignment">
      <summary>Gets or sets the alignment of the lines that connect the group-by items in the hierarchical group-by control node together.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.ConnectionLineOffset">
      <summary>Gets or sets the offset at which to begin and end drawing the connection lines between the group-by items in the hierarchical group-by control
node.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.ConnectionLinePen">
      <summary>Gets or sets the pen that is used to draw the connection lines that connect the group-by items in the hierarchical group-by control node.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.NoGroupContent">
      <summary>Gets or sets the content that is displayed in the hierarchical group-by control node when it does not contain hierarchical group-by items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.Title">
      <summary>Gets or sets the title of the hierarchical group-by control node.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.AllowGroupingModificationProperty">
      <summary>Identifies the AllowGroupingModication dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.AllowSortProperty">
      <summary>Identifies the AllowSort dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.ConnectionLineAlignmentProperty">
      <summary>Identifies the ConnectionLineAlignment dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.ConnectionLineOffsetProperty">
      <summary>Identifies the ConnectionLineOffset dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.ConnectionLinePenProperty">
      <summary>Identifies the ConnectionLinePen
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.NoGroupContentProperty">
      <summary>Identifies the NoGroupContent
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.StairHeightProperty">
      <summary>Identifies the StairHeight dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.StairSpacingProperty">
      <summary>Identifies the <em>StairSpacing</em>
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByControlNode.TitleProperty">
      <summary>Identifies the Title dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.OnApplyTemplate">
      <summary>Builds the group-by item's visual tree.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>LostMouseCaptured</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonDown</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonUp</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseMove</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>HierarchicalGroupByItem</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to
support dynamic style (view or theme modifications) changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event with
the specified <strong>PropertyChangedEventArgs</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.IsBeingDragged">
      <summary>Gets a value indicating whether the group-by item is being dragged.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.SortDirection">
      <summary>Gets a value indicating the direction in which the values of the corresponding column are sorted.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.IsBeingDraggedProperty">
      <summary>Identifies the IsBeingDragged dependency
property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.HierarchicalGroupByItem.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupLevelIndicatorPane.MeasureOverride(System.Windows.Size)">
      <summary>Called to remeasure a control.</summary>
      <returns>The size of the control.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.HierarchicalGroupLevelIndicatorPane.OnApplyTemplate">
      <summary>Builds the visual tree for this element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.InitializingInsertionRowEventArgs.#ctor(Xceed.Wpf.DataGrid.InsertionRow)">
      <summary>Initializes a new instance of the InitializingInsertionRowEventArgs class specifying the <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.InsertionRow.html">InsertionRow</see> to initialize.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.InitializingInsertionRowEventArgs.InsertionRow">
      <summary>Gets or sets the InsertionRow to initialize.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.InsertionCell.#ctor">
      <summary>Initializes a new instance of the InsertionCell class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.InsertionCell.InitializeCore(Xceed.Wpf.DataGrid.DataGridContext,Xceed.Wpf.DataGrid.Row,Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>Called after the Initialize method to allow custom initialization.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.InsertionCell.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>InsertionCell</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support
dynamic style (view or theme modifications) changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.InsertionRow.BeginEditCore">
      <summary>
        <para>Called after the BeginEdit method to allow custom edit behavior.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.InsertionRow.CancelEditCore">
      <summary>
        <para>Called after the CancelEdit method to allow custom edit
behavior.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.InsertionRow.CreateCell(Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>Creates a new InsertionCell in the row.</summary>
      <returns>A reference to the newly created Cell.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.InsertionRow.EndEditCore">
      <summary>
        <para>Called after the EndEdit method to allow custom edit behavior.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.InsertionRow.IsValidCellType(Xceed.Wpf.DataGrid.Cell)">
      <summary>Retrieves a value indicating whether the type of the specified cell is supported by the row.</summary>
      <returns>
        <strong>true</strong> if the type of the cell is supported by the row; <strong>false</strong> otherwise. By default, all InsertionCells will return <strong>true</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.InsertionRow.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.InsertionRow.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>InsertionRow</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support
dynamic style (view or theme modifications) changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.InsertionRow.InsertionMode">
      <summary>Gets or sets the insertion mode used by the insertion row. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.InsertionRow.InsertionModeProperty">
      <summary>Identifies the InsertionMode dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.KeyActivationGesture.#ctor">
      <summary>Initializes a new instance of the KeyActivationGesture class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.KeyActivationGesture.CreateInstanceCore">
      <summary>Creates a new instance of the <strong>KeyActivationGestures</strong> class.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.KeyActivationGesture.IsActivationKey(System.Windows.Input.Key,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)">
      <summary>Retrieves a value indicating whether the specified <em>key</em> is a supported activation key for this gesture.</summary>
      <returns>
        <strong>true</strong> if the key is a supported activation key for this gesture; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.KeyActivationGesture.Key">
      <summary>Gets or sets the key to verify.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.KeyActivationGesture.Modifiers">
      <summary>Gets or sets any modifier keys (ALT, SHIFT, or CTRL).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.KeyActivationGesture.SystemKey">
      <summary>Gets or sets the key to verify.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.KeyActivationGesture.KeyProperty">
      <summary>Identifies the Key dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.KeyActivationGesture.ModifiersProperty">
      <summary>Identifies the Modifiers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.KeyActivationGesture.SystemKeyProperty">
      <summary>Identifies the SystemKey dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelector.#ctor">
      <summary>Initializes a new instance of the <strong>LevelGroupConfigurationSelector</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelector.SelectorItems">
      <summary>Gets the LevelGroupConfigurationSelectorItems
contained in this group-configuration selector.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelectorItem.#ctor">
      <summary>Initializes a new instance of the <strong>LevelGroupConfigurationIndicator</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelectorItem.GroupConfiguration">
      <summary>Gets or sets the group configuration that will be applied to the groups of the specified level.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelectorItem.IsSealed">
      <summary>Gets a value indicating whether this group-configuration indicator has been sealed (i.e., it has been added to a LevelGroupConfigurationSelector).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.LevelGroupConfigurationSelectorItem.Level">
      <summary>Get or sets the level of the groups to which the group configuration will be applied.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Licenser.LicenseKey">
      <summary>Gets or sets the license key used to license the classes contained in the Xceed.Wpf.DataGrid assembly.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ListSourceDetailDescription.#ctor">
      <summary>Initializes a new instance of th e <strong>ListSourceDetailDescription</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.PropertyDetailDescription.#ctor">
      <summary>Initializes a new instance of the <strong>PropertyDetailDescription</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.PropertyDetailDescription.#ctor(System.ComponentModel.PropertyDescriptor)">
      <summary>
        <para>Initializes a new instance of the <strong>PropertyDetailDescription</strong> class specifying the PropertyDescriptor whose corresponding property's content
will be displayed as the details of the <strong>master</strong> data items in a grid or as the data items of another detail.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.PropertyDetailDescription.PropertyDescriptor">
      <summary>Gets or sets the PropertyDescriptor
whose corresponding property's content will be displayed as the details of the <strong>master</strong> data items in a grid or as the data items of another
detail.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryAutoFilterDistinctValuesEventArgs.DistinctValues">
      <summary>Gets a list of the distinct values for the associated DataGridItemProperty.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryAutoFilterDistinctValuesEventArgs.ItemProperty">
      <summary>Gets the DataGridItemProperty for which distinct values need
to be returned.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryDistinctValueEventArgs.DataSourceValue">
      <summary>Gets the original distinct value extracted from the underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryDistinctValueEventArgs.DistinctValue">
      <summary>Gets or sets the custom distinct value that replaces the one originally extracted from the underlying data source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryEntityDetailsEventArgs.Handled">
      <summary>Gets or sets a value indicating if the event was handled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryEntityDetailsEventArgs.ParentItem">
      <summary>Gets the parent item for which details are to be retrieved.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryGroupsEventArgs.ChildGroupDescription">
      <summary>Gets the child group description.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryGroupsEventArgs.ChildGroupNameCountPairs">
      <summary>Gets a list of GroupNameCountPair objects that represent the
groups and the order in which they are displayed in the virtualized collection view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryGroupsEventArgs.ChildGroupPropertyName">
      <summary>Gets the name of the item property that should be queried in order to find its distinct values and their count taking into account the parent
groups, which can be retrieved through the GroupPath property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryGroupsEventArgs.ChildSortDirection">
      <summary>Gets the direction in which child groups are sorted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryGroupsEventArgs.CollectionView">
      <summary>Gets the containing virtualized collection view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryGroupsEventArgs.GroupPath">
      <summary>Gets a read only collection of DataGridGroupInfo objects, which
provide information on the parent groups.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryItemCountEventArgs.CollectionView">
      <summary>Gets the DataGridVirtualizingCollectionView to
which the grid is bound.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryItemCountEventArgs.Count">
      <summary>Gets or sets the number of items contained in the collection view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryItemCountEventArgs.GroupPath">
      <summary>
        <para>Gets a read only collection of DataGridGroupInfo objects, which provide
information on the parent groups.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryItemsEventArgs.AsyncQueryInfo">
      <summary>Gets an AsyncQueryInfo that provides the information necessary to
retrieve the next batch of items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryItemsEventArgs.CollectionView">
      <summary>Gets the DataGridVirtualizingCollectionView to
which the grid is bound.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.QueryItemsEventArgs.GroupPath">
      <summary>
        <para>Gets a read only collection of DataGridGroupInfo objects, which provide
information on the parent groups.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.BeginEdit">
      <summary>Places the row in edit mode.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.BeginEditCore">
      <summary>
        <para>Called after the BeginEdit method to allow custom edit behavior.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.CancelEdit">
      <summary>Cancels the edit process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.CancelEditCore">
      <summary>
        <para>Called after the CancelEdit method to allow custom edit
behavior.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.ClearContainer">
      <summary>Clears the content of the <strong>Row</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.CreateCell(Xceed.Wpf.DataGrid.ColumnBase)">
      <returns>A reference to the newly created Cell.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.EndEdit">
      <summary>Ends the edit process and allows the row to exit edit mode.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.EndEditCore">
      <summary>
        <para>Called after the EndEdit method to allow custom edit behavior.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.IsValidCellType(Xceed.Wpf.DataGrid.Cell)">
      <summary>Retrieves a value indicating whether the type of the specified cell is supported by the row. This method is abstract.</summary>
      <returns>Classes that override this method should return <strong>true</strong> if the type of the cell is supported by the row; <strong>false</strong>
otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnCreateAutomationPeer">
      <summary>Creates an appropriate <strong>AutomationPeer</strong> for this row.</summary>
      <returns>The <strong>AutomationPeer</strong> for this row.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnEditBeginning(Xceed.Wpf.DataGrid.CancelRoutedEventArgs)">
      <summary>Raises the EditBeginning event, which signals that the edit
process is about to begin.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnEditBegun">
      <summary>Raises the EditBegun event, which signals that the edit process
has begun.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnEditCanceled">
      <summary>Raises the EditCanceled event, which signals that the edit
process has been canceled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnEditCanceling">
      <summary>Raises the EditCanceling event, which signals that the edit
process is being canceled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnEditEnded">
      <summary>Raises the EditEnded event, which signals that the edit process
has ended.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnEditEnding(Xceed.Wpf.DataGrid.CancelRoutedEventArgs)">
      <summary>Raises the EditEnding event, which signals that the edit process
is about to end.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>Invoked when an unhandled <strong>GotKeyboardFocus</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <para>Reports a change to the <strong>IsKeyboardFocusWithin</strong><font color="black">property.</font></para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseEnter</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeave</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonDown</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseMove</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.OnValidationErrorChanging(Xceed.Wpf.DataGrid.RowValidationErrorRoutedEventArgs)">
      <summary>Invoked when an unhandled <strong>ValidationErrorChanging</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.PrepareContainer(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Prepares a container in the specified DataGridContext for the
<em>item</em>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>Row</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic style
(view or theme modifications) changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.FindFromChild(System.Windows.DependencyObject)">
      <summary>Finds the parent row for the specified dependency object.</summary>
      <returns>The parent row of <em>child</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.FindFromChild(Xceed.Wpf.DataGrid.DataGridContext,System.Windows.DependencyObject)">
      <summary>Finds the parent row for the specified dependency object.</summary>
      <returns>The parent row of <em>child</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Row.FindFromChild(Xceed.Wpf.DataGrid.DataGridControl,System.Windows.DependencyObject)">
      <summary>Finds the parent row for the specified dependency object.</summary>
      <returns>The parent row of <em>child</em>.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.CellEditorDisplayConditions">
      <summary>Gets or sets a value indicating under what conditions the editors for the cells are displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.CellErrorStyle">
      <summary>Gets or sets the style that will be used by the cells contained in the row when their content fails the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.Cells">
      <summary>Gets a collection of the cells contained in the row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.EditTriggers">
      <summary>Gets or sets a value indicating what triggers will cause cells to enter edit mode.<!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="%%comment%%" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="property" source="Item" filter="" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=overloadlist,caption=$$OverloadList$$%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%" --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.HasValidationError">
      <summary>Gets a value indicating whether the content of one of the cells contained in the row failed the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.InactiveSelectionBackground">
      <summary>Get or sets the background of the selected rows when
a grid does not have the focus.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.InactiveSelectionForeground">
      <summary>Get or sets the foreground of the selected rows when
a grid does not have the focus.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.IsBeingEdited">
      <summary>Gets a value indicating whether the row is being edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.IsCurrent">
      <summary>Gets a value indicating whether the row is the current
item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.IsDirty">
      <summary>Gets a value indicating whether the content of one of the cells in the row has been modified.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.IsSelected">
      <summary>Gets a value indicating whether the row is selected.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.IsValidationErrorRestrictive">
      <summary>Gets or sets a value indicating whether the validation rule that failed prevents the focus from moving to another row until the error is fixed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.NavigationBehavior">
      <summary>Gets or sets a value indicating how the focus navigates from one element to another in a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.ReadOnly">
      <summary>Gets or sets a value indicating whether the row is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.SelectionBackground">
      <summary>Get or sets the background of the selected rows when
a grid is focused.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.SelectionForeground">
      <summary>Get or sets the foreground of the selected rows when
a grid is focused.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Row.ValidationError">
      <summary>Gets or sets information about the validation rule that failed the validation process.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.CellErrorStyleProperty">
      <summary>Identifies the CellErrorStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.CellsProperty">
      <summary>Identifies the Cells dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.EditBeginningEvent">
      <summary>Identifies the EditBeginning routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.EditBegunEvent">
      <summary>Identifies the EditBegun routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.EditCanceledEvent">
      <summary>Identifies the EditCanceled routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.EditCancelingEvent">
      <summary>Identifies the EditCanceling routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.EditEndedEvent">
      <summary>Identifies the EditEnded routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.EditEndingEvent">
      <summary>Identifies the EditEnding routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.EditTriggersProperty">
      <summary>Identifies the EditTriggers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.HasValidationErrorProperty">
      <summary>Identifies the HasValidationError dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.InactiveSelectionBackgroundProperty">
      <summary>Identifies the InactiveSelectionBackground
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.InactiveSelectionForegroundProperty">
      <summary>Identifies the InactiveSelectionForeground
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.IsBeingEditedProperty">
      <summary>Identifies the IsBeingEdited dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.IsCurrentProperty">
      <summary>Identifies the IsCurrent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.IsDirtyProperty">
      <summary>Identifies the IsDirty dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.IsSelectedProperty">
      <summary>Identifies the IsSelected dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.IsValidationErrorRestrictiveProperty">
      <summary>Identifies the IsValidationErrorRestrictive
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.NavigationBehaviorProperty">
      <summary>Identifies the NavigationBehavior dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.ReadOnlyProperty">
      <summary>Identifies the ReadOnly dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.SelectionBackgroundProperty">
      <summary>Identifies the SelectionBackground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.SelectionForegroundProperty">
      <summary>Identifies the SelectionForeground dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.ValidationErrorChangingEvent">
      <summary>Identifies the ValidationErrorChanging routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Row.ValidationErrorProperty">
      <summary>Identifies the ValidationError dependency property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Row.EditBeginning">
      <summary>Raised when the BeginEdit method has been called to signal that the
edit process is about to begin.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Row.EditBegun">
      <summary>Raised after the EditBeginning event to signal that the edit
process has begun.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Row.EditCanceled">
      <summary>Raised after the EditCanceling event to signal that the edit
process has been canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Row.EditCanceling">
      <summary>Raised when the CancelEdit method has been called to signal that the
edit process is being canceled.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Row.EditEnded">
      <summary>Raised after the EditEnding event to signal that the edit process
has ended.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Row.EditEnding">
      <summary>Raised when the EndEdit method has been called to signal that the edit
process is about to end.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Row.ValidationErrorChanging">
      <summary>Raised when the value of the ValidationError property is about
to change.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.GetRowSelectorStyle(System.Windows.DependencyObject)">
      <summary>Gets the style that will be applied to row selectors.</summary>
      <returns>The <strong>Style</strong> that will be applied to row selectors.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.GetVisible(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the row selectors are visible.</summary>
      <returns>
        <strong>true</strong> if the row selectors are visible; <strong>false</strong> otherwise. By default, <strong>true</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>LostMouseCapture</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonDown</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseLeftButtonUp</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>Invoked when an unhandled <strong>MouseMove</strong> attached event reaches this element in its route.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Invoked whenever the effective value of any dependency property on this element has been updated. The specific dependency property that changed
is reported in the arguments parameter.<br />
Raises the PropertyChanged event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.SetRowSelectorStyle(System.Windows.DependencyObject,System.Windows.Style)">
      <summary>Sets the style that will be applied to row selectors.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelector.SetVisible(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the row selectors are visible.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.ContainerRect">
      <summary>Gets the row selector's container <strong>Rect.</strong></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.HasValidationError">
      <summary>Gets a value indicating whether the row selector's associated row has a validation error.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.IsBeingEdited">
      <summary>Gets or sets a value indicating whether the row selector's associated data item is being edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.IsCurrent">
      <summary>Gets or sets a value indicating whether the row selector's associated row is current.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.IsPressed">
      <summary>Gets or sets a value indicating whether the <strong>RowSelector</strong> is pressed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.ItemIndex">
      <summary>Gets the index of the <strong>RowSelector's</strong> associated data item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.Orientation">
      <summary>Gets or sets the orientation of the <strong>RowSelector</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelector.RowType">
      <summary>Gets the type of the row associated with the row selector.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.ContainerRectProperty">
      <summary>Identifies the ContainerRect dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.HasValidationErrorProperty">
      <summary>Identifies the HasValidationError dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.IsBeingEditedProperty">
      <summary>Identifies the IsBeingEdited dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.IsCurrentProperty">
      <summary>Identifies the IsCurrent dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.IsPressedProperty">
      <summary>Identifies the IsPressed dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.ItemIndexProperty">
      <summary>Identifies the ItemIndex dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.RowSelectorStyleProperty">
      <summary>Identifies the RowSelectorStyle attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.RowTypeProperty">
      <summary>Identifies the RowType dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelector.VisibleProperty">
      <summary>Identifies the Visible attached property.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.RowSelector.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelectorPane.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the contents of a row-selector pane.</summary>
      <returns>The size of the row-selector pane.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowSelectorPane.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements in anticipation of arranging them during the <strong>ArrangeOverride</strong> pass.</summary>
      <returns>The <strong>Size</strong> that represents the desired size of the element.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowSelectorPane.Orientation">
      <summary>Gets or sets the orientation of the <strong>RowSelectorPane</strong>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.RowSelectorPane.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowValidationError.#ctor(System.Windows.Controls.ValidationRule,Xceed.Wpf.DataGrid.Row,System.Object,System.Exception)">
      <summary>Initializes a new instance of the RowValidationError class
specifying various information on the validation rule that caused the caused the value to fail the validation process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowValidationError.ErrorContent">
      <summary>
        <para>Gets an object containing the error content.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowValidationError.Exception">
      <summary>
        <para>Gets the exception that was raised when the value failed the binding-level validation process.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowValidationError.RowInError">
      <summary>
        <para>Gets the row whose value(s) failed the binding-level validation process.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowValidationError.RuleInError">
      <summary>
        <para>Gets the validation rule that caused the value to fail the binding-level validation process.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowValidationErrorRoutedEventArgs.#ctor(Xceed.Wpf.DataGrid.RowValidationError)">
      <summary>Initializes a new instance of the <strong>RowValidationErrorRoutedEventArgs</strong> class specifying the RowValidationError that occurred.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowValidationErrorRoutedEventArgs.#ctor(System.Windows.RoutedEvent,Xceed.Wpf.DataGrid.RowValidationError)">
      <summary>Initializes a new instance of the <strong>RowValidationErrorRoutedEventArgs</strong> class specifying the RowValidationError that occurred and using the supplied routed event identifier.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.RowValidationErrorRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object,Xceed.Wpf.DataGrid.RowValidationError)">
      <summary>Initializes a new instance of the <strong>RowValidationErrorRoutedEventArgs</strong> class specifying the RowValidationError that occurred and using the supplied routed event identifier and
providing the opportunity to declare a different source for the event.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.RowValidationErrorRoutedEventArgs.RowValidationError">
      <summary>Gets the RowValidationError that occurred</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ScrollTip.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ScrollTip.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>ScrollTip</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic
style (view or theme modifications) changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionInfo.AddedCellRanges">
      <summary>Gets a list of the cell ranges that were added to the SelectedItems collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionInfo.AddedItemRanges">
      <summary>Gets a list of the data item ranges that were added to the SelectedItems collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionInfo.AddedItems">
      <summary>Gets a list of the items that were added to the SelectedItems collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionInfo.DataGridContext">
      <summary>Gets the context from which items were selected and/or unselected.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionInfo.RemovedCellRanges">
      <summary>Gets a list of the cell ranges that were removed from the SelectedItems collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionInfo.RemovedItemRanges">
      <summary>Gets a list of the data item ranges that were removed from the SelectedItems collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.SelectionInfo.RemovedItems">
      <summary>Gets a list of the items that were removed from the SelectedItems collection.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StaircasePanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of a <strong>StaircasePanel</strong> element.</summary>
      <returns>The <strong>Size</strong> that represents the arranged size of this <strong>StaircasePanel</strong> element and its children.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StaircasePanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the children of a <strong>StaircasePanel</strong> in anticipation of arranging them during the ArrangeOverride pass.</summary>
      <returns>The <strong>Size</strong> that represents the desired size of the element.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StaircasePanel.OnChildDesiredSizeChanged(System.Windows.UIElement)">
      <summary>Suspends layout behavior when a child element is resized.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StaircasePanel.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Draws the content of a <strong>DrawingContext</strong> object during the render pass of a <strong>StaircasePanel</strong> element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StaircasePanel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Invoked when the <strong>VisualCollection</strong> of a visual object is modified.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.StaircasePanel.ConnectionLineAlignment">
      <summary>Gets or sets the alignment of the lines that connect the elements in the <strong>StaircasePanel</strong> together.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.StaircasePanel.ConnectionLineOffset">
      <summary>Gets or sets a value representing the offset at which to being and end drawing the connection lines between the elements in the
<strong>StaircasePanel</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.StaircasePanel.ConnectionLinePen">
      <summary>Gets or sets the <strong>Pen</strong> that is used to draw the connection lines that connect the elements in the <strong>StaircasePanel</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.StaircasePanel.StairHeight">
      <summary>Gets or sets the vertical spacing between the tops of two consecutive elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.StaircasePanel.StairSpacing">
      <summary>Gets or sets the horizontal spacing between the right of a first element and the left of the next element.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.StaircasePanel.ConnectionLineAlignmentProperty">
      <summary>Identifies the ConnectionLineAlignment
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.StaircasePanel.ConnectionLineOffsetProperty">
      <summary>Identifies the ConnectionLineOffset dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.StaircasePanel.ConnectionLinePenProperty">
      <summary>Identifies the ConnectionLinePen dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.StaircasePanel.StairHeightProperty">
      <summary>Identifies the StairHeight dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.StaircasePanel.StairSpacingProperty">
      <summary>Identifies the StairSpacing dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StatCell.#ctor">
      <summary>Intializes a new instance of the <strong>StatCell</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StatCell.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>StatCell</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic
style (view or theme modifications) changes.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.StatCell.ResultConverter">
      <summary>Gets or sets the converter that will be used to convert the content of a <strong>StatCell</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.StatCell.ResultConverterCulture">
      <summary>Gets or sets the <strong>CultureInfo</strong> used by the ResultConverter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.StatCell.ResultConverterParameter">
      <summary>Gets or sets the parameter used by the ResultConverter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.StatCell.ResultPropertyName">
      <summary>Gets or sets the property name from which the result of a statistical function can be retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.StatCell.ResultConverterCultureProperty">
      <summary>Identifies the ResultConverterCulture dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.StatCell.ResultConverterParameterProperty">
      <summary>Identifies the ResultConverterParameter
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.StatCell.ResultConverterProperty">
      <summary>Identifies the ResultConverter dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.StatCell.ResultPropertyNameProperty">
      <summary>Identifies the ResultPropertyName dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StatRow.CreateCell(Xceed.Wpf.DataGrid.ColumnBase)">
      <summary>Creates a new StatCell in the row.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StatRow.IsValidCellType(Xceed.Wpf.DataGrid.Cell)">
      <summary>Retrieves a value indicating whether the type of the specified cell is supported by the row.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.StatRow.PrepareDefaultStyleKey(Xceed.Wpf.DataGrid.Views.ViewBase)">
      <summary>When deriving from the <strong>StatRow</strong> class, <strong>PrepareDefaultStyleKey</strong> must be overridden in order to support dynamic
style (view or theme modifications) changes.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.TextInputActivationGesture.#ctor">
      <summary>Initializes a new instance of the TextInputActivationGesture class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.TextInputActivationGesture.CreateInstanceCore">
      <summary>Creates a new instance of the <strong>TextInputActivationGesture</strong> class.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.UnboundColumn.#ctor">
      <summary>Initializes a new instance of the <strong>UnboundColumn</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.UnboundColumn.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <strong>UnboundColumn</strong> class specifying its field name and title.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.UnboundColumn.ReadOnly">
      <summary>Gets or sets a value indicating whether the column is read only.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.UnboundColumn.ReadOnlyProperty">
      <summary>Identifies the ReadOnly dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemInfo.DataItem">
      <summary>Gets a data item in its current modified state.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemInfo.Index">
      <summary>Gets the index of the data item.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemInfo.OldValues">
      <summary>Gets the values of the data item as they were before they were modified.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <strong>ICollection</strong> to an <strong>Array</strong>, starting at a particular <strong>Array</strong> index.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>An <strong>IEnumerator</strong> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection.Count">
      <summary>Gets the number of elements contained in the <strong>ICollection</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <strong>ICollection</strong> is thread-safe.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection.Item(System.Int32)">
      <summary>Gets the item at the specified index.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.VirtualizedItemValueCollection.Item(System.String)">
      <summary>Gets the item with the specified name.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CancelRoutedEventHandler">
      <summary>Represents the method that will handle cancelable routed events.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.CellValidationErrorRoutedEventHandler">
      <summary>Represents the method that will handle the Cell.ValidationErrorChanging event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCurrentChangedEventHandler">
      <summary>Represents the method that will handle the CurrentChanged event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridCurrentChangingEventHandler">
      <summary>Represents the method that will handle the CurrentChanging event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridSelectionChangedEventHandler">
      <summary>Represents the method that will handle the SelectionChanged event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DataGridSelectionChangingEventHandler">
      <summary>Represents the method that will handle the SelectionChanging
event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.DeletingSelectedItemErrorRoutedEventHandler">
      <summary>Represents the method that will handle the DeletingSelectedItemError event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.RowValidationErrorRoutedEventHandler">
      <summary>Represents the method that will handle the Row.ValidationErrorChanging event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents">
      <summary>Class that provides the attached events and methods that allow a class to subscribe to or unsubscribe from these attached events on a specific
object.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.CellAutomationPeer">
      <summary>Exposes "Cell" types to UI Automation.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.ColumnManagerCellAutomationPeer">
      <summary>Exposes "ColumnManagerCell" types to UI Automation.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.ColumnManagerRowAutomationPeer">
      <summary>Exposes "ColumnManagerRow" types to UI Automation.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer">
      <summary>Exposes "DataGridContext" types to UI Automation.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.DataGridControlAutomationPeer">
      <summary>Exposes "DataGridControl" types to UI Automation.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer">
      <summary>Exposes "DataGridGroup" types to UI Automation.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer">
      <summary>Exposes "DataGridItem" types to UI Automation.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventArgs">
      <summary>Contains state information and event data associated with a routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventArgs">
      <summary>Contains state information and event data associated with a routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventArgs">
      <summary>Contains state information and event data associated with a routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventArgs">
      <summary>Contains state information and event data associated with a routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventArgs">
      <summary>Contains state information and event data associated with a routed event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.RowAutomationPeer">
      <summary>Exposes "Cell" types to UI Automation.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryAutomationIdForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventHandler)">
      <summary>Subscribes to the QueryAutomationIdForDetail routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryAutomationIdForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventHandler)">
      <summary>Subscribes to the QueryAutomationIdForGroup routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryHelpTextForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventHandler)">
      <summary>Subscribes to the QueryHelpTextForDetail routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryHelpTextForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventHandler)">
      <summary>Subscribes to the QueryHelpTextForGroup routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryItemStatusForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventHandler)">
      <summary>Subscribes to the QueryItemStatusForDetail routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryItemStatusForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventHandler)">
      <summary>Subscribes to the QueryItemStatusForGroup routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryItemTypeForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventHandler)">
      <summary>Subscribes to the QueryItemTypeForDetail routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryItemTypeForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventHandler)">
      <summary>Subscribes to the QueryItemTypeForGroup routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryNameForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventHandler)">
      <summary>Subscribes to the QueryNameForDetail routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.AddQueryNameForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventHandler)">
      <summary>Subscribes to the QueryNameForGroup routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryAutomationIdForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventHandler)">
      <summary>Unsubscribes from the QueryAutomationIdForDetail routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryAutomationIdForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventHandler)">
      <summary>Unsubscribes from the QueryAutomationIdForGroup routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryHelpTextForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventHandler)">
      <summary>Unsubscribes from the QueryHelpTextForDetail routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryHelpTextForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventHandler)">
      <summary>Unsubscribes from the QueryHelpTextForGroup routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryItemStatusForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventHandler)">
      <summary>Unsubscribes from the QueryItemStatusForDetail routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryItemStatusForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventHandler)">
      <summary>Unsubscribes from the QueryItemStatusForGroup routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryItemTypeForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventHandler)">
      <summary>Unsubscribes from the QueryItemTypeForDetail routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryItemTypeForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventHandler)">
      <summary>Unsubscribes from the QueryItemTypeForGroup routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryNameForDetailHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventHandler)">
      <summary>Unsubscribes from the QueryNameForDetail routed event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.RemoveQueryNameForGroupHandler(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventHandler)">
      <summary>Unsubscribes from the QueryNameForGroup routed event.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryAutomationIdForDetailEvent">
      <summary>
        <para>Occurs before the AutomationID for a detail is retrieved.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryAutomationIdForGroupEvent">
      <summary>Occurs before the AutomationID for a group is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryHelpTextForDetailEvent">
      <summary>Occurs before the help text for a detail is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryHelpTextForGroupEvent">
      <summary>Occurs before the help text for a group is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryItemStatusForDetailEvent">
      <summary>Occurs before the item status for a detail is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryItemStatusForGroupEvent">
      <summary>Occurs before the item status for a group is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryItemTypeForDetailEvent">
      <summary>Occurs before the item type for a detail is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryItemTypeForGroupEvent">
      <summary>Occurs before the item type for a group is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryNameForDetailEvent">
      <summary>Occurs before the name of a detail is retrieved.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents.QueryNameForGroupEvent">
      <summary>Occurs before the name of a group is retrieved.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.CellAutomationPeer.#ctor(Xceed.Wpf.DataGrid.Cell)">
      <summary>Initializes a new instance of the <strong>CellAutomationPeer</strong> class specifying the owner.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.CellAutomationPeer.GetAutomationIdCore">
      <summary>
        <span>Gets the <span>AutomationId</span> for the element that is
associated with this CellAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getautomationid.aspx">GetAutomationId</see></span>. (Inherited from <see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.aspx">AutomationPeer</see>.)</span>
      </summary>
      <returns>
        <span>
          <span>The string that contains the <span>AutomationId</span>.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.CellAutomationPeer.GetNameCore">
      <summary>
        <span>Gets the name of the class of the element associated with this CellAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getname.aspx">GetName</see></span>.</span> (Inherited from ButtonBaseAutomationPeer.)</summary>
      <returns>
        <span>
          <span>A string that contains the class name, minus the accelerator key.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.CellAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        <span>Gets the object that supports the specified control pattern of the element that is associated with this automation peer.</span> (Overrides
UIElementAutomationPeer ..::.GetPattern(PatternInterface).)</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.CellAutomationPeer.SetValue(System.String)">
      <summary>Sets the specified value for the automation peer.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.CellAutomationPeer.IsReadOnly">
      <summary>Gets a value indicating if the automation peer is read only.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.CellAutomationPeer.Value">
      <summary>Gets the value of the automation peer.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.ColumnManagerCellAutomationPeer.#ctor(Xceed.Wpf.DataGrid.ColumnManagerCell)">
      <summary>Initializes a new instance of the <strong>ColumnManagerCellAutomationPeer</strong> class specifying the owner.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.ColumnManagerCellAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type of the element that is associated with the UI Automation peer.</summary>
      <returns>
        <span>
          <span>The control type.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.ColumnManagerCellAutomationPeer.GetAutomationIdCore">
      <summary>
        <span>Gets the <span>AutomationId</span> for the element associated
with this ColumnManagerCellAutomationPeer. Called by
<span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getautomationid.aspx">GetAutomationId</see></span>. (Inherited from <see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.aspx">AutomationPeer</see>.)</span>
      </summary>
      <returns>
        <span>
          <span>The string that contains the <span>AutomationId</span>.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.ColumnManagerCellAutomationPeer.GetNameCore">
      <summary>
        <span>Gets the name of the class of the element associated with this ColumnManagerCellAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getname.aspx">GetName</see></span>.</span> (Inherited from ButtonBaseAutomationPeer.)</summary>
      <returns>
        <span>
          <span>A string that contains the class name, minus the accelerator key.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.ColumnManagerCellAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        <span>Gets the object that supports the specified control pattern of the element that is associated with this automation peer.</span> (Overrides
UIElementAutomationPeer ..::.GetPattern(PatternInterface).)</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.ColumnManagerCellAutomationPeer.IsContentElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.ColumnManagerRowAutomationPeer.#ctor(Xceed.Wpf.DataGrid.ColumnManagerRow)">
      <summary>Initializes a new instance of the <strong>ColumnManagerRowAutomationPeer</strong> class specifying the owner.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.ColumnManagerRowAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type of the element that is associated with the UI Automation peer.</summary>
      <returns>
        <span>
          <span>The control type.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.ColumnManagerRowAutomationPeer.IsContentElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user.</summary>
      <returns>
        <span>
          <span>
            <span>
              <span class="input">
                <strong>true</strong>
              </span>
            </span> if the element is a content element; otherwise, <span><span class="input"><strong>false</strong></span></span>.</span>
        </span>
      </returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.ColumnManagerRowAutomationPeer.Owner">
      <summary>Gets <span><span>the element associated with this automation peer.</span></span></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.#ctor(Xceed.Wpf.DataGrid.DataGridControl,Xceed.Wpf.DataGrid.DataGridContext,System.Object,Xceed.Wpf.DataGrid.DetailConfiguration)">
      <summary>Initializes a new instance of the <strong>DataGridContextAutomationPeer</strong> class specifying the DataGridControl, <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridContext.html">DataGridContext</see>, parent item, and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DetailConfiguration.html">DetailConfiguration</see>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.CreateItemAutomationPeer(System.Object,System.Int32)">
      <summary>Creates a new instance of the <span>ItemAutomationPeer</span> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetAcceleratorKeyCore">
      <summary>Gets the accelerator key for the element associated with this DataGridContextAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getacceleratorkey.aspx">GetAcceleratorKey</see></span> .</summary>
      <returns>string.Empty</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetAccessKeyCore">
      <summary>Gets the access key for the element that is associated with this DataGridContextAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getaccesskey.aspx">GetAccessKey</see></span> .</summary>
      <returns>string.Empty</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the element that is associated with this DataGridContextAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getautomationcontroltype.aspx">GetAutomationControlType</see></span> .</summary>
      <returns>AutomationControlType.DataGrid</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetAutomationIdCore">
      <summary>Gets the string that uniquely identifies the element that is associated with this DataGridContextAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getautomationid.aspx">GetAutomationId</see></span> .</summary>
      <returns>
        <span>
          <span>A string containing the automation identifier.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetBoundingRectangleCore">
      <summary>Gets the <span>Rect</span> representing the bounding
rectangle of the element that is associated with this DataGridContextAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getboundingrectangle.aspx">GetBoundingRectangle</see></span> .</summary>
      <returns>
        <span>
          <span>Rect.Empty.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the element that is associated with this DataGridContextAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getchildren.aspx">GetChildren</see></span> .</summary>
      <returns>
        <span>
          <span>The collection of child elements.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the element that is associated with this DataGridContextAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getclassname.aspx">GetClassName</see></span> .</summary>
      <returns>"DataGridContext"</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetClickablePointCore">
      <summary>Gets a Point that represents the clickable space that is on the element that is associated with this DataGridContextAutomationPeer.</summary>
      <returns>
        <span>
          <span>The point that represents the clickable space that is on the element.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetHelpTextCore">
      <summary>Returns the string that describes the functionality of the element that is associated with this DataGridContextAutomationPeer.</summary>
      <returns>
        <span>
          <span>A string that describes the functionality of the DataGridContext that is associated with this <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.html">DataGridContextAutomationPeer</see>.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetItemStatusCore">
      <summary>Gets a string that communicates the visual status of the element that is associated with this DataGridContextAutomationPeer.</summary>
      <returns>
        <span>
          <span>The string that contains the <span>ItemStatus</span> that is returned by <span>GetItemStatus</span>.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetItemTypeCore">
      <summary>Gets a human-readable string that contains the item type that the element that is associated with this DataGridContextAutomationPeer represents.</summary>
      <returns>
        <span>
          <span>The string that contains the <span>ItemType</span> that is returned by <span>GetItemType</span>.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetLabeledByCore">
      <summary>Gets the <span>AutomationPeer</span> for the <span>Label</span> that is targeted to
the specified DataGridContext.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetNameCore">
      <summary>Gets the text label of the element that is associated with this DataGridContextAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getname.aspx">GetName</see></span> .</summary>
      <returns>
        <span>
          <span>The string that contains the label.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetOrientationCore">
      <summary>Gets a value that indicates whether the specified element is laid out in a particular direction.</summary>
      <returns>AutomationOrientation.None</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        <span>Gets the object that supports the specified control pattern of the element that is associated with this automation peer.</span> (Overrides
UIElementAutomationPeer ..::.GetPattern(PatternInterface).)</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.HasKeyboardFocusCore">
      <summary>Returns a value that indicates whether the element that is associated with this DataGridContextAutomationPeer currently has keyboard input
focus.</summary>
      <returns>
        <strong>false</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.IsContentElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this DataGridContextAutomationPeer is an element that contains data
that is presented to the user. This method is called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.iscontentelement.aspx">IsContentElement</see></span> .</summary>
      <returns>
        <strong>true</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.IsControlElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this DataGridContextAutomationPeer is something that the end user
would understand as being interactive or as contributing to the logical structure of the control in the GUI. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.iscontrolelement.aspx">IsControlElement</see></span> .</summary>
      <returns>
        <strong>true</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.IsEnabledCore">
      <summary>Gets the value of the <span>IsEnabled</span>
property.</summary>
      <returns>
        <strong>true</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.IsKeyboardFocusableCore">
      <summary>Gets a value that indicates whether the specified the element can accept keyboard focus.</summary>
      <returns>
        <strong>false</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.IsOffscreenCore">
      <summary>Gets a value that indicates whether <span>the element that is associated with this DataGridContextAutomationPeer</span> is off of the screen.
Called by <span>IsOffscreen</span> .</summary>
      <returns>
        <span>
          <span>
            <span>
              <span class="input">
                <strong>true</strong>
              </span>
            </span> if the element is not on the screen; otherwise, <span><span class="input"><strong>false</strong></span></span>.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.IsPasswordCore">
      <summary>Gets a value that indicates whether the element that is associated with this DataGridContextAutomationPeer contains protected content. Called
by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.ispassword.aspx">IsPassword</see></span> .</summary>
      <returns>
        <strong>false</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.IsRequiredForFormCore">
      <summary>Gets a value that indicates whether the specified the element is required to be completed on a form.</summary>
      <returns>
        <strong>false</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.SetFocusCore">
      <summary>Sets the keyboard input focus on the specified element.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.DataGridContextAutomationPeer.DataGridContext">
      <summary>Gets the associated DataGridContext.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridControlAutomationPeer.#ctor(Xceed.Wpf.DataGrid.DataGridControl)">
      <summary>Initializes a new instance of the <strong>DataGridControlAutomationPeer</strong> class specifying the owner.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridControlAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the element that is associated with this DataGridControlAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getchildren.aspx">GetChildren</see></span> .</summary>
      <returns>
        <span>
          <span>The collection of child elements.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridControlAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the element that is associated with this DataGridControlAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getclassname.aspx">GetClassName</see></span> .</summary>
      <returns>"DataGridControl"</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridControlAutomationPeer.GetItemStatusCore">
      <summary>Gets a string that communicates the visual status of the element that is associated with this DataGridControlAutomationPeer.</summary>
      <returns>A string that contains the status.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridControlAutomationPeer.GetItemTypeCore">
      <summary>Gets a human-readable string that contains the item type that the element that is associated with this DataGridControlAutomationPeer represents.</summary>
      <returns>The string that contains the item type.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridControlAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        <span>Gets the object that supports the specified control pattern of the element that is associated with this automation peer.</span> (Overrides
UIElementAutomationPeer ..::.GetPattern(PatternInterface).)</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.DataGridControlAutomationPeer.DataGridControl">
      <summary>Gets the associated DataGridControl.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.#ctor(Xceed.Wpf.DataGrid.Group)">
      <summary>Initializes a new instance of the <strong>DataGridGroupAutomationPeer</strong> class specifying the UI group owner and DataGridContext.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetAcceleratorKeyCore">
      <summary>Gets the accelerator key for the element associated with this DataGridGroupAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getacceleratorkey.aspx">GetAcceleratorKey</see></span> .</summary>
      <returns>string.Empty</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetAccessKeyCore">
      <summary>Gets the access key for the element that is associated with this DataGridGroupAutomationPeer.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the element that is associated with this DataGridGroupAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getautomationcontroltype.aspx">GetAutomationControlType</see></span> .</summary>
      <returns>AutomationControlType.Group</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetAutomationIdCore">
      <summary>Gets the string that uniquely identifies the element that is associated with this DataGridGroupAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getautomationid.aspx">GetAutomationId</see></span> .</summary>
      <returns>The string that contains the identifier.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetBoundingRectangleCore">
      <summary>Gets the <span>Rect</span> representing the bounding
rectangle of the element that is associated with this DataGridGroupAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getboundingrectangle.aspx">GetBoundingRectangle</see></span> .</summary>
      <returns>Rect.Empty</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the element that is associated with this DataGridGroupAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getchildren.aspx">GetChildren</see></span> .</summary>
      <returns>
        <span>
          <span>The collection of child elements.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the element that is associated with this DataGridGroupAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getclassname.aspx">GetClassName</see></span> .</summary>
      <returns>"DataGridCollectionViewGroup"</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetClickablePointCore">
      <summary>Gets a Point that represents the clickable space that is on the element that is associated with this DataGridGroupAutomationPeer</summary>
      <returns>Point( double.NaN, double.NaN )</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetHelpTextCore">
      <summary>Returns the string that describes the functionality of the element that is associated with this DataGridGroupAutomationPeer</summary>
      <returns>The string that contains the help text.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetItemStatusCore">
      <summary>Gets a string that communicates the visual status of the element that is associated with this DataGridGroupAutomationPeer.</summary>
      <returns>A string that contains the status or string.Empty.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetItemTypeCore">
      <summary>Gets a human-readable string that contains the item type that the element that is associated with this DataGridGroupAutomationPeer.</summary>
      <returns>The string that contains the item type or string.Empty.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetLabeledByCore">
      <summary>Gets the <span>AutomationPeer</span> for the <span>Label</span> that is targeted to
the specified element.</summary>
      <returns>null</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetNameCore">
      <summary>The string that contains the name.Gets the text label of the element that is associated with this DataGridGroupAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getname.aspx">GetName</see></span> .</summary>
      <returns>The string that contains the name or string.Empty.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetOrientationCore">
      <summary>Gets a value that indicates whether the specified element is laid out in a particular direction.</summary>
      <returns>AutomationOrientation.None</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        <span>Gets the object that supports the specified control pattern of the element that is associated with this automation peer.</span> (Overrides
UIElementAutomationPeer ..::.GetPattern(PatternInterface).)</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.HasKeyboardFocusCore">
      <summary>Returns a value that indicates whether the element that is associated with this DataGridGroupAutomationPeer currently has keyboard input focus.</summary>
      <returns>
        <strong>false</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.IsContentElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this DataGridGroupAutomationPeer is an element that contains data that
is presented to the user. This method is called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.iscontentelement.aspx">IsContentElement</see></span> .</summary>
      <returns>
        <strong>true</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.IsControlElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this DataGridGroupAutomationPeer is something that the end user would
understand as being interactive or as contributing to the logical structure of the control in the GUI. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.iscontrolelement.aspx">IsControlElement</see></span> .</summary>
      <returns>
        <strong>true</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.IsEnabledCore">
      <summary>Gets the value of the <span>IsEnabled</span>
property.</summary>
      <returns>
        <strong>true</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.IsKeyboardFocusableCore">
      <summary>Gets a value that indicates whether the specified element can accept keyboard focus.</summary>
      <returns>
        <strong>false</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.IsOffscreenCore">
      <summary>Gets a value that indicates whether <span>the element that is associated with this DataGridGroupAutomationPeer</span> is off of the screen. Called by
<span>IsOffscreen</span> .</summary>
      <returns>
        <strong>false</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.IsPasswordCore">
      <summary>Gets a value that indicates whether the element that is associated with this DataGridGroupAutomationPeer contains protected content. Called by
<span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.ispassword.aspx">IsPassword</see></span> .</summary>
      <returns>
        <strong>false</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.IsRequiredForFormCore">
      <summary>Gets a value that indicates whether the specified element is required to be completed on a form.</summary>
      <returns>
        <strong>false</strong>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.SetFocusCore">
      <summary>Sets the keyboard input focus on the specified element.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.DataGridGroupAutomationPeer.Owner">
      <summary>Gets the owner of this DataGridGroupAutomationPeer.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.#ctor(System.Object,Xceed.Wpf.DataGrid.DataGridContext,System.Int32)">
      <summary>Initializes a new instance of the <strong>DataGridItemAutomationPeer</strong> class specifying the item and DataGridContext.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetAcceleratorKeyCore">
      <summary>Gets the accelerator key for the element associated with this DataGridItemAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getacceleratorkey.aspx">GetAcceleratorKey</see></span> .</summary>
      <returns>The string that contains the accelerator key or string.Empty.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetAccessKeyCore">
      <summary>Gets the access key for the element that is associated with this DataGridItemAutomationPeer.</summary>
      <returns>The string that contains the access key or string.Empty.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the element that is associated with this DataGridItemAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getautomationcontroltype.aspx">GetAutomationControlType</see></span> .</summary>
      <returns>AutomationControlType.DataItem</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetAutomationIdCore">
      <summary>Gets the string that uniquely identifies the element that is associated with this DataGridItemAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getautomationid.aspx">GetAutomationId</see></span> .</summary>
      <returns>The string that contains the identifier or string.Empty.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetBoundingRectangleCore">
      <summary>Gets the <span>Rect</span> representing the bounding
rectangle of the element that is associated with this DataGridItemAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getboundingrectangle.aspx">GetBoundingRectangle</see></span> .</summary>
      <returns>The bounding rectangle or string.Empty.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetChildrenCore">
      <summary>Gets the collection of child elements of the element that is associated with this DataGridItemAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getchildren.aspx">GetChildren</see></span> .</summary>
      <returns>
        <span>
          <span>The collection of child elements.</span>
        </span>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetClassNameCore">
      <summary>Gets the name of the element that is associated with this DataGridItemAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getclassname.aspx">GetClassName</see></span> .</summary>
      <returns>"DataRow"</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetClickablePointCore">
      <summary>Gets a Point that represents the clickable space that is on the element that is associated with this DataGridItemAutomationPeer.</summary>
      <returns>The point on the element that represents the clickable space Point( double.NaN, double.NaN ).</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetHelpTextCore">
      <summary>Returns the string that describes the functionality of the element that is associated with this DataGridItemAutomationPeer.</summary>
      <returns>The string that contains the help text or string.Empty.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetItemStatusCore">
      <summary>Gets a string that communicates the visual status of the element that is associated with this DataGridItemAutomationPeer.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetItemTypeCore">
      <summary>Gets a human-readable string that contains the item type that the element that is associated with this DataGridItemAutomationPeer.</summary>
      <returns>The string that contains the item type or string.Empty.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetLabeledByCore">
      <summary>Gets the <span>AutomationPeer</span> for the <span>Label</span> that is targeted to
the specified element.</summary>
      <returns>The System.Windows.Automation.Peers.LabelAutomationPeer for the element that is targeted by the System.Windows.Controls.Label or null.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetNameCore">
      <summary>The string that contains the name.Gets the text label of the element that is associated with this DataGridItemAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getname.aspx">GetName</see></span> .</summary>
      <returns>The string that contains the name.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetOrientationCore">
      <summary>Gets a value that indicates whether the specified element is laid out in a particular direction.</summary>
      <returns>The orientation of the control or AutomationOrientation.None.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
        <span>Gets the object that supports the specified control pattern of the element that is associated with this automation peer.</span> (Overrides
UIElementAutomationPeer ..::.GetPattern(PatternInterface).)</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.HasKeyboardFocusCore">
      <summary>Returns a value that indicates whether the element that is associated with this DataGridItemAutomationPeer currently has keyboard input focus.</summary>
      <returns>
        <strong>true</strong> if the element has keyboard input focus; otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.IsContentElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this DataGridItemAutomationPeer is an element that contains data that is
presented to the user. This method is called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.iscontentelement.aspx">IsContentElement</see></span> .</summary>
      <returns>
        <strong>true</strong> if the element is a content element; otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.IsControlElementCore">
      <summary>Gets a value that indicates whether the element that is associated with this DataGridItemAutomationPeer is something that the end user would
understand as being interactive or as contributing to the logical structure of the control in the GUI. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.iscontrolelement.aspx">IsControlElement</see></span> .</summary>
      <returns>
        <strong>true</strong> if the element is a control; otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.IsEnabledCore">
      <summary>Gets the value of the <span>IsEnabled</span>
property.</summary>
      <returns>true if the element is a control; otherwise, false.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.IsKeyboardFocusableCore">
      <summary>Gets a value that indicates whether the specified element can accept keyboard focus.</summary>
      <returns>true if the element can accept keyboard focus; otherwise, false.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.IsOffscreenCore">
      <summary>Gets a value that indicates whether <span>the element that is associated with this DataGridItemAutomationPeer</span> is off of the screen. Called by
<span>IsOffscreen</span> .</summary>
      <returns>
        <strong>true</strong> if the element is not on the screen; otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.IsPasswordCore">
      <summary>Gets a value that indicates whether the element that is associated with this DataGridItemAutomationPeer contains protected content. Called by
<span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.ispassword.aspx">IsPassword</see></span> .</summary>
      <returns>
        <strong>true</strong> if the element contains protected content; otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.IsRequiredForFormCore">
      <summary>Gets a value that indicates whether the specified element is required to be completed on a form.</summary>
      <returns>
        <strong>true</strong> if the element is required; otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.SetFocusCore">
      <summary>Sets the keyboard input focus on the specified element.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.DataGridContext">
      <summary>Gets the DataGridContext.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.DataGridItemAutomationPeer.Item">
      <summary>Gets the data grid item.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the <strong>QueryAutomationIdRoutedeventArgs</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventArgs.AutomationId">
      <summary>Gets or sets the AutomationId.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the <strong>QueryHelpTextRoutedEventArgs</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventArgs.HelpText">
      <summary>Gets or sets the help text.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the <strong>QueryItemStatusRoutedEventArgs</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventArgs.ItemStatus">
      <summary>Gets or sets the item status.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the <strong>QueryItemTypeRoutedEventArgs</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventArgs.ItemType">
      <summary>Gets or sets the item type.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)">
      <summary>Initializes a new instance of the <strong>QueryNameRoutedEventArgs</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventArgs.Name">
      <summary>Gets or sets the name.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.RowAutomationPeer.#ctor(Xceed.Wpf.DataGrid.Row)">
      <summary>Initializes a new instance of the <strong>RowAutomationPeer</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Automation.RowAutomationPeer.GetAutomationControlTypeCore">
      <summary>Gets the control type for the element that is associated with this RowAutomationPeer. Called by <span><see cref="!:http://msdn.microsoft.com/en-us/library/system.windows.automation.peers.automationpeer.getautomationcontroltype.aspx">GetAutomationControlType</see></span> .</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryAutomationIdRoutedEventHandler">
      <summary>Represents the delegate for handlers that receive QueryAutomationIdForDetailEvent /
<see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents~QueryAutomationIdForGroupEvent.html">QueryAutomationIdForGroupEvent</see>
routed events.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryHelpTextRoutedEventHandler">
      <summary>Represents the delegate for handlers that receive QueryHelpTextForDetailEvent / <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents~QueryHelpTextForGroupEvent.html">QueryHelpTextForGroupEvent</see> routed events.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryItemStatusRoutedEventHandler">
      <summary>Represents the delegate for handlers that receive QueryItemStatusForDetailEvent / <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents~QueryItemStatusForGroupEvent.html">QueryItemStatusForGroupEvent</see> routed events.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryItemTypeRoutedEventHandler">
      <summary>Represents the delegate for handlers that receive QueryItemTypeForDetailEvent / <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents~QueryItemTypeForGroupEvent.html">QueryItemTypeForGroupEvent</see> routed events.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Automation.QueryNameRoutedEventHandler">
      <summary>Represents the delegate for handlers that receive QueryNameForDetailEvent / <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Automation.AutomationQueryEvents~QueryNameForGroupEvent.html">QueryNameForGroupEvent</see> routed events.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.ThicknessConverter.ThicknessSides">
      <summary>Value representing the sides of a <strong>Thickness</strong> structure.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.ColumnWidthConverter">
      <summary>Converter used to convert to and from a ColumnWidth structure.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.CurrencyConverter">
      <summary>Convert that converts <strong>decimal</strong> and <strong>double</strong> values to and from a currency-formatted string.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.DateTimeToStringConverter">
      <summary>Converts the specified <strong>DateTime</strong><em>value</em> to a string using the <strong>DateTimeMaskMode</strong> received as a parameter.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.EmptyStringToBooleanConverter">
      <summary>Converts a an empty string to <strong>true</strong>.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.GreaterThanZeroConverter">
      <summary>Converter used to determine if a value is greater than zero.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.IndexToOddConverter">
      <summary>Converter used to covert a value to a boolean value indicating whether it is odd or even.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.IntAdditionConverter">
      <summary>Represents a value converter used to add the value of the parameter to the value of <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Converters.IntAdditionConverter~Convert.html">object</see>. This converter applies only to <strong>Int32</strong>
values.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.InverseBooleanConverter">
      <summary>Represents a converter that inverses a boolean value.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.LevelToOpacityConverter">
      <summary>Represents a value converter used to convert <strong>Int32</strong> values into percentages.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.MultimodalResultConverter">
      <summary>Represents a converter that can be used to format the multimodal result of a Mode statistical function. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.NegativeDoubleConverter">
      <summary>Represents a value converter used to convert <strong>Double</strong> values to their opposite negative or positive value.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.NullToBooleanConverter">
      <summary>Represents a value converter used to convert $$NULL$$ to a boolean value.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.SourceDataConverter">
      <summary>Converts a value of a field in a source to the target type.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.StatResultConverter">
      <summary>Represents a converter that can be used to format the result of a statistical function, as well as display a user-friendly message when an
exception occurs within the function during the calculation of its result. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.StringFormatConverter">
      <summary>Represents a converter that converts a value to a string using composite formatting</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.ThicknessConverter">
      <summary>Represents a converter used to convert a <strong>Double</strong> to a <strong>Thickness</strong> structure.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.TypeToBooleanConverter">
      <summary>Converter that determines if a type is assignable from the type of the value to convert.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.TypeToVisibilityConverter">
      <summary>Converts a <strong>Type</strong> to a <strong>Visibility</strong> value.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Converters.ValueToMaskedTextConverter">
      <summary>Converts a value to a masked text string.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ColumnWidthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Retrieves a value indicating whether the specified type can be converted to a ColumnWidth structure, using the provided context.</summary>
      <returns>
        <strong>true</strong> if the specified <em>sourceType</em> can be converted to a ColumnWidth structure; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ColumnWidthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Retrieves a value indicating whether the converter can convert a ColumnWidth structure to the specified type, using the provided context.</summary>
      <returns>
        <strong>true</strong> if a ColumnWidth structure can be converted to
the specified <em>destinationType</em>; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ColumnWidthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified type to a ColumnWidth structure, using the
provided context and culture information.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ColumnWidthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given ColumnWidth structure to the specified type, using
the provided context and culture information.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.CurrencyConverter.#ctor">
      <summary>Initializes a new instance of the <strong>CurrencyConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.CurrencyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a <strong>decimal</strong> or <strong>double</strong> value to a currency-formatted string.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.CurrencyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a currency-formatted string to a <strong>double</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.DateTimeToStringConverter.#ctor">
      <summary>Initializes a new instance of the <strong>DateTimeToStringConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.DateTimeToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the specified <strong>DateTime</strong><em>value</em> to a string using the <strong>DateTimeMaskMode</strong> received as a parameter.</summary>
      <returns>A string representing the <strong>DateTime</strong><em>value</em> that was convertedto a string using the <strong>DateTimeMaskMode</strong>
received as a <em>parameter</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.DateTimeToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the specified string <em>value</em> to a <strong>DateTime</strong> value.</summary>
      <returns>A <strong>DateTime</strong> value representing the converted string.i</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.EmptyStringToBooleanConverter.#ctor">
      <summary>Initializes a new instance of the <strong>EmptyStringToBooleanConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.EmptyStringToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts an empty or null string to a boolean value.</summary>
      <returns>
        <strong>true</strong> if the string is empty or null.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.GreaterThanZeroConverter.#ctor">
      <summary>Initializes a new instance of the <strong>GreaterThanZeroConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.GreaterThanZeroConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the specified value to a boolean value indicating whether it is greater than zero.</summary>
      <returns>
        <strong>true</strong> if the value is greater than zero; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.GreaterThanZeroConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>The <strong>ConvertBack</strong> method is not supported by the <strong>GreaterThanZeroConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.IndexToOddConverter.#ctor">
      <summary>Initializes a new instance of the <strong>IndexToOddConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.IndexToOddConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the specified value to a boolean value indicating whether it is odd or not.</summary>
      <returns>
        <strong>true</strong> if <em>value</em> is odd; <strong>false</strong> if it is even.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.IndexToOddConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>The <strong>ConvertBack</strong> method is not supported by the <strong>IndexToOddConverter</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.IndexToOddConverter.Singleton">
      <summary>Gets a static instance of <strong>IndexToOddConverter</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.IntAdditionConverter.#ctor">
      <summary>Initializes a new instance of the IntAdditionConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.IntAdditionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <para>Converts a value. The data binding engine calls this method when it propagates a value from the binding source to the binding target. This method only
supports <strong>Int32</strong> values.</para>
      </summary>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.IntAdditionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Reverts a converted value. The data binding engine calls this method when it propagates a value from the binding target to the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_source#82edbb63-5cbf-46f8-bf38-164eb00a1ec1"><!--In data binding, the object from which the value is obtained.-->binding source</span>. This method only supports <strong>Int32</strong> values.</summary>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.InverseBooleanConverter.#ctor">
      <summary>Initializes a new instance of the <strong>InverseBooleanConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.InverseBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the boolean value.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.InverseBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Reverts a converted boolean value.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.LevelToOpacityConverter.#ctor">
      <summary>Initializes a new instance of the LevelToOpacityConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.LevelToOpacityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <para>Converts a value. The data binding engine calls this method when it propagates a value from the binding source to the binding target. This method can only
convert <strong>Int32</strong> values.</para>
      </summary>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.LevelToOpacityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Reverts a converted value. The data binding engine calls this method when it propagates a value from the binding target to the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_source#82edbb63-5cbf-46f8-bf38-164eb00a1ec1"><!--In data binding, the object from which the value is obtained.-->binding source</span>. This method only supports <strong>Double</strong> values.</summary>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.MultimodalResultConverter.#ctor">
      <summary>Initializes a new instance of the <strong>MultimodalResultConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.MultimodalResultConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts an array of multimodal results to a comma-separated string (default).</summary>
      <returns>A comma-separated string representing the multimodal result. The separator can be modified by setting the Separator property.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.MultimodalResultConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>The <strong>ConvertBack</strong> method is not supported by the <strong>MultimodalResultConverter</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.MultimodalResultConverter.Separator">
      <summary>Gets or sets the separator that will delimit each result in a multimodal result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.NegativeDoubleConverter.#ctor">
      <summary>Initializes a new instance of the NegativeDoubleConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.NegativeDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <para>Converts a value. The data binding engine calls this method when it propagates a value from the binding source to the binding target. This method only
supports <strong>Double</strong> values.</para>
      </summary>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.NegativeDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <para>Reverts a converted value. The data binding engine calls this method when it propagates a value from the binding target to the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_source#82edbb63-5cbf-46f8-bf38-164eb00a1ec1"><!--In data binding, the object from which the value is obtained.-->binding source</span>. This method only supports <strong>Double</strong>
values.</para>
      </summary>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.NullToBooleanConverter.#ctor">
      <summary>Initializes a new instance of the NullToBooleanConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.NullToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <para>Converts a value. The data binding engine calls this method when it propagates a value from the binding source to the binding target.</para>
      </summary>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.SourceDataConverter.#ctor">
      <summary>Initializes a new instance of the <strong>SourceDataConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.SourceDataConverter.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <strong>SourceDataConverte</strong> class specifying a value indicating whether the source supports
<strong>DBNull</strong> values.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.SourceDataConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the <em>sourceValue</em> to the <em>targetType</em> using the provided culture info.</summary>
      <returns>The converted value.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.SourceDataConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the target<em>Value</em> to the source<em>Type</em> using the provided culture info.</summary>
      <returns>The converted value.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.SourceDataConverter.SourceSupportsDBNull">
      <summary>Gets or sets a value indicating whether the source supports <strong>DBNull</strong> values.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.StatResultConverter.#ctor">
      <summary>Initializes a new instance of the <strong>StatResultConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.StatResultConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts the specified value using the composite format string specified as <em>parameter</em>.</summary>
      <returns>The converted value.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.StatResultConverter.DivisionByZeroMessage">
      <summary>Gets or sets the message that is returned by a <strong>StatResultConverter</strong> when a <strong>DivideByZeroException</strong> occurs during
the calculation of a statistical function's result.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.StatResultConverter.InvalidValueMessage">
      <summary>Gets or sets the message that is returned by a <strong>StatResultConverter</strong> when an InvalidValueException occurs during the calculation of a statistical
function's result.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.StatResultConverter.OverflowMessage">
      <summary>Gets or sets the message that is returned by a <strong>StatResultConverter</strong> when an <strong>OverflowException</strong> occurs during the
calculation of a statistical function's result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.StringFormatConverter.#ctor">
      <summary>Initializes a new instance of the <strong>StringFormatConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.StringFormatConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value to a string using the specified composite string format.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.StringFormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>The <strong>ConvertBack</strong> method is not supported by the <strong>StringFormatConverter</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.StringFormatConverter.FormatProvider">
      <summary>Gets or sets an object used to provide culture-specific formatting information.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ThicknessConverter.#ctor">
      <summary>Initializes a new instance of the ThicknessConverter
class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ThicknessConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
        <para>Converts a value. The data binding engine calls this method when it propagates a value from the binding source to the binding target. This method only
supports <strong>Double</strong> values.</para>
      </summary>
      <returns>The converter value. All sides to the <em>Thickness</em> will have the same value.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.ThicknessConverter.InverseValue">
      <summary>Gets or sets a value indicating whether the inverse of the converted value is returned by the Convert method.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.TypeToBooleanConverter.#ctor">
      <summary>Initializes a new instance of the <strong>TypeToBooleanConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.TypeToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Determines if the type specified as a <em>parameter</em> is assignable from the type of the specified <em>value</em>.</summary>
      <returns>
        <strong>true</strong> if the type specified as a <em>parameter</em> is assignable from the type of the specified <em>value;
<strong>false</strong> otherwise.</em></returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.TypeToBooleanConverter.Singleton">
      <summary>Gets a static instance of <strong>TypeToBoolean</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.TypeToVisibilityConverter.#ctor">
      <summary>Initializes a new instance of the <strong>TypeToVisibilityConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.TypeToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a <strong>Type</strong> to a <strong>Visibility</strong> value.</summary>
      <returns>The value of the Visibility
property when <em>value</em> and <em>parameter</em> are the same or when they are not, according to the value of the <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Converters.TypeToVisibilityConverter~SetVisibilityWhenTrue.html">SetVisibilityWhenTrue</see> property.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.TypeToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>The <strong>ConvertBack</strong> method is not supported by the <strong>TypeToVisibilityConverter</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.TypeToVisibilityConverter.SetVisibilityWhenTrue">
      <summary>Gets or sets a value indicating whether the value of the Visibility property is set when the types are the same or
when they are different.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Converters.TypeToVisibilityConverter.Visibility">
      <summary>Gets or sets the <strong>Visibility</strong> value that will be used.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ValueToMaskedTextConverter.#ctor">
      <summary>Initializes a new instance of the <strong>ValueToMaskedTextConverter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Converters.ValueToMaskedTextConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value to a masked text string.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase">
      <summary>Base class of the CsvClipboardExporter and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.html">HtmlClipboardExporter</see> classes.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Export.CsvClipboardExporter">
      <summary>Class that allows rows to be copied to the clipboard using the comma-separated format and the tab-separated format.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Export.CsvExporter">
      <summary>Class that allows grid data to be exported using the comma-separated format.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Export.CsvFormatSettings">
      <summary>Class that represents formatting settings used to export rows and to copy them to the clipboard using the CSV format.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Export.ExcelExporter">
      <summary>Class that allows grid data to be exported using the xmlss format.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Export.ExporterBase">
      <summary>Base class of the CsvExporter and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Export.ExcelExporter.html">ExcelExporter</see> classes.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Export.FormatSettingsBase">
      <summary>Class used for exporting and for copying to the clipboard.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Export.GroupHeaderFormat">
      <summary>Class that exposes properties that determine the text displayed in group headers when a group contains single items and multiple items.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter">
      <summary>Class that allows rows to be copied to the clipboard using the HTML format.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Export.HtmlFormatSettings">
      <summary>Class that represents formatting settings used to export rows and to copy them to the clipboard using the HTML format.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Export.UnicodeCsvClipboardExporter">
      <summary>Class that allows rows to be copied to the clipboard using the comma-separated format and the tab-separated format, with Unicode support. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.EndDataItem(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Called after each data item is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.EndDataItemField(Xceed.Wpf.DataGrid.DataGridContext,Xceed.Wpf.DataGrid.Column,System.Object)">
      <summary>Called after each field in a data item is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.EndExporter(System.String)">
      <summary>Called after each exporter has processed the data being copied.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.EndHeader(Xceed.Wpf.DataGrid.DataGridContext)">
      <summary>Called after the headers of each master or detail level is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.EndHeaderField(Xceed.Wpf.DataGrid.DataGridContext,Xceed.Wpf.DataGrid.Column)">
      <summary>Called after each field in a header is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.Indent">
      <summary>Increases the indent of a detail level.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.ResetExporter">
      <summary>Cleans the internal state of the exporter.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.StartDataItem(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Called before each data item is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.StartDataItemField(Xceed.Wpf.DataGrid.DataGridContext,Xceed.Wpf.DataGrid.Column,System.Object)">
      <summary>Called before each field in a data item is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.StartExporter(System.String)">
      <summary>Called before each exporter processes the data being copied.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.StartHeader(Xceed.Wpf.DataGrid.DataGridContext)">
      <summary>Called before the headers of each master or detail level is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.StartHeaderField(Xceed.Wpf.DataGrid.DataGridContext,Xceed.Wpf.DataGrid.Column)">
      <summary>Called before each field in a header is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.Unindent">
      <summary>Decreases the indent of a detail level.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.ClipboardData">
      <summary>Gets the data that will actually be set in the IDataObject provided to the Clipboard.SetDataObject method of the .NET Framework.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.IncludeColumnHeaders">
      <summary>Indicates whether column headers for each master / detail level should be copied to the clipboard.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.ClipboardExporterBase.UseFieldNamesInHeader">
      <summary>Gets or sets a boolean value indicating whether the column titles or the column field names are displayed in the headers.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvClipboardExporter.#ctor">
      <summary>Initializes a new instance of the <strong>CsvClipboardExporter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvClipboardExporter.EndDataItem(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Called after each data item is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvClipboardExporter.EndHeader(Xceed.Wpf.DataGrid.DataGridContext)">
      <summary>Called after the headers of each master or detail level is copied.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvClipboardExporter.Indent">
      <summary>Increases the indent of a detail level.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvClipboardExporter.ResetExporter">
      <summary>Cleans the internal state of the exporter.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvClipboardExporter.StartDataItem(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Called before each data item is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvClipboardExporter.StartDataItemField(Xceed.Wpf.DataGrid.DataGridContext,Xceed.Wpf.DataGrid.Column,System.Object)">
      <summary>Called before each field in a data item is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvClipboardExporter.StartHeader(Xceed.Wpf.DataGrid.DataGridContext)">
      <summary>Called before the headers of each master or detail level is copied.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvClipboardExporter.StartHeaderField(Xceed.Wpf.DataGrid.DataGridContext,Xceed.Wpf.DataGrid.Column)">
      <summary>Called before each field in a header is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvClipboardExporter.Unindent">
      <summary>Decreases the indent of a detail level.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.CsvClipboardExporter.ClipboardData">
      <summary>Gets the data that will actually be set in the IDataObject provided to the Clipboard.SetDataObject method of the .NET Framework.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.CsvClipboardExporter.FormatSettings">
      <summary>Gets the CsvFormatSettings object that will be used for
the copy.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvExporter.#ctor(Xceed.Wpf.DataGrid.DataGridControl)">
      <summary>Initializes a new instance of the <strong>CsvExporter</strong> class specifying its DataGridControl.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvExporter.EndDataItem(Xceed.Wpf.DataGrid.Export.ExportContext,System.Object)">
      <summary>Called after each data item is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvExporter.EndHeader(Xceed.Wpf.DataGrid.Export.ExportContext,System.Collections.Generic.IList{Xceed.Wpf.DataGrid.Export.ExportColumn})">
      <summary>Called after the headers of each master or detail level is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvExporter.StartDataItem(Xceed.Wpf.DataGrid.Export.ExportContext,System.Object)">
      <summary>Called before each data item is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvExporter.StartDataItemField(Xceed.Wpf.DataGrid.Export.ExportContext,System.Object)">
      <summary>Called before each field in a data item is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvExporter.StartExport">
      <summary>Called when an export is initiated.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvExporter.StartHeaderField(Xceed.Wpf.DataGrid.Export.ExportContext,System.String)">
      <summary>Called before each field in a header is exported.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.CsvExporter.FormatSettings">
      <summary>Gets the CsvFormatSettings object that will be used for
the copy.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.CsvFormatSettings.#ctor">
      <summary>Initializes a new instance of the <strong>CSVFormatSettings</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.CsvFormatSettings.NewLine">
      <summary>Gets or sets the string that will be used at the end of each row, including any headers.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.CsvFormatSettings.Separator">
      <summary>Gets or sets the character that will be used to separate the fields of a Row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.CsvFormatSettings.TextQualifier">
      <summary>Gets or sets the character used to delimit the value of a string field, or of a date or numeric field if a whitespace is contained within.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.EndDataItem(Xceed.Wpf.DataGrid.Export.ExportContext,System.Object)">
      <summary>Called after each data item is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.EndDataItemField(Xceed.Wpf.DataGrid.Export.ExportContext,System.Object)">
      <summary>Called after each field in a data item is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.EndExcelRow">
      <summary>Called after a row has been exported to Excel.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.EndExport">
      <summary>Called after the export has finished.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.EndGroup(Xceed.Wpf.DataGrid.Export.ExportContext,System.Windows.Data.CollectionViewGroup,System.String)">
      <summary>Called after a group has been exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.EndHeader(Xceed.Wpf.DataGrid.Export.ExportContext,System.Collections.Generic.IList{Xceed.Wpf.DataGrid.Export.ExportColumn})">
      <summary>Called after the headers of each master or detail level is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.EndHeaderField(Xceed.Wpf.DataGrid.Export.ExportContext,System.String)">
      <summary>Called after each field in a header is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.EndSummary(Xceed.Wpf.DataGrid.Export.ExportContext,Xceed.Wpf.DataGrid.Stats.StatFunctionCollection)">
      <summary>Called after each summary is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.StartDataItem(Xceed.Wpf.DataGrid.Export.ExportContext,System.Object)">
      <summary>Called before each data item is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.StartDataItemField(Xceed.Wpf.DataGrid.Export.ExportContext,System.Object)">
      <summary>Called before each field in a data item is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.StartExcelRow">
      <summary>Called before an Excel row is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.StartExport">
      <summary>Called be an export begins.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.StartGroup(Xceed.Wpf.DataGrid.Export.ExportContext,System.Windows.Data.CollectionViewGroup,System.String)">
      <summary>Called before a group is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.StartHeader(Xceed.Wpf.DataGrid.Export.ExportContext,System.Collections.Generic.IList{Xceed.Wpf.DataGrid.Export.ExportColumn})">
      <summary>Called before the headers of each master or detail level is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.StartHeaderField(Xceed.Wpf.DataGrid.Export.ExportContext,System.String)">
      <summary>Called before each field in a header is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.StartSummary(Xceed.Wpf.DataGrid.Export.ExportContext,Xceed.Wpf.DataGrid.Stats.StatFunctionCollection)">
      <summary>Called before each summary is exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExcelExporter.StartSummaryField(Xceed.Wpf.DataGrid.Export.ExportContext,Xceed.Wpf.DataGrid.Stats.StatFunction,System.Object)">
      <summary>Called before each summary field is exported.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.ExcelExporter.ExportStatFunctionsAsFormulas">
      <summary>Gets or sets a value indicating whether statistical functions should be exported as formulas or if only their resulting value should be exported.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.ExcelExporter.FixedColumnCount">
      <summary>Gets or sets the number of columns that are fixed when they are exported using the ExcelExporter class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.ExcelExporter.GroupHeaderFormat">
      <summary>Gets the GroupHeaderFormat object used to determine the
text displayed in the group headers.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.ExcelExporter.IsHeaderFixed">
      <summary>Gets or sets a value indicating whether the column header will scroll with the content or remain fixed at the top of the spreadsheet.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExporterBase.Export(System.String)">
      <summary>Starts the export process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.ExporterBase.Export(System.IO.Stream)">
      <summary>Starts the export process.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.ExporterBase.BaseStream">
      <summary>Gets the base stream used for the export.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.ExporterBase.DetailDepth">
      <summary>Gets or sets the number of detail levels that will be exported.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.ExporterBase.IncludeColumnHeaders">
      <summary>Gets or sets a boolean value that indicates whether column headers will be exported.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.ExporterBase.RepeatParentData">
      <summary>Gets or sets a boolean value indicating whether a parent detail's and the master grid's information should be repeated.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.ExporterBase.ShowStatsInDetails">
      <summary>Gets or sets a boolean value indicating whether the results of statistical functions should also be displayed in details.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.ExporterBase.StatFunctionDepth">
      <summary>Gets or sets a value representing how "deeply" statistical functions are to be displayed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.ExporterBase.UseFieldNamesInHeader">
      <summary>Gets or sets a boolean value indicating whether the column titles or the column field names are displayed in the headers.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.FormatSettingsBase.Culture">
      <summary>Gets or sets the culture used for the export / clipboard copy.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.FormatSettingsBase.DateTimeFormat">
      <summary>Gets or sets the date-time format used for the export / clipboard copy.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.FormatSettingsBase.FloatingPointFormat">
      <summary>Gets or sets the floating point format.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.FormatSettingsBase.NumericFormat">
      <summary>Gets or sets the numeric format.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.GroupHeaderFormat.MultipleItemsFormat">
      <summary>Gets or sets the text displayed in group headers when a group contains multiple items.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.GroupHeaderFormat.SingleItemFormat">
      <summary>Gets or sets the text displayed in group headers when a group contains single items.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.#ctor">
      <summary>Initializes a new instance of the <strong>HtmlClipboardExporter</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.EndDataItem(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Called after each data item is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.EndExporter(System.String)">
      <summary>Called after each exporter has processed the data being copied.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.EndHeader(Xceed.Wpf.DataGrid.DataGridContext)">
      <summary>Called after the headers of each master or detail level is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.Indent">
      <summary>Increases the indent of a detail level.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.ResetExporter">
      <summary>Cleans the internal state of the exporter.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.StartDataItem(Xceed.Wpf.DataGrid.DataGridContext,System.Object)">
      <summary>Called before each data item is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.StartDataItemField(Xceed.Wpf.DataGrid.DataGridContext,Xceed.Wpf.DataGrid.Column,System.Object)">
      <summary>Called before each field in a data item is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.StartExporter(System.String)">
      <summary>Called before each exporter processes the data being copied.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.StartHeader(Xceed.Wpf.DataGrid.DataGridContext)">
      <summary>Called before the headers of each master or detail level is copied.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.StartHeaderField(Xceed.Wpf.DataGrid.DataGridContext,Xceed.Wpf.DataGrid.Column)">
      <summary>Called before each field in a header is copied to the clipboard.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.Unindent">
      <summary>Decreases the indent of a detail level.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.ClipboardData">
      <summary>Gets the data that will actually be set in the IDataObject provided to the Clipboard.SetDataObject method of the .NET Framework.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.HtmlClipboardExporter.FormatSettings">
      <summary>Gets the HtmlFormatSettings object that will be used for
the copy.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.HtmlFormatSettings.#ctor">
      <summary>Initializes a new instance of the <strong>HtmlFormatSettings</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.HtmlFormatSettings.DataEndDelimiter">
      <summary>Gets or sets the delimiter used after a row when copying to the clipboard using HTML.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.HtmlFormatSettings.DataStartDelimiter">
      <summary>Gets or sets the delimiter used before a row when copying to the clipboard using HTML.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.HtmlFormatSettings.ExporterEndDelimiter">
      <summary>Gets or sets the delimiter used after all data copied to the clipboard using HTML.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.HtmlFormatSettings.ExporterStartDelimiter">
      <summary>Gets or sets the delimiter used before all data copied to the clipboard using HTML.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.HtmlFormatSettings.FieldEndDelimiter">
      <summary>Gets or sets the delimiter used after a field when copying to the clipboard using HTML.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.HtmlFormatSettings.FieldStartDelimiter">
      <summary>Gets or sets the delimiter used before a field when copying to the clipboard using HTML.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.HtmlFormatSettings.HeaderDataEndDelimiter">
      <summary>Gets or sets the delimiter used after a row of header data when copying to the clipboard using HTML.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.HtmlFormatSettings.HeaderDataStartDelimiter">
      <summary>Gets or sets the delimiter used before a row of header data when copying to the clipboard using HTML.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.HtmlFormatSettings.HeaderFieldEndDelimiter">
      <summary>Gets or sets the delimiter used after a field in a row of header data when copying to the clipboard using HTML.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.HtmlFormatSettings.HeaderFieldStartDelimiter">
      <summary>Gets or sets the delimiter used before a field in a row of header data when copying to the clipboard using HTML.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Export.UnicodeCsvClipboardExporter.#ctor">
      <summary>Initializes a new instance of the <strong>UnicodeCsvClipboardExporter</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Export.UnicodeCsvClipboardExporter.FormatSettings">
      <summary>Gets the CsvFormatSettings object that will be used for
the copy.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteria.AndFilterCriterion">
      <summary>Class that represents the conditional "AND" operator and filters items as to include only those that include both of the specified values. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteria.ContainsFilterCriterion">
      <summary>Class that represents the "contains" filter criterion and filters items as to include only those that contain the specified value. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteria.DifferentThanFilterCriterion">
      <summary>Class that represents the different than operator and filters items as to include only those that are different than the specified value. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteria.EndsWithFilterCriterion">
      <summary>Class that represents the "Ends With" filter criterion and filters items to include only those that end with the specified value. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteria.EqualToFilterCriterion">
      <summary>Class that represents the equality operator and filters items as to include only those that are equal to the specified value. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteria.FilterCriterion">
      <summary>Base class for all filter criterion. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteria.GreaterThanFilterCriterion">
      <summary>Class that represents the greater than operator and filters items as to include only those that are greater than the specified value. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteria.GreaterThanOrEqualToFilterCriterion">
      <summary>Class that represents the greater than or equal to operator and filters items as to include only those that are greater than or equal to the
specified value. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteria.LessThanFilterCriterion">
      <summary>Class that represents the less than operator and filters items as to include only those that are less than the specified value. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteria.LessThanOrEqualToFilterCriterion">
      <summary>Class that represents the less than or equal to operator and filters items as to include only those that are less than or equal to the specified
value. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteria.NotFilterCriterion">
      <summary>Class that represents the "NOT" operator and filters items as to include only those that are not equal to the specified value. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteria.OrFilterCriterion">
      <summary>Class that represents the conditional "OR" operator and filters items as to include only those that include one or both of the specified values. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteria.RelationalFilterCriterion">
      <summary>Base class for relation filter criterion from which the AndFilterCriterion, <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.FilterCriteria.NotFilterCriterion.html">NotFilterCriterion</see>, and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.FilterCriteria.OrFilterCriterion.html">OrFilterCriterion</see> classes derive.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.FilterCriteria.StartsWithFilterCriterion">
      <summary>Class that represents the "Starts With" filter criterion and filters items to include only those that start with the specified value. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.AndFilterCriterion.#ctor">
      <summary>Initializes a new instance of the <strong>AndFilterCriterion</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.AndFilterCriterion.#ctor(Xceed.Wpf.DataGrid.FilterCriteria.FilterCriterion,Xceed.Wpf.DataGrid.FilterCriteria.FilterCriterion)">
      <summary>Initializes a new instance of the <strong>AndFilterCriterion</strong> class specifying the filter criteria that will be used as operands.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.AndFilterCriterion.InitializeFrom(System.Object[],System.Type)">
      <summary>Initializes the filter criterion from the specified values.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.AndFilterCriterion.ToExpression(System.Globalization.CultureInfo)">
      <summary>Converts the current criterion to a string representation.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.AndFilterCriterion.ToLinqExpression(System.Linq.IQueryable,System.Linq.Expressions.ParameterExpression,System.String)">
      <summary>Converts the current criterion to a LINQ expression.</summary>
      <returns>An <strong>Expression</strong> representing the filtered expression tree created from the <strong>IQueryable</strong> object.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FilterCriteria.AndFilterCriterion.FirstFilterCriterion">
      <summary>Gets or sets the filter criterion that will be used as the first operand.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FilterCriteria.AndFilterCriterion.SecondFilterCriterion">
      <summary>Gets or sets the filter criterion that will be used as the second operand.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.ContainsFilterCriterion.#ctor">
      <summary>Initializes a new instance of the <strong>ContainsFilterCriterion</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.ContainsFilterCriterion.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>ContainsFilterCriterion</strong> class using the provided value.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.DifferentThanFilterCriterion.#ctor">
      <summary>Initializes a new instance of the <strong>DifferentThanFilterCriterion</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.DifferentThanFilterCriterion.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>DifferentThanFilterCriterion</strong> class using the provided value.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.EndsWithFilterCriterion.#ctor">
      <summary>Initializes a new instance of the <strong>EndsWithCriterion</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.EndsWithFilterCriterion.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>EndsWithCriterion</strong> class using the provided value.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.EqualToFilterCriterion.#ctor">
      <summary>Initializes a new instance of the <strong>EqualToFilterCriterion</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.EqualToFilterCriterion.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>EqualToFilterCriterion</strong> class using the provided value.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.FilterCriterion.Equals(System.Object)">
      <summary>Determines whether the specified filter criterion is equal to the current criterion.</summary>
      <returns>
        <strong>true</strong> if the filter criteria are equal; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.FilterCriterion.GetHashCode">
      <summary>Gets the hash code for the current filter criterion.</summary>
      <returns>A value representing the hash code for the current filter criterion.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.FilterCriterion.InitializeFrom(System.Object[],System.Type)">
      <summary>
        <para>Initializes the filter criterion from the specified values.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.FilterCriterion.IsMatch(System.Object)">
      <summary>Indicates whether the filter criterion specified at construction finds a match.</summary>
      <returns>
        <strong>true</strong> if a match is found; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.FilterCriterion.RaisePropertyChanged(System.String)">
      <summary>Raises the PropertyChanged event
for the specified property name.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.FilterCriterion.ToString">
      <summary>Returns the string representation of the filter criterion.</summary>
      <returns>The string representation of the filter criterion.</returns>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.FilterCriteria.FilterCriterion.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.GreaterThanFilterCriterion.#ctor">
      <summary>Initializes a new instance of the <strong>GreaterThanFilterCriterion</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.GreaterThanFilterCriterion.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>GreaterThanFilterCriterion</strong> class using the provided value.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.GreaterThanOrEqualToFilterCriterion.#ctor">
      <summary>Initializes a new instance of the <strong>GreaterThanOrEqualFilterCriterion</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.GreaterThanOrEqualToFilterCriterion.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>GreaterThanOrEqualFilterCriterion</strong> class using the provided value.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.LessThanFilterCriterion.#ctor">
      <summary>Initializes a new instance of the <strong>LessThanFilterCriterion</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.LessThanFilterCriterion.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>LessThanFilterCriterion</strong> class using the provided value.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.LessThanOrEqualToFilterCriterion.#ctor">
      <summary>Initializes a new instance of the <strong>LessThanOrEqualToFilterCriterion</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.LessThanOrEqualToFilterCriterion.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>LessThanOrEqualToFilterCriterion</strong> class using the provided value.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.NotFilterCriterion.#ctor">
      <summary>Initializes a new instance of the <strong>NotFilterCriterion</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.NotFilterCriterion.#ctor(Xceed.Wpf.DataGrid.FilterCriteria.FilterCriterion)">
      <summary>Initializes a new instance of the <strong>NotFilterCriterion</strong> class using the provided filter criterion.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.NotFilterCriterion.InitializeFrom(System.Object[],System.Type)">
      <summary>Initializes the filter criterion from the specified values.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FilterCriteria.NotFilterCriterion.FilterCriterion">
      <summary>The filter criterion to check against.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.OrFilterCriterion.#ctor">
      <summary>Initializes a new instance of the <strong>OrFilterCriterion</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.OrFilterCriterion.#ctor(Xceed.Wpf.DataGrid.FilterCriteria.FilterCriterion,Xceed.Wpf.DataGrid.FilterCriteria.FilterCriterion)">
      <summary>Initializes a new instance of the <strong>OrFilterCriterion</strong> class specifying the filter criteria that will be used as operands.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.OrFilterCriterion.InitializeFrom(System.Object[],System.Type)">
      <summary>Initializes the filter criterion from the specified values.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FilterCriteria.OrFilterCriterion.FirstFilterCriterion">
      <summary>Gets or sets the filter criterion that will be used as the first operand.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FilterCriteria.OrFilterCriterion.SecondFilterCriterion">
      <summary>Gets or sets the filter criterion that will be used as the second operand.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.RelationalFilterCriterion.InitializeFrom(System.Object[],System.Type)">
      <summary>Initializes the filter criterion from the specified values.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.FilterCriteria.RelationalFilterCriterion.Value">
      <summary>Gets or sets the value of the relational filter criterion.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.StartsWithFilterCriterion.#ctor">
      <summary>Initializes a new instance of the <strong>StartsWithCriterion</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.FilterCriteria.StartsWithFilterCriterion.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>StartsWithCriterion</strong> class using the provided value.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Markup.CellContentBindingExtension">
      <summary>
        <para>Links the cell's content to the value of some other property exposed on the control
template, for example, the <strong>Content</strong> property of the <strong>ContentPresenter</strong>.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension">
      <summary>
        <para>Interprets and creates the binding required between a cell and its <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.CellEditor.html">editor</see> at runtime.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Markup.ThemeConverter">
      <summary>Provides a type converter to convert Themes to and from various other
representations.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Markup.ThemeKey">
      <summary>Represents a key that provides a unique identifier for each style. Each style associates its key with a view, a theme, <strong>and</strong> an
element.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension">
      <summary>
        <para>Interprets and creates the binding between an element and the view
applied to a grid.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Markup.ViewConverter">
      <summary>Allows for a view and theme to be assigned to the View
property of a <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridControl.html">DataGridControl</see> through attribute syntax.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.CellContentBindingExtension.#ctor">
      <summary>Initializes a new instance of the CellContentBinding class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.CellContentBindingExtension.ProvideValue(System.IServiceProvider)">
      <summary>Returns an object that is set as the value of the target property for this markup extension.</summary>
      <returns>The value to set on the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_target#2b16294b-64eb-4210-83a4-c215cf4c140a"><!--In data binding, the object that consumes the value of the binding. A target property must be a dependency property on a DependencyObject type.-->binding
target</span> property.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellContentBindingExtension.Converter">
      <summary>Gets or sets the converter used by the <strong>CellContentBindingExtension</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellContentBindingExtension.ConverterCulture">
      <summary>
        <para>Gets or sets the culture used by the Converter.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellContentBindingExtension.ConverterParameter">
      <summary>
        <para>Gets or sets the parameters used by the Converter.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.#ctor">
      <summary>Initializes a new instance of the CellEditorBinding class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.ProvideValue(System.IServiceProvider)">
      <summary>Returns an object that is set as the value of the target property for this markup extension.</summary>
      <returns></returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.Converter">
      <summary>Gets or sets the converter used by the <strong>CellEditorBindingExtension</strong> class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.ConverterCulture">
      <summary>
        <para>Gets or sets the culture used by the Converter.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.ConverterParameter">
      <summary>
        <para>Gets or sets the parameters used by the Converter.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.NotifyOnSourceUpdated">
      <summary>Gets or sets a value indicating whether to provide notification when a value is transferred from the binding target to the binding source.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.NotifyOnTargetUpdated">
      <summary>Gets or sets a value indicating whether to provide notification when a value is transferred from the binding source to the binding target.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.CellEditorBindingExtension.NotifyOnValidationError">
      <summary>Gets or sets a value indicating whether to provide notification when a validation error occurs.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeConverter.#ctor">
      <summary>Initializes a new instance of the ThemeConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether this converter can convert an object in the given source type to a Theme using the specified context.</summary>
      <returns>
        <strong>true</strong> the conversion can be performed; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type, using the specified context.</summary>
      <returns>
        <strong>true</strong> if the conversion can be performed; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given value object to a Theme.</summary>
      <returns>An object that represents the converted <em>value</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeKey.#ctor">
      <summary>Initializes a new instance of the ThemeKey class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeKey.#ctor(System.Type,System.Type,System.Type)">
      <summary>Initializes a new instance of the ThemeKey specifying the
<strong>Type</strong> of the view, type, and element to which the style applies.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeKey.#ctor(System.Type,System.Type)">
      <summary>Initializes a new instance of the ThemeKey class specifying the
<strong>Type</strong> of the view and element to which the style applies.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeKey.Equals(System.Object)">
      <summary>Retrieves a value indicating whether the specified object is the same as the current object.</summary>
      <returns>
        <strong>true</strong> if the specified object is the same as the current object; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ThemeKey.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ThemeKey.Assembly">
      <summary>Gets an assembly object that indicates which assembly's dictionary to look in for the value associated with this key.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ThemeKey.TargetElementType">
      <summary>Gets or sets the <strong>Type</strong> of the element to which the style applies.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ThemeKey.TargetViewType">
      <summary>Gets or sets the <strong>Type</strong> of the view to which the style applies.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ThemeKey.ThemeType">
      <summary>Gets or sets the <strong>Type</strong> of the theme to which the style applies.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.#ctor">
      <summary>Initializes a new instance of the ViewBinding class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.#ctor">
      <summary>Initializes a new instance of the ViewBinding class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.#ctor(System.String)">
      <summary>Initializes a new instance of the ViewBinding class
specifying the path to the binding source property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.ProvideValue(System.IServiceProvider)">
      <summary>Returns an object that is set as the value of the target property for this markup extension.</summary>
      <returns>The object value to set on the property where the extension is applied.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.Converter">
      <summary>Gets or sets the converter to use.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.ConverterCulture">
      <summary>Gets or sets the culture in which to evaluate the converter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.ConverterParameter">
      <summary>Gets or sets the parameter to pass to the Converter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.Mode">
      <summary>Gets or sets a value that indicates the direction of the data flow in the binding.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.Path">
      <summary>Gets or sets the path to the <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="binding_source#82edbb63-5cbf-46f8-bf38-164eb00a1ec1"><!--In data binding, the object from which the value is obtained.-->binding source</span> property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewConverter.#ctor">
      <summary>Initializes a new instance of the ViewConverter class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object of the specified type can be converted to an instance of <strong>ViewConverter</strong>, using the specified
context.</summary>
      <returns>
        <strong>true</strong> if the object can be converted; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object to a <strong>ViewConverter</strong>, using the specified context.</summary>
      <returns>The converted object.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Markup.ViewConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a <strong>ViewConverter</strong> to the specified type, using the specified context.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Print.PagePrintOrder">
      <summary>Value representing the order in which the pages are printed (see Remarks). 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Print.DataGridPageControl">
      <summary>A control that determines the layout of the printed pages when a 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Print.DataGridPaginator">
      <summary>Class that creates a multiple-page element from a 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel">
      <summary>Arranges and virtualizes content to be printed on a single line that is oriented either horizontally or vertically. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Print.ProgressEventArgs">
      <summary>Provides progress information during printing or exporting operations. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Print.ProgressInfo">
      <summary>Class that provides information on the content of a grid is being printed or exported. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.DataGridPageControl.GetIsDataGridHost(System.Windows.DependencyObject)">
      <summary>Gets a value that, when set by a <strong>panel</strong>, identifies that panel as the host that will contain the DataGridControl.</summary>
      <returns>
        <strong>true</strong> if a <strong>panel</strong> is used as a grid host; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.DataGridPageControl.GetIsPageFootersHost(System.Windows.DependencyObject)">
      <summary>Gets a value that, when set by a <strong>panel</strong>, identifies that panel as the host that will contain all elements added to a page's
footers through the PageFooters property.</summary>
      <returns>
        <strong>true</strong> if a <strong>panel</strong> is used as the page-footers host; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.DataGridPageControl.GetIsPageHeadersHost(System.Windows.DependencyObject)">
      <summary>Gets a value that, when set by a <strong>panel</strong>, identifies that panel as the host that will contain all elements added to a page's
headers through the PageHeaders property.</summary>
      <returns>
        <strong>true</strong> if a <strong>panel</strong> is used as the page-headers host; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.DataGridPageControl.SetIsDataGridHost(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value that, when set by a <strong>panel</strong>, identifies that panel as the host that will contain the DataGridControl.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.DataGridPageControl.SetIsPageFootersHost(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value that, when set by a <strong>panel</strong>, identifies that panel as the host that will contain all elements added to a page's
footers through the PageFooters property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.DataGridPageControl.SetIsPageHeadersHost(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value that, when set by a <strong>panel</strong>, identifies that panel as the host that will contain all elements added to a page's
headers through the PageHeaders property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Print.DataGridPageControl.IsDataGridHostProperty">
      <summary>Identifies the <strong>IsDataGridHost</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Print.DataGridPageControl.IsPageFootersHostProperty">
      <summary>Identifies the <strong>IsPageFootersHost</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Print.DataGridPageControl.IsPageHeadersHostProperty">
      <summary>Identifies the <strong>IsPageHeadersHost</strong> attached property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.DataGridPaginator.GetPage(System.Int32)">
      <summary>Retrieves the page at the specified index.</summary>
      <returns>A <strong>DocumentPage</strong> representing the page at the specified <em>index</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.DataGridPaginator.GetPageBitmap(System.Int32)">
      <summary>Retrieves the page at the specified index as a bitmap.</summary>
      <returns>A <strong>RenderTargetBitmap</strong> representing the page at the specified <em>index</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.DataGridPaginator.OnProgress(Xceed.Wpf.DataGrid.Print.ProgressEventArgs)">
      <summary>Raises the Progress event.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.DataGridPaginator.ToString">
      <summary>Returns the string representation of the <strong>DataGridPaginator</strong>.</summary>
      <returns>The string representation of the <strong>DataGridPaginator</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.DataGridPaginator.InitializeSettings(System.Windows.Controls.PrintDialog)">
      <summary>Initializes the paginator settings using the values provided by the specified <strong>PrintDialog</strong>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.DataGridPaginator.InitializeSettings(System.Printing.PrintQueue)">
      <summary>Initializes the paginator settings using the values provided by the specified <strong>PrintQueue</strong>.</summary>
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.DataGridPaginator.InitializeSettings(System.Printing.PrintQueue,System.Printing.PrintTicket)">
      <summary>Initializes the paginator settings using the values provided by the specified <strong>PrintQueue</strong> and <strong>PrintTicket</strong>.</summary>
      <exception caption="" cref="System.Security.SecurityException">Can be thrown in XBAP if FullTrust permissions are not used.</exception>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.DataGridPaginator.ImageableArea">
      <summary>Gets or sets the imageable area of each page.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.DataGridPaginator.IsPageCountValid">
      <summary>Gets a value indicating whether PageCount is the
total number of pages.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.DataGridPaginator.PageCount">
      <summary>Gets the number of pages that are currently formatted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.DataGridPaginator.PageOrientation">
      <summary>Gets or sets the orientation of each page.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.DataGridPaginator.PageRange">
      <summary>Gets or sets the range of the pages to be formatted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.DataGridPaginator.PageSize">
      <summary>Gets or sets the suggested width and height of each page.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.DataGridPaginator.ProgressInfo">
      <summary>Gets progress information on the content of a grid that is being printed or exported.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.DataGridPaginator.Source">
      <summary>Gets the element being paginated.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Print.DataGridPaginator.Progress">
      <summary>Raised to provide progress information during the printing or exporting process.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the child elements of the panel.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.BringIndexIntoView(System.Int32)">
      <summary>Generates the item at the specified index position and brings it into view.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.LineDown">
      <summary>Scrolls down within content by one logical unit.<!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="%%comment%%" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="method" source="Item" filter="" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=overloadlist,caption=$$OverloadList$$%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%" --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.LineLeft">
      <summary>Scrolls left within content by one logical unit.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.LineRight">
      <summary>Scrolls right within content by one logical unit.<!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="%%comment%%" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="method" source="Item" filter="" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=overloadlist,caption=$$OverloadList$$%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%" --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.LineUp">
      <summary>Scrolls up within content by one logical unit.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements in anticipation of arranging them during the ArrangeOverride pass. 
<!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="%%comment%%" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="method" source="Item" filter="" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=overloadlist,caption=$$OverloadList$$%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%" --></summary>
      <returns>The <strong>Size</strong> that represents the desired size of the element.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.MouseWheelDown">
      <summary>Scrolls down within content after a user clicks the wheel button on a mouse.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.MouseWheelLeft">
      <summary>Scrolls left within content after a user clicks the wheel button on a mouse.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.MouseWheelRight">
      <summary>Scrolls right within content after a user clicks the wheel button on a mouse.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.MouseWheelUp">
      <summary>Scrolls up within content after a user clicks the wheel button on a mouse.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.OnClearChildren">
      <summary>Called when the collection of child elements is cleared by the panel.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.PageDown">
      <summary>Scrolls down within content by one page.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.PageLeft">
      <summary>Scrolls left within content by one page</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.PageRight">
      <summary>Scrolls right within content by one page</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.PageUp">
      <summary>Scrolls up within content by one page</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.SetHorizontalOffset(System.Double)">
      <summary>Sets the amount of horizontal offset.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.SetVerticalOffset(System.Double)">
      <summary>Sets the amount of vertical offset.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>Forces content to scroll until the coordinate space of a <strong>Visual</strong> object is visible.<!--DXMETADATA end --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.CanHorizontallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.<!--DXMETADATA end --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.CanVerticallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.ExtentHeight">
      <summary>Gets the vertical size of the extent.
<!--For controls that display content, the extent size refers to the total width and height of the content. Content controls typically expose extent width and height as properties. Contrast with a viewport, which is a mechanism used to display a particular portion of content that may be too large to fit in the available display space.--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.ExtentWidth">
      <summary>Gets the horizontal size of the extent. <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="extent#a75b4bc2-5951-4ab6-bcf7-8225f206ed4c"><!--For controls that display content, the extent size refers to the total width and height of the content. Content controls typically expose extent width and height as properties. Contrast with a viewport, which is a mechanism used to display a particular portion of content that may be too large to fit in the available display space.--></span></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.HorizontalOffset">
      <summary>Gets the horizontal <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="offset#9fa47c66-a598-4d9b-ab6f-ddfd4225785b"><!--The horizontal and vertical offset represent the distance, in device independent pixels, that the viewport has been scrolled from its left or top side, respectively.-->offset</span>
of the scrolled content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.Orientation">
      <summary>Gets or sets a value that describes the horizontal or vertical content orientation.<!--DXMETADATA end --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.ScrollOwner">
      <summary>Gets or sets a <strong>ScrollViewer</strong> element that controls the scrolling behavior of the panel.<!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="%%comment%%" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="property" source="Item" filter="" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=overloadlist,caption=$$OverloadList$$%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%" --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.VerticalOffset">
      <summary>Gets the vertical <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="offset#9fa47c66-a598-4d9b-ab6f-ddfd4225785b">offset</span> of the scrolled content. <!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="%%comment%%" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="property" source="Item" filter="" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=overloadlist,caption=$$OverloadList$$%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%" --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.ViewportHeight">
      <summary>Gets the vertical size of the viewport for this content.<!--DXMETADATA end --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.ViewportWidth">
      <summary>Gets the horizontal size of the viewport for this content.<!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="%%comment%%" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="property" source="Item" filter="" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=overloadlist,caption=$$OverloadList$$%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%" --></summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Print.PrintVirtualizingStackPanel.OrientationProperty">
      <summary>Identifies the Orientation dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.ProgressEventArgs.#ctor(Xceed.Wpf.DataGrid.Print.ProgressInfo)">
      <summary>Initializes a new instance of the <strong>PrintProgressionEventArgs</strong> class specifying progression information.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.ProgressEventArgs.ProgressInfo">
      <summary>Gets progress information on the content of a grid that is being printed or exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Print.ProgressInfo.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Raises the PropertyChanged event.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.ProgressInfo.CurrentPageNumber">
      <summary>Gets the number of the page currently being printed or exported.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.ProgressInfo.Description">
      <summary>Gets or sets the descriptive information displayed in the progress window when the content of a grid is being printed or exported.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Print.ProgressInfo.PercentCompleted">
      <summary>Gets a value representing the percentage of the printing or exporting process that has been completed.</summary>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.Print.ProgressInfo.PropertyChanged">
      <summary>Raised when the value of a property is changed.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Settings.UserSettings">
      <summary>Value representing the settings that are persisted or applied when the SaveUserSettings or <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridControl~LoadUserSettings.html">LoadUserSettings</see> methods are called, respectively.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Settings.XmlColumnWidth">
      <summary>Structure that represents the width of a column when it is persisted.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.XmlColumnWidth.#ctor(Xceed.Wpf.DataGrid.ColumnWidth)">
      <summary>Initializes a new instance of the <strong>XmlColumnWidth</strong> class specifying the width of a column.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.XmlColumnWidth.ConvertToColumnWidth">
      <summary>Converts the current <strong>XmlColumnWidth</strong> structure to a ColumnWidth structure.</summary>
      <returns>The resulting ColumnWidth structure.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Settings.XmlColumnWidth.UnitType">
      <summary>Gets or sets the ColumnWidthUnitType used by the structure.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Settings.XmlColumnWidth.Value">
      <summary>Gets a <strong>double</strong> that represents the value of the <strong>XmlColumnWidth</strong> structure.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Settings.ColumnSettings">
      <summary>Class that allows the settings of a Column object to be persisted and
loaded.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Settings.DataGridControlSettings">
      <summary>Class that allows the settings of a DataGridControl object to be
persisted and loaded.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Settings.DetailConfigurationSettings">
      <summary>Class that allows the settings of a DetailConfiguration object
to be persisted and loaded.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Settings.SettingsBase">
      <summary>Base class that allows the settings of an object to be persisted and loaded.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Settings.SettingsRepository">
      <summary>Represents the repository to which the settings of a grid and its elements are persisted when the <strong>SaveUserSettings</strong> method is
called.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.ColumnSettings.#ctor">
      <summary>Initializes a new instance of the <strong>ColumnSettings</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.ColumnSettings.ApplyTo(System.Object)">
      <summary>Applies the persisted settings to the specified object.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.ColumnSettings.Cleanup(Xceed.Wpf.DataGrid.Settings.UserSettings)">
      <summary>Removes existing user settings if they are no longer needed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.ColumnSettings.PersistFrom(System.Object)">
      <summary>Reads the settings from the specified object and persists them.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Settings.ColumnSettings.Visible">
      <summary>Gets or sets a value indicating whether the column is visible.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Settings.ColumnSettings.VisiblePosition">
      <summary>Gets or sets a value representing the column's visible position.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Settings.ColumnSettings.Width">
      <summary>Gets or sets a column's width.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.DataGridControlSettings.#ctor">
      <summary>Initializes a new instance of the <strong>DataGridControlSettings</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.DataGridControlSettings.ApplyTo(System.Object)">
      <summary>Applies the persisted settings to the specified object.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.DataGridControlSettings.Cleanup(Xceed.Wpf.DataGrid.Settings.UserSettings)">
      <summary>Removes existing user settings if they are no longer needed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.DataGridControlSettings.PersistFrom(System.Object)">
      <summary>Reads the settings from the specified object and persists them.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Settings.DataGridControlSettings.CardWidth">
      <summary>Gets or sets a value representing the width of the cards when the grid is in a card-view layout.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Settings.DataGridControlSettings.FixedColumnCount">
      <summary>Gets or sets a value representing the fixed-column count.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Settings.DataGridControlSettings.GroupPropertyNames">
      <summary>Gets or sets the property names of the groups.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Settings.DataGridControlSettings.SortDescriptions">
      <summary>Gets or sets the sort descriptions applied to the grid.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.DetailConfigurationSettings.#ctor">
      <summary>Initializes a new instance of the <strong>DetailConfigurationSettings</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.DetailConfigurationSettings.ApplyTo(System.Object)">
      <summary>Applies the persisted settings to the specified object.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.DetailConfigurationSettings.Cleanup(Xceed.Wpf.DataGrid.Settings.UserSettings)">
      <summary>Removes existing user settings if they are no longer needed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.DetailConfigurationSettings.PersistFrom(System.Object)">
      <summary>Reads the settings from the specified object and persists them.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Settings.DetailConfigurationSettings.FixedColumnCount">
      <summary>Gets or sets a value representing the fixed-column count.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Settings.DetailConfigurationSettings.GroupPropertyNames">
      <summary>Gets or sets the property names of the groups.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Settings.DetailConfigurationSettings.SortDescriptions">
      <summary>Gets or sets the sort descriptions applied to the grid.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.SettingsBase.ApplyTo(System.Object)">
      <summary>Applies the persisted settings to the specified object.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.SettingsBase.Cleanup(Xceed.Wpf.DataGrid.Settings.UserSettings)">
      <summary>Removes existing user settings if they are no longer needed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.SettingsBase.PersistFrom(System.Object)">
      <summary>Reads the settings from the specified object and persists them.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.SettingsRepository.#ctor">
      <summary>Initializes a new instance of the <strong>SettingsRepository</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.SettingsRepository.CreateColumnSettings">
      <summary>Creates the ColumnSettings for this repository.</summary>
      <returns>The create ColumnSettings.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.SettingsRepository.CreateDataGridControlSettings">
      <summary>Creates the DataGridControlSettings for this
repository.</summary>
      <returns>The created DataGridControlSettings.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Settings.SettingsRepository.CreateDetailConfigurationSettings">
      <summary>Creates the DetailConfigurationSettings for
this repository.</summary>
      <returns>The create DetailConfigurationSettings.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Settings.SettingsRepository.Settings">
      <summary>Gets or sets a dictionary of settings that will be contained in the repository.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.AverageFunction">
      <summary>
        <para>Class that represents the Average statistical function, which is the measure of central tendancy of a set of values computed by dividing the sum of the
values by their number; commonly called the arithmetic mean or the average. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.CorrelationCoefficientFunction">
      <summary>
        <para>Class the represents the Correlation Coefficient statistical function, which represents the quantity that gives the quality of a least squares fitting to
the original data. Also known as cross-correlation coefficient. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.CountFunction">
      <summary>
        <para>Class that represents the Count statistical function, which is the result of a tally that reveals the number of items in a set. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.CovarianceFunction">
      <summary>
        <para>Class that represents the Covariance statistical function, which is the measure of the strength of the correlation between two sets of random variates. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.CumulativeStatFunction">
      <summary>Base class for statistical functions that accumulates the values required to calculate the result of the statistical function from the result of
a child group. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.GeometricMeanFunction">
      <summary>
        <para>Class that represents the Geometric Mean statistical function, which is defined as the product of all the members of a set of positive data, raised to a
power equal to the reciprocal of the number of members. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.HarmonicMeanFunction">
      <summary>
        <para>Class that represents the Harmonic Mean statistical function, which represents Gets 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.InvalidSourcePropertyNameException">
      <summary>Exception that is thrown when an invalid property name is specified in the SourcePropertyName property. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.InvalidValueException">
      <summary>Exception that is thrown when a statistical function encounters an invalid value during the calculation of its result. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.MaximumFunction">
      <summary>
        <para>Class that represents the Maximum statistical function, which the highest value among a set of items. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.MedianFunction">
      <summary>
        <para>Class that represents the Median statistical function, which is the middle number in a set of ordered data. If the set contains an even number of items, the
arithmetic mean of the 2 middle values will be returned. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.MinimumFunction">
      <summary>
        <para>Class that represents the Minimum statistical function, which is the lowest value among a set of items. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.ModeFunction">
      <summary>
        <para>Class that represents the Mode statistical function, which is the value that has the largest number of observations, namely the most frequent value or
values. The mode is not necessarily unique, unlike the arithmetic mean. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.RootMeanSquareFunction">
      <summary>
        <para>Class that represents the Root-Mean-Square statistical function, which is the square root of the arithmetical average of a set of squared instantaneous
values. The root mean square is also known as the quadratic mean. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.StandardDeviationFunction">
      <summary>
        <para>Class that represents the Standard Deviation statistical function, which is the measure of the degree of dispersion of sample or population data from the
mean value. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.StatFunction">
      <summary>Base class for statistical functions.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.StatFunctionCollection">
      <summary>Contains a collection of statistical functions. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.StatResult">
      <summary>Class that represents the result of a statistical function. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.SumFunction">
      <summary>
        <para>Class that represents the Sum statistical function, which is the result of the addition of the values of a set of items.
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Stats.VarianceFunction">
      <summary>
        <para>Class that represents the Variance statistical function. The variance of a random sample or population variable is a non-negative number which gives an idea
of how widely spread the values of the random variable are likely to be; the larger the variance, the more scattered the observations on average.
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.AverageFunction.#ctor">
      <summary>Initializes a new instance of the <strong>AverageFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.AverageFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>AverageFunction</strong> class specifying the unique property name from which the result of the
function can be retrieved as well as the name of the column whose values will be used to calculate the result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.AverageFunction.GetResult">
      <summary>Retrieves the result of the statistical function.<!--DXMETADATA end --></summary>
      <returns>A StatResult containing the result of the statistical function.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.AverageFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types of the columns specified by the SourcePropertyName property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.AverageFunction.InitializePrerequisites(Xceed.Wpf.DataGrid.Stats.StatResult[])">
      <summary>Initializes the prerequisite statistical functions defined by the PrerequisiteFunctions property.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.AverageFunction.Reset">
      <summary>Resets the statistical function to its original state.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.AverageFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.<!--DXMETADATA end --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.AverageFunction.PrerequisiteFunctions">
      <summary>Gets a list of the statistical functions whose results are required by the current statistical function in order to calculate its own result.
<!--DXMETADATA end --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.AverageFunction.RequiresAccumulation">
      <summary>Gets a value indicating whether the statistical function needs to accumulate its own results.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CorrelationCoefficientFunction.#ctor">
      <summary>Initializes a new instance of the <strong>CorrelationCoefficientFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CorrelationCoefficientFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>CorrelationCoefficientFunction</strong> class specifying the unique property name from which the result
of the function can be retrieved as well as the name of the column whose values will be used to calculate the result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CorrelationCoefficientFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.<!--DXMETADATA end --><!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CorrelationCoefficientFunction.GetResult">
      <summary>Retrieves the result of the statistical function.<!--DXMETADATA end --><!--DXMETADATA end --></summary>
      <returns>A StatResult containing the result of the statistical function.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CorrelationCoefficientFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types of the columns specified by the SourcePropertyName property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CorrelationCoefficientFunction.InitializePrerequisites(Xceed.Wpf.DataGrid.Stats.StatResult[])">
      <summary>Initializes the prerequisite statistical functions defined by the PrerequisiteFunctions property.
<!--DXMETADATA end --><!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CorrelationCoefficientFunction.Reset">
      <summary>Resets the statistical function to its original state.<!--DXMETADATA end --><!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CorrelationCoefficientFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.<!--DXMETADATA end --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.CorrelationCoefficientFunction.PrerequisiteFunctions">
      <summary>Gets a list of the statistical functions whose results are required by the current statistical function in order to calculate its own result.
<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CountFunction.#ctor">
      <summary>Initializes a new instance of the <strong>Count</strong> statistical function.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CountFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>CountFunction</strong> class specifying the unique property name from which the result of the function
can be retrieved as well as the name of the column whose values will be used to calculate the result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CountFunction.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <strong>CountFunction</strong> class specifying the unique property name from which the result of the function
can be retrieved, the name of the column whose values will be used to calculate the result, and indicating whether $$NULL$$ and DbNull values are included.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CountFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function. The values will be accumulated in an <strong>Int64</strong>.
<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CountFunction.AccumulateChildResult(Xceed.Wpf.DataGrid.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group. The values will be
accumulated in an <strong>Int64</strong>.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CountFunction.GetEquivalenceKey">
      <summary>Retrieves a value that represents the statistical function's unique equivalence key</summary>
      <returns>A value representing the statistical function's unique equivalence key.<!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="EXCEPTION_LIST" namespace="exception" source="Item" filter="" designtime="true" format="%%replaceinquotes:value=false%%%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=exceptions,caption=""$$Exceptions$$%%designlist:tagidentifier=##EXCEPTION,itemtype=Exception%%""%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="PERMISSION_LIST" namespace="permission" source="Item" filter="" designtime="true" format="%%replaceinquotes:value=false%%%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=permissions,caption=""$$Permissions$$%%designlist:tagidentifier=##PERMISSION,itemtype=Permission%%""%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --></returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CountFunction.GetResult">
      <summary>Retrieves the result of the statistical function.<!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="%%comment%%" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="method" source="Item" filter="" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=overloadlist,caption=$$OverloadList$$%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%" --></summary>
      <returns>A StatResult containing the result of the statistical function.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CountFunction.InitializeFromInstance(Xceed.Wpf.DataGrid.Stats.StatFunction)">
      <summary>A reference to the <strong>StatFunction</strong> whose property values will be copied to the current instance of the same-type statistical
function.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CountFunction.IsEquivalent(Xceed.Wpf.DataGrid.Stats.StatFunction)">
      <summary>Retrieves a value indicating whether a statistical function is the equivalent of the current statistical function such that both statistical
functions will return the same result for the same set of values.<!--DXMETADATA end --></summary>
      <returns>
        <strong>true</strong> of the specified statistical function is the equivalent of the current statistical function; <strong>false</strong>
otherwise.<!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="EXCEPTION_LIST" namespace="exception" source="Item" filter="" designtime="true" format="%%replaceinquotes:value=false%%%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=exceptions,caption=""$$Exceptions$$%%designlist:tagidentifier=##EXCEPTION,itemtype=Exception%%""%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="PERMISSION_LIST" namespace="permission" source="Item" filter="" designtime="true" format="%%replaceinquotes:value=false%%%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=permissions,caption=""$$Permissions$$%%designlist:tagidentifier=##PERMISSION,itemtype=Permission%%""%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --></returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CountFunction.Reset">
      <summary>Resets the statistical function to its original state.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CountFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.<!--DXMETADATA end --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.CountFunction.IncludeNullValues">
      <summary>Gets or sets a value indicating whether $$NULL$$ and DbNull values are included in the count.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CovarianceFunction.#ctor">
      <summary>Initializes a new instance of the <strong>CovarianceFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CovarianceFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>Co</strong>v<strong>arianceFunction</strong> class specifying the unique property name from which the
result of the function can be retrieved as well as the name of the column whose values will be used to calculate the result.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CovarianceFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.<!--DXMETADATA end --><!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CovarianceFunction.GetResult">
      <summary>Retrieves the result of the statistical function.<!--DXMETADATA end --><!--DXMETADATA end --></summary>
      <returns>A StatResult containing the result of the statistical function.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CovarianceFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types of the columns specified by the SourcePropertyName property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CovarianceFunction.InitializePrerequisites(Xceed.Wpf.DataGrid.Stats.StatResult[])">
      <summary>Initializes the prerequisite statistical functions defined by the PrerequisiteFunctions property.<!--DXMETADATA end --><!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CovarianceFunction.Reset">
      <summary>Resets the statistical function to its original state.<!--DXMETADATA end --><!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CovarianceFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.<!--DXMETADATA end --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.CovarianceFunction.PrerequisiteFunctions">
      <summary>Gets a list of the statistical functions whose results are required by the current statistical function in order to calculate its own result.
<!--DXMETADATA end --><!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.CumulativeStatFunction.AccumulateChildResult(Xceed.Wpf.DataGrid.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.GeometricMeanFunction.#ctor">
      <summary>Initializes a new instance of the <strong>GeometricMeanFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.GeometricMeanFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>GeometricMeanFunction</strong> class specifying the unique property name from which the result of the
function can be retrieved as well as the name of the column whose values will be used to calculate the result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.GeometricMeanFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.GeometricMeanFunction.AccumulateChildResult(Xceed.Wpf.DataGrid.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.GeometricMeanFunction.GetResult">
      <summary>Retrieves the result of the statistical function.<!--DXMETADATA end --></summary>
      <returns>A StatResult containing the result of the statistical function.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.GeometricMeanFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types of the columns specified by the SourcePropertyName property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.GeometricMeanFunction.InitializePrerequisites(Xceed.Wpf.DataGrid.Stats.StatResult[])">
      <summary>Initializes the prerequisite statistical functions defined by the PrerequisiteFunctions property.<!--DXMETADATA end --><!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.GeometricMeanFunction.Reset">
      <summary>Resets the statistical function to its original state.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.GeometricMeanFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.GeometricMeanFunction.PrerequisiteFunctions">
      <summary>Gets a list of the statistical functions whose results are required by the current statistical function in order to calculate its own result.
<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.HarmonicMeanFunction.#ctor">
      <summary>Initializes a new instance of the <strong>HarmonicMeanFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.HarmonicMeanFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>HarmonicMeanFunction</strong> class specifying the unique property name from which the result of the
function can be retrieved as well as the name of the column whose values will be used to calculate the result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.HarmonicMeanFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.HarmonicMeanFunction.AccumulateChildResult(Xceed.Wpf.DataGrid.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.HarmonicMeanFunction.GetResult">
      <summary>Retrieves the result of the statistical function.<!--DXMETADATA end --></summary>
      <returns>A StatResult containing the result of the statistical function.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.HarmonicMeanFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types of the columns specified by the SourcePropertyName property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.HarmonicMeanFunction.Reset">
      <summary>Resets the statistical function to its original state.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.HarmonicMeanFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.InvalidSourcePropertyNameException.#ctor">
      <summary>Initializes a new instance of the <strong>InvalidSourcePropertyNameException</strong> class using the specified error message and indicating the
invalid source property name.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.InvalidSourcePropertyNameException.#ctor">
      <summary>Initializes a new instance of the <strong>InvalidSourcePropertyNameException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.InvalidSourcePropertyNameException.#ctor(System.String)">
      <summary>Initializes a new instance of the <strong>InvalidSourcePropertyNameException</strong> class with a specified error message.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.InvalidSourcePropertyNameException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>InvalidSourcePropertyNameException</strong> class with a specified error message and the invalid
property name that caused the exception.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.InvalidSourcePropertyNameException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <strong>InvalidSourcePropertyNameException</strong> class with a specified error message and the inner
exception that is the case of this exception.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.InvalidSourcePropertyNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <strong>InvalidSourcePropertyNameException</strong> class using serialized data.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.InvalidSourcePropertyNameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <strong>SerializationInfo</strong><font color="black">object with the parameter name and additional exception information.</font></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.InvalidSourcePropertyNameException.SourcePropertyName">
      <summary>Gets or sets the name of the invalid source property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.InvalidValueException.#ctor">
      <summary>Initializes a new instance of the <strong>InvalidValueException</strong> class using the specified error message.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.InvalidValueException.#ctor">
      <summary>Initializes a new instance of the <strong>InvalidValueException</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.InvalidValueException.#ctor(System.String)">
      <summary>Initializes a new instance of the <strong>InvalidValueException</strong> class with a specified error message.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.InvalidValueException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <strong>InvalidValueException</strong> class with a specified error message and the inner exception that is the
case of this exception.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.InvalidValueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <strong>InvalidValueException</strong> class using serialized data.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MaximumFunction.#ctor">
      <summary>Initializes a new instance of the <strong>MaximumFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MaximumFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>MaximumFunction</strong> class specifying the unique property name from which the result of the
function can be retrieved as well as the name of the column whose values will be used to calculate the result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MaximumFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MaximumFunction.AccumulateChildResult(Xceed.Wpf.DataGrid.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MaximumFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MaximumFunction.Reset">
      <summary>Resets the statistical function to its original state.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MaximumFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MedianFunction.#ctor">
      <summary>Initializes a new instance of the <strong>MedianFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MedianFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>MedianFunction</strong> class specifying the unique property name from which the result of the function
can be retrieved as well as the name of the column whose values will be used to calculate the result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MedianFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MedianFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MedianFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types of the columns specified by the SourcePropertyName property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MedianFunction.Reset">
      <summary>Resets the statistical function to its original state.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MedianFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MinimumFunction.#ctor">
      <summary>Initializes a new instance of the <strong>MinimumFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MinimumFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>MinimumFunction</strong> class specifying the unique property name from which the result of the
function can be retrieved as well as the name of the column whose values will be used to calculate the result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MinimumFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MinimumFunction.AccumulateChildResult(Xceed.Wpf.DataGrid.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MinimumFunction.GetResult">
      <summary>Retrieves the result of the statistical function.<!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="%%comment%%" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="method" source="Item" filter="" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=overloadlist,caption=$$OverloadList$$%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%" --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MinimumFunction.Reset">
      <summary>Resets the statistical function to its original state.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.MinimumFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.ModeFunction.#ctor">
      <summary>Initializes a new instance of the <strong>ModeFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.ModeFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>ModeFunction</strong> class specifying the unique property name from which the result of the function
can be retrieved as well as the name of the column whose values will be used to calculate the result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.ModeFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.ModeFunction.GetEquivalenceKey">
      <summary>Retrieves a value that represents the statistical function's unique equivalence key.<!--DXMETADATA end --></summary>
      <returns>A value representing the statistical function's unique equivalence key.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.ModeFunction.GetResult">
      <summary>Retrieves the result of the statistical function.<!--DXMETADATA end --></summary>
      <returns>A StatResult containing the result of the statistical function.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.ModeFunction.InitializeFromInstance(Xceed.Wpf.DataGrid.Stats.StatFunction)">
      <summary>A reference to the <strong>StatFunction</strong> whose property values will be copied to the current instance of the same-type statistical
function.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.ModeFunction.IsEquivalent(Xceed.Wpf.DataGrid.Stats.StatFunction)">
      <summary>Retrieves a value indicating whether a statistical function is the equivalent of the current statistical function such that both statistical
functions will return the same result for the same set of values.<!--DXMETADATA end --></summary>
      <returns>
        <strong>true</strong> of the specified statistical function is the equivalent of the current statistical function; <strong>false</strong>
otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.ModeFunction.Reset">
      <summary>Resets the statistical function to its original state.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.ModeFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.<!--DXMETADATA end --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.ModeFunction.AllowMultimodal">
      <summary>Gets or sets a value indicating whether the result of the Mode statistical function can be multimodal.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.RootMeanSquareFunction.#ctor">
      <summary>Initializes a new instance of the <strong>RootMeanSquareFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.RootMeanSquareFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>RootMeanSquareFunction</strong> class specifying the unique property name from which the result of the
function can be retrieved as well as the name of the column whose values will be used to calculate the result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.RootMeanSquareFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.RootMeanSquareFunction.AccumulateChildResult(Xceed.Wpf.DataGrid.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.RootMeanSquareFunction.GetResult">
      <summary>Retrieves the result of the statistical function.<!--DXMETADATA end --></summary>
      <returns>A StatResult containing the result of the statistical function.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.RootMeanSquareFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types of the columns specified by the SourcePropertyName property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.RootMeanSquareFunction.Reset">
      <summary>Resets the statistical function to its original state.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.RootMeanSquareFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.<!--DXMETADATA end --><!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="%%comment%%" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="method" source="Item" filter="" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=overloadlist,caption=$$OverloadList$$%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%" --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StandardDeviationFunction.#ctor">
      <summary>Initializes a new instance of the <strong>StandardDeviationFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StandardDeviationFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>StandardDeviationFunction</strong> class specifying the unique property name from which the result of
the function can be retrieved as well as the name of the column whose values will be used to calculate the result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StandardDeviationFunction.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <strong>StandardDeviationFunction</strong> class specifying the unique property name from which the result of
the function can be retrieved, the name of the column whose values will be used to calculate the result, as well as indicating whether the result is calculated
for an entire population</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StandardDeviationFunction.GetEquivalenceKey">
      <summary>Retrieves a value that represents the statistical function's unique equivalence key.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StandardDeviationFunction.GetResult">
      <summary>Retrieves the result of the statistical function.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StandardDeviationFunction.InitializeFromInstance(Xceed.Wpf.DataGrid.Stats.StatFunction)">
      <summary>Initializes the properties of the current instance of the same-type statistical function when child results are being calculated.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StandardDeviationFunction.InitializePrerequisites(Xceed.Wpf.DataGrid.Stats.StatResult[])">
      <summary>Initializes the prerequisite statistical functions defined by the PrerequisiteFunctions property.
<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StandardDeviationFunction.IsEquivalent(Xceed.Wpf.DataGrid.Stats.StatFunction)">
      <summary>Retrieves a value indicating whether a statistical function is the equivalent of the current statistical function such that both statistical
functions will return the same result for the same set of values.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StandardDeviationFunction.Reset">
      <summary>Resets the statistical function to its original state.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StandardDeviationFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.<!--DXMETADATA end --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.StandardDeviationFunction.EntirePopulation">
      <summary>Gets or sets a value indicating whether the variance is calculated for an entire population.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.StandardDeviationFunction.PrerequisiteFunctions">
      <summary>Gets a list of the statistical functions whose results are required by the current statistical function in order to calculate its own result.
<!--DXMETADATA end --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.StandardDeviationFunction.RequiresAccumulation">
      <summary>Gets a value indicating whether the statistical function needs to accumulate its own results.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StatFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StatFunction.CheckSealed">
      <summary>Checks whether this object is read-only and cannot be changed.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StatFunction.GetEquivalenceKey">
      <summary>Retrieves a value that represents the statistical function's unique equivalence key.</summary>
      <returns>A value representing the statistical function's unique equivalence key.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StatFunction.GetResult">
      <summary>Retrieves the result of the statistical function.</summary>
      <returns>A StatResult containing the result of the statistical function.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StatFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types in which the values will be accumulated.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StatFunction.InitializeFromInstance(Xceed.Wpf.DataGrid.Stats.StatFunction)">
      <summary>Initializes the properties of the current instance of the same-type statistical function when a new instance of the same function needs to be
created.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StatFunction.InitializePrerequisites(Xceed.Wpf.DataGrid.Stats.StatResult[])">
      <summary>Initializes the prerequisite statistical functions defined by the PrerequisiteFunctions property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StatFunction.IsEquivalent(Xceed.Wpf.DataGrid.Stats.StatFunction)">
      <summary>Retrieves a value indicating whether a statistical function is the equivalent of the current statistical function such that both statistical
functions will return the same result for the same set of values.</summary>
      <returns>
        <strong>true</strong> of the specified statistical function is the equivalent of the current statistical function; <strong>false</strong>
otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StatFunction.Reset">
      <summary>Resets the statistical function to its original state.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StatFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.StatFunction.IsInitialized">
      <summary>Gets a value indicating whether Initialize method has
been called, indicating that the types in which the values will be accumulated have been initialized.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.StatFunction.IsSealed">
      <summary>Gets a value indicating whether this instance is in an immutable state.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.StatFunction.PrerequisiteFunctions">
      <summary>Gets a list of the statistical functions whose results are required by the current statistical function in order to calculate its own result.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.StatFunction.RequiresAccumulation">
      <summary>Gets a value indicating whether the statistical function needs to accumulate its own results.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.StatFunction.ResultPropertyName">
      <summary>Gets or sets the unique, case-sensitive property name from which the result of the function can be retrieved.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.StatFunction.SourcePropertyName">
      <summary>Gets or sets the name of the column whose values will be used to calculate the result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StatFunctionCollection.InsertItem(System.Int32,Xceed.Wpf.DataGrid.Stats.StatFunction)">
      <summary>Inserts a statistical function into the collection at the specified index.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StatFunctionCollection.SetItem(System.Int32,Xceed.Wpf.DataGrid.Stats.StatFunction)">
      <summary>Replaces the statistical function at the specified index.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StatFunctionCollection.Contains(System.String)">
      <summary>Determines whether a statistical function with the specified result property name is contained in the collection.</summary>
      <returns>
        <strong>true</strong> if the statistical function with the specified result property name is contained in the collection; <strong>false</strong>
otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.StatResult.#ctor(System.Object)">
      <summary>Initializes a new instance of the <strong>StatResult</strong> class specifying the value it will contain.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.StatResult.Value">
      <summary>Gets the value of the statistical result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.SumFunction.#ctor">
      <summary>Initializes a new instance of the <strong>SumFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.SumFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>SumFunction</strong> class specifying the unique property name from which the result of the function
can be retrieved as well as the name of the column whose values will be used to calculate the result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.SumFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.SumFunction.AccumulateChildResult(Xceed.Wpf.DataGrid.Stats.StatResult)">
      <summary>Accumulates the values required to calculate the result of the statistical function from the results of a child group.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.SumFunction.GetResult">
      <summary>Retrieves the result of the statistical function.<!--DXMETADATA end --></summary>
      <returns>A StatResult containing the result of the statistical function.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.SumFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types of the columns specified by the SourcePropertyName property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.SumFunction.Reset">
      <summary>Resets the statistical function to its original state.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.SumFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.VarianceFunction.#ctor">
      <summary>Initializes a new instance of the <strong>VarianceFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.VarianceFunction.#ctor">
      <summary>Initializes a new instance of the <strong>VarianceFunction</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.VarianceFunction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <strong>VarianceFunction</strong> class specifying the unique property name from which the result of the
function can be retrieved as well as the name of the column whose values will be used to calculate the result.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.VarianceFunction.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <strong>VarianceFunction</strong> class specifying the unique property name from which the result of the
function can be retrieved, the name of the column whose values will be used to calculate the result, as well as indicating whether the result is calculated for
an entire population</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.VarianceFunction.Accumulate(System.Object[])">
      <summary>Accumulates the values required to calculate the result of the statistical function.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.VarianceFunction.GetEquivalenceKey">
      <summary>Retrieves a value that represents the statistical function's unique equivalence key.<!--DXMETADATA end --></summary>
      <returns>A value representing the statistical function's unique equivalence key.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.VarianceFunction.GetResult">
      <summary>Retrieves the result of the statistical function.<!--DXMETADATA end --></summary>
      <returns>A StatResult containing the result of the statistical function.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.VarianceFunction.Initialize(System.Type[])">
      <summary>Initializes the statistical function specifying the types of the columns specified by the SourcePropertyName property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.VarianceFunction.InitializeFromInstance(Xceed.Wpf.DataGrid.Stats.StatFunction)">
      <summary>Initializes the properties of the current instance of the same-type statistical function when child results are being calculated.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.VarianceFunction.InitializePrerequisites(Xceed.Wpf.DataGrid.Stats.StatResult[])">
      <summary>Initializes the prerequisite statistical functions defined by the PrerequisiteFunctions property.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.VarianceFunction.IsEquivalent(Xceed.Wpf.DataGrid.Stats.StatFunction)">
      <summary>Retrieves a value indicating whether a statistical function is the equivalent of the current statistical function such that both statistical
functions will return the same result for the same set of values.<!--DXMETADATA end --></summary>
      <returns>
        <strong>true</strong> of the specified statistical function is the equivalent of the current statistical function; <strong>false</strong>
otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.VarianceFunction.Reset">
      <summary>Resets the statistical function to its original state.<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Stats.VarianceFunction.Validate">
      <summary>Validates the statistical function to ensure that it is able to calculate its result.<!--DXMETADATA end --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.VarianceFunction.EntirePopulation">
      <summary>Gets or sets a value indicating whether the variance is calculated for an entire population.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Stats.VarianceFunction.PrerequisiteFunctions">
      <summary>Gets a list of the statistical functions whose results are required by the current statistical function in order to calculate its own result.
<!--DXMETADATA end --></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ValidationRules.CellContentBindingValidationRule">
      <summary>Represents a pass-through CellValidationRule,
wrapping a validation rule that validates a cell content binding.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ValidationRules.CellEditorErrorValidationRule">
      <summary>Represents a rule that validates cell-editor content.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ValidationRules.CellEditorValidationRule">
      <summary>Represents a rule that validates cell-editor content.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ValidationRules.CellValidationRule">
      <summary>Represents a rule that validates cell content.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ValidationRules.EventCellValidationRule">
      <summary>Represents a rule that validates cell content through its <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.ValidationRules.EventCellValidationRule~Validating_EV.html">Validating</see> event.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ValidationRules.PassthroughCellValidationRule">
      <summary>Represents a pass-through CellValidationRule,
wrapping a multi-purpose <strong>ValidationRule</strong> to expose it as a <strong>CellValidationRule</strong></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.ValidationRules.SourceDataConverterValidationRule">
      <summary>Represents a validation rule that validates type conversion of values to and from a source.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.CellContentBindingValidationRule.#ctor(System.Windows.Controls.ValidationRule)">
      <summary>Initializes a new instance of the <strong>CellContentBindingValidationRule</strong> class specifying the <strong>ValidationRule</strong> that
will be wrapped as a CellValidationRule.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.CellEditorErrorValidationRule.#ctor">
      <summary>Initializes a new instance of the <strong>CellEditorErrorValidationRule</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.CellEditorErrorValidationRule.Validate(System.Object,System.Globalization.CultureInfo,Xceed.Wpf.DataGrid.CellValidationContext,System.Windows.FrameworkElement)">
      <summary>Validates the specified <em>value</em> using the provided information.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.CellEditorValidationRule.Validate(System.Object,System.Globalization.CultureInfo,Xceed.Wpf.DataGrid.CellValidationContext)">
      <summary>Validates the specified <em>value</em> using the provided information.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.CellEditorValidationRule.Validate(System.Object,System.Globalization.CultureInfo,Xceed.Wpf.DataGrid.CellValidationContext,System.Windows.FrameworkElement)">
      <summary>Validates the specified <em>value</em> using the provided information.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.CellValidationRule.Validate(System.Object,System.Globalization.CultureInfo,Xceed.Wpf.DataGrid.CellValidationContext)">
      <summary>Validates the specified <em>value</em> using the provided information.</summary>
      <returns>A <strong>ValidationResult</strong> indicating whether the value passed the validation process.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.EventCellValidationRule.#ctor">
      <summary>Initializes a new instance of the EventCellValidationRule class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.EventCellValidationRule.Validate(System.Object,System.Globalization.CultureInfo,Xceed.Wpf.DataGrid.CellValidationContext)">
      <summary>Validates the specified <em>value</em> using the provided information.</summary>
      <returns>A <strong>ValidationResult</strong> indicating whether the value passed the validation process.</returns>
    </member>
    <member name="E:Xceed.Wpf.DataGrid.ValidationRules.EventCellValidationRule.Validating">
      <summary>Raised after the Validate method
to provide additional validation, or, if no validation has been provided in the <strong>Validate</strong> method, to validate cell content.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.PassthroughCellValidationRule.#ctor">
      <summary>Initializes a new instance of the PassthroughCellValidationRule class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.PassthroughCellValidationRule.#ctor(System.Windows.Controls.ValidationRule)">
      <summary>Initializes a new instance of the PassthroughCellValidationRule class specifying the
<strong>ValidationRule</strong> that will be wrapped as a <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.ValidationRules.CellValidationRule.html">CellValidationRule</see>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.PassthroughCellValidationRule.Validate(System.Object,System.Globalization.CultureInfo,Xceed.Wpf.DataGrid.CellValidationContext)">
      <summary>Validates the specified <em>value</em> using the provided information.</summary>
      <returns>A <strong>ValidationResult</strong> indicating whether the value passed the validation process.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.ValidationRules.PassthroughCellValidationRule.ValidationRule">
      <summary>Gets or sets the <strong>ValidationRule</strong> to be wrapped as a CellValidationRule.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.SourceDataConverterValidationRule.#ctor(System.Boolean,System.Type)">
      <summary>Initializes a new instance of the <strong>SourceDataConverterValidationRule</strong> class specifying whether the source supports
<strong>DBNull</strong> values and the type to which values are to be converted.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.ValidationRules.SourceDataConverterValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>Validates the specified <em>value</em> using the provided information.</summary>
      <returns>A <strong>ValidationResult</strong> indicating whether the value passed the validation process.</returns>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.ColumnChooserSortOrder">
      <summary>Value representing the order in which the column titles displayed in the column-chooser are sorted.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.ColumnStretchMode">
      <summary>Value indicating how the widths of the columns in a grid are stretched.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.DropMarkOrientation">
      <summary>Value representing the orientation of the drop-mark in the ColumnManagerRow and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.GroupByControl.html">GroupByControl</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.PassiveLayoutAxis">
      <summary>Value representing on which axis a PassiveLayoutDecorator's size will be provided by its parent.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewerPosition">
      <summary>Value representing the position of the DataGridScrollViewer to indicate if navigation in the fixed header or footer
sections is permitted.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.ViewPropertyMode">
      <summary>Value that determines how or if the property on which the ViewPropertyAttribute is set can be accessed through a <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.html">ViewBinding</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.AeroNormalColorTheme">
      <summary>
        <para>Represents the Aero normal-color theme.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.CardBackgroundBrushes">
      <summary>Static class that provides a variety of brushes that were designed to be used as card backgrounds.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.CardView">
      <summary>Represents a card-view layout.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.CardViewItemsHost">
      <summary>
        <para>Class used in DataGridControl templates as a replacement for the
<strong>ItemsPresenter</strong> when a grid is in a card-view layout and that will contain the data items as well as the items contained in
<strong>non-fixed</strong> header and footer sections and whose containers are created from the associated <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridItemsHost~CustomItemContainerGenerator.html">CustomItemContainerGenerator</see>.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.CardViewScrollViewer">
      <summary>Represents a scrollable area that can contain cards.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.ClassicSystemColorTheme">
      <summary>Represents the Windows Classic, system-colors theme.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.CompactCardView">
      <summary>Represents a compact card-view layout. The compact card-view layout applies well when a database has many columns but few of the fields contain
data. In this case, the fields that do not contain data will not be displayed in the cards, giving them a more compact appearance.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes">
      <summary>Static class that provides a variety of brushes that were designed to be used as data-grid backgrounds.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer">
      <summary>Represents a scrollable area of a DataGridControl object that can
contain other visible elements.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.FixedCellPanel">
      <summary>
        <br />
Panel used as the PART_CellsHost template part when a grid is in a table-view layout.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.FixedColumnSplitter">
      <summary>
        <para>Represents the fixed-column splitter, which delimits the fixed columns from the scrolling ones and allows new columns to be fixed or unfixed.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.GenericPrintTheme">
      <summary>Represents the classic gray-scale theme that will be used when a grid is printed or exported. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.LunaHomesteadTheme">
      <summary>Represents the Luna Homestead theme.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.LunaMetallicTheme">
      <summary>Represents the Luna Metallic theme.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.LunaNormalColorTheme">
      <summary>Represents the Luna normal-color theme.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.PassiveLayoutDecorator">
      <summary>
        <para>Represents a decorator that, for the specified axis, does not have a desired size but still lays out its child according to the size provided by its
parent.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.PrintTableView">
      <summary>Represents a <strong>printable</strong> and <strong>exportable</strong> table-view layout in which rows are laid out horizontally in a
traditional grid-like style. <!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.PrintViewBase">
      <summary>Base class that provides various layout information that applies to <strong>printable</strong> and <strong>exportable</strong> views. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.RoyaleNormalColorTheme">
      <summary>Represents the Royale normal-color theme.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewer">
      <summary>Represents a synchronized, scrollable area that can contain other visible elements.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.TableflowView">
      <summary>Represents a table-view layout in which rows are laid out horizontally as in traditional grid-like styles, but with animated smooth scrolling,
sticky group headers and sticky master-detail master row and headers, full-column animated drag and drop reordering.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.TableflowViewItemsHost">
      <summary>
        <para>Class used in DataGridControl templates as a replacement for the
<strong>ItemsPresenter</strong> when a grid is in a table-flow view layout and will contain the data items as well as the items contained in
<strong>non-fixed</strong> header and footer sections and whose containers are created from the associated <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridItemsHost~CustomItemContainerGenerator.html">CustomItemContainerGenerator</see>.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.TableView">
      <summary>Represents a table-view layout in which rows are laid out horizontally in a traditional grid-like style.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.TableViewHeaderFooterPanel">
      <summary>Represents a panel that contains the items located in the header and/or footer sections of a grid.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.TableViewItemsHost">
      <summary>
        <para>Class used in DataGridControl templates as a replacement for the
<strong>ItemsPresenter</strong> when a grid is in a table-view layout and that will contain the data items as well as the items contained in
<strong>non-fixed</strong> header and footer sections and whose containers are created from the associated <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.DataGridItemsHost~CustomItemContainerGenerator.html">CustomItemContainerGenerator</see>.</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.TableViewScrollViewer">
      <summary>Represents a scrollable area that can contain other visible elements laid out in a tableview.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.TargetViewAttribute">
      <summary>Represents an attribute that is set on a theme to identify the views to which it can be applied.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Theme">
      <summary>Base class that represents a theme that can be applied to one or more views.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.UIViewBase">
      <summary>Base class that provides various layout information that applies to all views, <strong>excluding</strong> views that are used when printing.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.ViewBase">
      <summary>Base class that provides various layout information that applies to all views, including views that are used when printing.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.ViewPropertyAttribute">
      <summary>Identifies how and if a property in a view can be accessed using a ViewBinding (see Remarks).</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.ZuneNormalColorTheme">
      <summary>Represents the Zune normal-color theme.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.AeroNormalColorTheme.#ctor">
      <summary>Initializes a new instance of the AeroNormalColorTheme
class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardBackgroundBrushes.Pebbles">
      <summary>The Pebble texture can be added to cards and is applied to their backgrounds, giving them a unique look and feel.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardBackgroundBrushes.Retro">
      <summary>The Retro texture can be added to cards and is applied to their backgrounds, giving them a unique look and feel.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardBackgroundBrushes.Sunrise">
      <summary>The Sunrise texture can be added to cards and is applied to their backgrounds, giving them a unique look and feel.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardView.AddDefaultHeadersFooters">
      <summary>Adds the default items to the header, <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.ViewBase~Footers.html">footer</see>, <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.ViewBase~FixedHeaders.html">fixed headers</see>, and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.ViewBase~FixedFooters.html">fixed footer</see> sections of a grid when it is in a card-view layout.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardView.AllowCardResize">
      <summary>Gets or sets a value indicating whether the width of the cards can be resized by the end user.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardView.CardResizeNorthSouthCursor">
      <summary>Gets or sets the image used for the mouse pointer when resizing vertically.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardView.CardResizeWestEastCursor">
      <summary>Gets or sets the image used for the mouse pointer when resizing horizontally.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardView.CardTitleBackground">
      <summary>Gets or sets the brush used to paint the background of the card titles.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardView.CardTitleForeground">
      <summary>Gets or sets the brush used to paint the foreground of the card titles.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardView.CardTitleTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to display the card titles.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardView.CardWidth">
      <summary>Gets or sets a value indicating the width of the cards.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardView.FilterCardTitleTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to display the filter card titles.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardView.HideEmptyCells">
      <summary>Gets or sets a value indicating whether cells which do not have a content should be hidden.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardView.InsertionCardTitleTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to display the insertion card titles.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardView.SeparatorLinePen">
      <summary>Gets or sets the <strong>Pen</strong> used to draw the line between a "column" of cards.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardView.StatCardTitleTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to display the statistical-result card titles. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardView.AllowCardResizeProperty">
      <summary>Identifies the AllowCardResizing dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardView.CardResizeNorthSouthCursorProperty">
      <summary>Identifies the CardResizeNorthSouthCursor dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardView.CardResizeWestEastCursorProperty">
      <summary>Identifies the CardResizeWestEastCursor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardView.CardTitleBackgroundProperty">
      <summary>Identifies the CardTitleBackground attached
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardView.CardTitleForegroundProperty">
      <summary>Identifies the CardTitleForeground attached
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardView.CardTitleTemplateProperty">
      <summary>Identifies the CardTitleTemplate attached
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardView.CardWidthProperty">
      <summary>Identifies the CardWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardView.FilterCardTitleTemplateProperty">
      <summary>Identifies the FilterCardTitleTemplate
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardView.HideEmptyCellsProperty">
      <summary>
        <para align="left">Identifies the HideEmptyCells attached
property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardView.InsertionCardTitleTemplateProperty">
      <summary>Identifies the InsertionCardTitleTemplate
attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardView.SeparatorLinePenProperty">
      <summary>Identifies the SeparatorLinePen dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardView.StatCardTitleTemplateProperty">
      <summary>Identifies the StatCardTitleTemplate attached
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of the items.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.LineDown">
      <summary>Scrolls down within content by one logical unit.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.LineLeft">
      <summary>Scrolls left within content by one logical unit.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.LineRight">
      <summary>Scrolls right within content by one logical unit.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.LineUp">
      <summary>Scrolls up within content by one logical unit.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements in anticipation of arranging them during the ArrangeOverride pass</summary>
      <returns>The <strong>Size</strong> that represents the desired size of the element.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.MouseWheelDown">
      <summary>Scrolls down within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.MouseWheelLeft">
      <summary>Scrolls left within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.MouseWheelRight">
      <summary>Scrolls right within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.MouseWheelUp">
      <summary>Scrolls up within content after a user clicks the wheel button on a mouse.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.OnRender(System.Windows.Media.DrawingContext)">
      <summary>Draws the content of a <strong>DrawingContext</strong> object during the render pass of the panel.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.PageDown">
      <summary>Scrolls down within content by one page.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.PageLeft">
      <summary>Scrolls left within content by one page.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.PageRight">
      <summary>Scrolls right within content by one page.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.PageUp">
      <summary>Scrolls up within content by one page.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.SetHorizontalOffset(System.Double)">
      <summary>Sets the amount of horizontal offset.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.SetVerticalOffset(System.Double)">
      <summary>Sets the amount of vertical offset.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.MakeVisible(System.Int32,System.Windows.Rect)">
      <summary>Forces content to scroll until the element at the specified index is visible</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>Forces content to scroll until the coordinate space of a <strong>Visual</strong> object is visible</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.AllowCardResize">
      <summary>Gets or sets a value indicating whether the width of the cards can be resized by the end user.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.CanHorizontallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.CanVerticallyScroll">
      <summary>Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.ExtentHeight">
      <summary>Gets the vertical size of the extent. <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="extent#a75b4bc2-5951-4ab6-bcf7-8225f206ed4c"><!--For controls that display content, the extent size refers to the total width and height of the content. Content controls typically expose extent width and height as properties. Contrast with a viewport, which is a mechanism used to display a particular portion of content that may be too large to fit in the available display space.--></span></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.ExtentWidth">
      <summary>Gets the horizontal size of the extent. <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="extent#a75b4bc2-5951-4ab6-bcf7-8225f206ed4c"><!--For controls that display content, the extent size refers to the total width and height of the content. Content controls typically expose extent width and height as properties. Contrast with a viewport, which is a mechanism used to display a particular portion of content that may be too large to fit in the available display space.--></span></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.FixedSize">
      <summary>Gets or sets, depending to the item layout, the fixed width or height of the items contained in the items host.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.HorizontalOffset">
      <summary>Gets the horizontal <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="offset#9fa47c66-a598-4d9b-ab6f-ddfd4225785b"><!--The horizontal and vertical offset represent the distance, in device independent pixels, that the viewport has been scrolled from its left or top side, respectively.-->offset</span>
of the scrolled content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.Orientation">
      <summary>Gets or sets a value that describes the horizontal or vertical content orientation.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.ScrollOwner">
      <summary>Gets or sets a <strong>ScrollViewer</strong> element that controls the scrolling behavior of the items host.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.SeparatorLinePen">
      <summary>Gets or sets the <strong>Pen</strong> used to draw the separator lines.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.VerticalOffset">
      <summary>Gets the vertical <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="offset#9fa47c66-a598-4d9b-ab6f-ddfd4225785b">offset</span> of the scrolled content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.ViewportHeight">
      <summary>Gets the vertical size of the viewport for this content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.ViewportWidth">
      <summary>Gets the horizontal size of the viewport for this content.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.AllowCardResizeProperty">
      <summary>Identifies the AllowCardResize dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.FixedSizeProperty">
      <summary>Identifies the FixedSize dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.OrientationProperty">
      <summary>Identifies the Orientation dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.CardViewItemsHost.SeparatorLinePenProperty">
      <summary>Identifies the SeparatorLinePen dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.ClassicSystemColorTheme.#ctor">
      <summary>Initializes a new instance of the ClassicSystemColorTheme class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.CompactCardView.#ctor">
      <summary>Initializes a new instance of the CompactCardView class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.AuroraBlue">
      <summary>
        <para>Evoking the dancing light shows of Earth’s polar zones, the Aurora Blue background provides a bright display of color to your application.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.AuroraPink">
      <summary>
        <para>Evoking the dancing light shows of Earth’s polar zones, the Aurora Pink background provides a bright display of color to your application.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.AuroraRed">
      <summary>
        <para>Evoking the dancing light shows of Earth’s polar zones, the Aurora Red background provides a bright display of color to your application.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.ElementalBlack">
      <summary>Designed for the black Elemental and Office 2007 themes, this simple yet classy background subtly adds the black color-scheme of Office 2007 to
your datagrid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.ElementalBlue">
      <summary>Designed for the blue Elemental and Office 2007 themes, this simple yet classy background subtly adds the blue color-scheme of Office 2007 to
your datagrid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.ElementalSilver">
      <summary>Designed for the silver Elemental and Office 2007 themes, this simple yet classy background subtly adds the silver color-scheme of Office 2007 to
your datagrid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.HorizonBlue">
      <summary>You can see further with Xceed DataGrid for WPF, and this blue horizon background will inspire your end-users to do the same</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.HorizonOrange">
      <summary>You can see further with Xceed DataGrid for WPF, and this orange horizon background will inspire your end-users to do the same</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.NightFog">
      <summary>Add some mysterious nighttime mist to your application with this evocative background.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.SunBlack">
      <summary>
        <para>Bring a ray of sunshine into the end-user experience using this not-so-bright and cheery black background.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.SunBlue">
      <summary>
        <para>Bring a ray of sunshine into the end-user experience using this bright and cheery blue background.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.SunOrange">
      <summary>
        <para>Bring a ray of sunshine into the end-user experience using this bright and cheery orange background.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.Sunrise">
      <summary>Greet your end-users with the sunrise of a new day (or a sunset if they’re working late) when you decorate your application with the yellow
Sunrise background.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridControlBackgroundBrushes.SunriseBlue">
      <summary>Greet your end-users with the sunrise of a new day (or a sunset if they’re working late) when you decorate your application with the blue Sunrise
background.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer.GetSynchronizedScrollViewerPosition(System.Windows.DependencyObject)">
      <summary>Gets the value of the <strong>SynchronizedScrollViewerPosition</strong> attached property for the specified dependency object (see Remarks).</summary>
      <returns>
        <para>The SynchronizeScrollViewerPosition value for the
dependency object.</para>
        <para></para>
        <list class="FilteredItemListTable" type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term class="MemberNameCell">
              <strong>Top</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is scrolled to the top indicating that navigation in the fixed header or footer sections is
            permitted.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Bottom</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is scrolled to the bottom indicating that navigation in the fixed header or footer sections is
            permitted.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Left</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is scrolled to the left indicating that navigation in the fixed header or footer sections is
            permitted.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Right</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is scrolled to the right indicating that navigation in the fixed header or footer sections is
            permitted.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>None</strong>
            </term>
            <description class="DescriptionCell">The SynchronizedScrollViewer is not scrolled to one of its extremities indicating that navigation in the fixed header or footer
            sections is not permitted.</description>
          </item>
        </list>
        <para></para>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
      <summary>Called when a change in scrolling state is detected, such as a change in scroll position, <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="extent#a75b4bc2-5951-4ab6-bcf7-8225f206ed4c"><!--For controls that display content, the extent size refers to the total width and height of the content. Content controls typically expose extent width and height as properties. Contrast with a viewport, which is a mechanism used to display a particular portion of content that may be too large to fit in the available display space.-->extent</span>,
or <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="viewport#15796c1c-52cd-4281-ab4c-c67cc4298c11"><!--For controls that display content, the viewport is a virtual window through which all or part of the content is visible. A viewport is typically used to display a particular portion of content when all of the content will not fit in the available display space. Compare to the extent size, which is the total width and height of the content.-->viewport</span>
size.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer.SetSynchronizedScrollViewerPosition(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewerPosition)">
      <summary>Sets the value of the <strong>SynchronizedScrollViewerPosition</strong> attached property to the specified dependency object (see Remarks).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer.HorizontalScrollBar">
      <summary>Gets the scroll viewer's horizontal scroll bar.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer.VerticalScrollBar">
      <summary>Gets the scroll viewer's vertical scroll bar.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.DataGridScrollViewer.SynchronizedScrollViewerPositionProperty">
      <summary>Identifies the <strong>SynchronizedScrollViewerPosition</strong> attached property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.FixedCellPanel.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the child elements of this panel.</summary>
      <returns>The <strong>Size</strong> that represents the arranged size of the panel.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.FixedCellPanel.CreateUIElementCollection(System.Windows.FrameworkElement)">
      <summary>Creates a new <strong>UIElementCollection</strong>.</summary>
      <returns>An ordered collection of elements that have the specified logical parent.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.FixedCellPanel.GetVisualChild(System.Int32)">
      <summary>Gets a <strong>Visual</strong> child of this panel at the specified index.</summary>
      <returns>A <strong>Visual</strong> child of the parent <strong>Panel</strong> element.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.FixedCellPanel.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements in anticipation of arranging them during the ArrangeOverride pass.</summary>
      <returns>The <strong>Size</strong> that represents the desired size of the element.</returns>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.ColumnStretchMinWidth">
      <summary>
        <para>Gets or sets the minimum width that a column in stretch mode can have.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.ColumnStretchMode">
      <summary>
        <para>Gets or sets a value that indicates which columns are in stretch mode.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.FixedCellCount">
      <summary>Gets or sets the number of cells that are fixed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.FixedColumnDropMarkPen">
      <summary>Gets or sets the <strong>Pen</strong> used to draw the fixed-column drop-mark.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.LogicalChildren">
      <summary>Gets an enumerator that can iterate the logical child elements of this panel.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.ShowSplitter">
      <summary>Gets or sets a value indicating whether the fixed-column splitter is shown when a grid is in a table-view layout.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.SplitterStyle">
      <summary>Gets or sets the style to apply to the fixed-column splitter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.SplitterWidth">
      <summary>Gets or sets the width of the fixed-column splitter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.FixedCellPanel.VisualChildrenCount">
      <summary>Gets the number of child <strong>Visual</strong> objects in this panel instance.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.FixedCellPanel.ColumnStretchMinWidthProperty">
      <summary>Identifies the ColumnStretchMinWidth
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.FixedCellPanel.ColumnStretchModeProperty">
      <summary>Identifies the ColumnStretchMode dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.FixedCellPanel.FixedCellCountProperty">
      <summary>Identifies the FixedCellCount dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.FixedCellPanel.FixedColumnDropMarkPenProperty">
      <summary>Identifies the FixedColumnDropMarkPen
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.FixedCellPanel.ShowSplitterProperty">
      <summary>Identifies the ShowSplitter dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.FixedCellPanel.SplitterStyleProperty">
      <summary>Identifies the SplitterStyle dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.FixedCellPanel.SplitterWidthProperty">
      <summary>Identifies the SplitterWidth dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.GenericPrintTheme.#ctor">
      <summary>Initializes a new instance of the <strong>GenericPrintTheme</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.LunaHomesteadTheme.#ctor">
      <summary>Initializes a new instance of the LunaHomesteadTheme
class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.LunaMetallicTheme.#ctor">
      <summary>Initializes a new instance of the LunaMetallicTheme class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.LunaNormalColorTheme.#ctor">
      <summary>Initializes a new instance of the LunaNormalColorTheme
class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PassiveLayoutDecorator.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child element in anticipation of arranging it during the <strong>ArrangeOverride</strong> pass.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PassiveLayoutDecorator.Axis">
      <summary>Gets or sets a value that determines the axis on which the <strong>PassiveLayoutDecorator</strong> will be passive (see Remarks).</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PassiveLayoutDecorator.AxisProperty">
      <summary>Identifies the Axis dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.AddDefaultHeadersFooters">
      <summary>Adds the default items to the header, <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.ViewBase~Footers.html">footer</see>, <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.ViewBase~FixedHeaders.html">fixed headers</see>, and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.ViewBase~FixedFooters.html">fixed footer</see> sections of a grid.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.GetCanSpanHorizontally(System.Windows.DependencyObject)">
      <summary>
        <para>Gets the value of the <strong>CanSpanHorizontally</strong> attached property for the specified dependency object.</para>
        <!--DXMETADATA end -->
        <!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="%%comment%%" -->
        <!--DXMETADATA end -->
        <!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="method" source="Item" filter="" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=overloadlist,caption=$$OverloadList$$%%%%filtereditemlist%%</div>" -->
        <!--DXMETADATA end -->
        <!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%" -->
      </summary>
      <returns>The <strong>boolean</strong> property value for the dependency object.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.GetFixedColumnCount(System.Windows.DependencyObject)">
      <summary>Gets the number of columns that are to be repeated on each page when a grid is printed or exported.</summary>
      <returns>A value representing the number of columns that are to be repeated on each page when a grid is printed or exported. By default, 0.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.GetFixedColumnSplitterStyle(System.Windows.DependencyObject)">
      <summary>Gets the style to apply to the fixed-column splitter for the item to which the property is attached.</summary>
      <returns>A <strong>Style</strong> representing the style to apply to the fixed-column splitter for the item to which the property is attached.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.GetFixedColumnSplitterWidth(System.Windows.DependencyObject)">
      <summary>Gets the width of the fixed-column splitter.</summary>
      <returns>A value representing the width of the fixed-column splitter.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.GetGroupLevelIndicatorWidth(System.Windows.DependencyObject)">
      <summary>Gets the width of the group-level indicators when a grid is in a printable or exportable table-view layout.</summary>
      <returns>A value indicating the width of the group-level indicators when a grid is in a printable or exportable table-view layout</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.GetHorizontalGridLineBrush(System.Windows.DependencyObject)">
      <summary>Gets the <strong>Brush</strong> used to paint the horizontal grid lines when a grid is in a printable or exportable table-view layout.
<!--DXMETADATA end --></summary>
      <returns>The <strong>Brush</strong> used to paint the horizontal grid lines when a grid is in a printable or exportable table-view layout.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.GetHorizontalGridLineThickness(System.Windows.DependencyObject)">
      <summary>Gets a value indicating the thickness of the horizontal grid lines when a grid is in a printable or exportable table-view layout.
<!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="!UNRECOGNISED ELEMENT TYPE 'comment'!" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="property" source="Item" filter="" format="<h1 class="heading"><span class="expandcollapse" tabindex="0"><img id="overloadlistToggle" class="toggle" name="toggleSwitch" src="dotnetimages/collapse.gif"></img>Overload List</span></h1><div id="overloadlistSection" class="section" name="collapseableSection">!UNRECOGNISED ELEMENT TYPE 'filtereditemlist'!</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="<h1 class="heading"><span class="expandcollapse" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="dotnetimages/collapse.gif"></img>Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection">!UNRECOGNISED ELEMENT TYPE 'FilteredItemList'!" --></summary>
      <returns>A value indicating the thickness of the horizontal grid lines when a grid is in a printable or exportable table-view layout.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.GetShowFixedColumnSplitter(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the fixed-column splitter is shown when a grid is printed or exported.</summary>
      <returns>
        <strong>true</strong> if the fixed-column splitter is shown when a grid is printed or exported; <strong>false</strong> otherwise. By default,
<strong>false</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.GetVerticalGridLineBrush(System.Windows.DependencyObject)">
      <summary>Gets the <strong>Brush</strong> used to paint the vertical grid lines when a grid is in a printable or exportable table-view layout.
<!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="!UNRECOGNISED ELEMENT TYPE 'comment'!" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="property" source="Item" filter="" format="<h1 class="heading"><span class="expandcollapse" tabindex="0"><img id="overloadlistToggle" class="toggle" name="toggleSwitch" src="dotnetimages/collapse.gif"></img>Overload List</span></h1><div id="overloadlistSection" class="section" name="collapseableSection">!UNRECOGNISED ELEMENT TYPE 'filtereditemlist'!</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="<h1 class="heading"><span class="expandcollapse" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="dotnetimages/collapse.gif"></img>Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection">!UNRECOGNISED ELEMENT TYPE 'FilteredItemList'!" --></summary>
      <returns>The <strong>Brush</strong> used to paint the vertical grid lines when a grid is in a printable or exportable table-view layout.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.GetVerticalGridLineThickness(System.Windows.DependencyObject)">
      <summary>Gets a value indicating the thickness of the vertical grid lines when a grid is in a printable or exportable table-view layout.</summary>
      <returns>A value indicating the thickness of the vertical grid lines when a grid is in a printable or exportable table-view layout.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.SetCanSpanHorizontally(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <strong>CanSpanHorizontally</strong> attached property to the specified dependency object.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.SetFixedColumnCount(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the number of columns that are to be repeated on each page when a grid is printed or exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.SetFixedColumnSplitterStyle(System.Windows.DependencyObject,System.Windows.Style)">
      <summary>Sets the style to apply to the fixed-column splitter for the item to which the property is attached.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.SetFixedColumnSplitterWidth(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the width of the fixed-column splitter.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.SetGroupLevelIndicatorWidth(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the width of the group-level indicators when a grid is in a printable or exportable table-view layout.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.SetHorizontalGridLineBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>Sets the <strong>Brush</strong> used to paint the horizontal grid lines when a grid is in a printable or exportable table-view layout.
<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.SetHorizontalGridLineThickness(System.Windows.DependencyObject,System.Double)">
      <summary>Sets a value indicating the thickness of the horizontal grid lines when a grid is in a printable or exportable table-view layout.
<!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="!UNRECOGNISED ELEMENT TYPE 'comment'!" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="property" source="Item" filter="" format="<h1 class="heading"><span class="expandcollapse" tabindex="0"><img id="overloadlistToggle" class="toggle" name="toggleSwitch" src="dotnetimages/collapse.gif"></img>Overload List</span></h1><div id="overloadlistSection" class="section" name="collapseableSection">!UNRECOGNISED ELEMENT TYPE 'filtereditemlist'!</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="<h1 class="heading"><span class="expandcollapse" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="dotnetimages/collapse.gif"></img>Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection">!UNRECOGNISED ELEMENT TYPE 'FilteredItemList'!" --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.SetShowFixedColumnSplitter(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the fixed-column splitter is shown when a grid is printed or exported.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.SetVerticalGridLineBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>Sets the <strong>Brush</strong> used to paint the vertical grid lines when a grid is in a printable or exportable table-view layout.
<!--DXMETADATA end --></summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.PrintTableView.SetVerticalGridLineThickness(System.Windows.DependencyObject,System.Double)">
      <summary>Sets a value indicating the thickness of the vertical grid lines when a grid is in a printable or exportable table-view layout.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintTableView.FixedColumnCount">
      <summary>Gets or sets the number of columns that are to be repeated on each page when a grid is printed or exported.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintTableView.FixedColumnSplitterWidth">
      <summary>Gets or sets the width of the fixed-column splitter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintTableView.GroupLevelIndicatorWidth">
      <summary>Gets or sets the width of the group-level indicators when a grid is in a printable or exportable table-view layout.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintTableView.HorizontalGridLineBrush">
      <summary>Gets or sets the <strong>Brush</strong> used to paint the horizontal grid lines when a grid is in a printable or exportable table-view layout.
<!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="%%comment%%" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="property" source="Item" filter="" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=overloadlist,caption=$$OverloadList$$%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%" --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintTableView.HorizontalGridLineThickness">
      <summary>Gets or sets a value indicating the thickness of the horizontal grid lines when a grid is in a printable or exportable table-view layout.
<!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="%%comment%%" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="property" source="Item" filter="" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=overloadlist,caption=$$OverloadList$$%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%" --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintTableView.ShowFixedColumnSplitter">
      <summary>Gets or sets a value indicating whether the fixed-column splitter is shown when a grid is printed or exported.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintTableView.VerticalGridLineBrush">
      <summary>Gets or sets the <strong>Brush</strong> used to paint the vertical grid lines when a grid is in a printable or exportable table-view layout.
<!--DXMETADATA end --><!--DXMETADATA start type="TaggedComment" source="Item" id="##OVERLOADS" format="%%comment%%" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="OVERLOAD_LIST" namespace="property" source="Item" filter="" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=overloadlist,caption=$$OverloadList$$%%%%filtereditemlist%%</div>" --><!--DXMETADATA end --><!--DXMETADATA start type="FilteredItemList" scrap="SYNTAX" namespace="language" filter="type=all" NoHeader="True" NoFooter="True" format="%%scrap:name=_COLLAPSIBLE_HEADER,idprefix=syntax,caption=$$Syntax$$%%%%FilteredItemList%%" --></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintTableView.VerticalGridLineThickness">
      <summary>Gets or sets a value indicating the thickness of the vertical grid lines when a grid is in a printable or exportable table-view layout.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintTableView.CanSpanHorizontallyProperty">
      <summary>Identifies the <strong>CanSpanHorizontally</strong> attached property</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintTableView.DetailIndicatorWidthProperty">
      <summary>Identifies the DetailIndicatorWidth
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintTableView.FixedColumnCountProperty">
      <summary>Identifies the FixedColumnCount dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintTableView.FixedColumnSplitterStyleProperty">
      <summary>Identifies the <strong>FixedColumnSplitterStyle</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintTableView.FixedColumnSplitterWidthProperty">
      <summary>Identifies the FixedColumnSplitterWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintTableView.GroupLevelIndicatorWidthProperty">
      <summary>Identifies the GroupLevelIndicatorWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintTableView.HorizontalGridLineBrushProperty">
      <summary>Identifies the HorizontalGridLineBrush
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintTableView.HorizontalGridLineThicknessProperty">
      <summary>Identifies the HorizontalGridLineThickness dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintTableView.IsAlternatingRowStyleEnabledProperty">
      <summary>Identifies the IsAlternatingRowStyleEnabled dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintTableView.ShowFixedColumnSplitterProperty">
      <summary>Identifies the ShowFixedColumnSplitter
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintTableView.VerticalGridLineBrushProperty">
      <summary>Identifies the VerticalGridLineBrush
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintTableView.VerticalGridLineThicknessProperty">
      <summary>Identifies the VerticalGridLineThickness dependency property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintViewBase.CurrentPageNumber">
      <summary>Gets the current page number.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintViewBase.IsPrintingFirstPage">
      <summary>Gets a value indicating whether the first page is being printed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintViewBase.IsPrintingLastPage">
      <summary>Gets a value indicating whether the last page is being printed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintViewBase.PageFooters">
      <summary>Gets a collection of <strong>DataTemplates</strong> that represents the elements that will be printed in the footers of each page.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintViewBase.PageHeaders">
      <summary>Gets a collection of <strong>DataTemplates</strong> that represents the elements that will be printed in the headers of each page.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintViewBase.PagePrintOrder">
      <summary>Gets or sets a value representing the order in which the pages are printed (see Remarks).</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintViewBase.PageStyle">
      <summary>Gets or sets the style that defines the appearance of each page.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintViewBase.ProgressWindowContentTemplate">
      <summary>Gets or sets the template that will be used to display the progress window's content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintViewBase.ProgressWindowDescription">
      <summary>Gets or sets the progress description displayed in the progress window.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintViewBase.ProgressWindowStyle">
      <summary>Gets or sets the style that will be used by the progress window.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.PrintViewBase.ProgressWindowTitle">
      <summary>
        <para>Gets or sets the text displayed in the progress window's title.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintViewBase.CurrentPageNumberProperty">
      <summary>Identifies the CurrentPageNumber dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintViewBase.IsPrintingFirstPageProperty">
      <summary>Identifies the IsPrintingFirstPage
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintViewBase.IsPrintingLastPageProperty">
      <summary>Identifies the IsPrintingLastPage dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintViewBase.PageFootersProperty">
      <summary>Identifies the PageFooters dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintViewBase.PageHeadersProperty">
      <summary>Identifies the PageHeaders dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintViewBase.PagePrintOrderProperty">
      <summary>Identifies the PagePrintOrder dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintViewBase.PageStyleProperty">
      <summary>Identifies the PageStyle dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintViewBase.ProgressWindowContentTemplateProperty">
      <summary>Identifies the ProgressWindowContentTemplate dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintViewBase.ProgressWindowDescriptionProperty">
      <summary>Identifies the ProgressWindowDescription dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintViewBase.ProgressWindowStyleProperty">
      <summary>Identifies the ProgressWindowStyle
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.PrintViewBase.ProgressWindowTitleProperty">
      <summary>Identifies the ProgressWindowTitle
dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.RoyaleNormalColorTheme.#ctor">
      <summary>Initializes a new instance of the RoyaleNormalColorTheme class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewer.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
      <summary>Called when a change in scrolling state is detected, such as a change in scroll position, <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="extent#a75b4bc2-5951-4ab6-bcf7-8225f206ed4c"><!--For controls that display content, the extent size refers to the total width and height of the content. Content controls typically expose extent width and height as properties. Contrast with a viewport, which is a mechanism used to display a particular portion of content that may be too large to fit in the available display space.-->extent</span>,
or <span class="clsGlossary" onmouseover="showDef()" onmouseout="clearDef()" g_rid="viewport#15796c1c-52cd-4281-ab4c-c67cc4298c11"><!--For controls that display content, the viewport is a virtual window through which all or part of the content is visible. A viewport is typically used to display a particular portion of content when all of the content will not fit in the available display space. Compare to the extent size, which is the total width and height of the content.-->viewport</span>
size.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewer.ScrollOrientation">
      <summary>Gets or sets the scroll orientation of the <strong>SynchronizedScrollViewer</strong>.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.SynchronizedScrollViewer.ScrollOrientationProperty">
      <summary>Identifies the ScrollOrientation
dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetAreColumnsBeingReordered(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the columns are being reordered.</summary>
      <returns>
        <strong>true</strong> if the columns are being reordered; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetAreFootersSticky(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether footers are sticky.</summary>
      <returns>
        <strong>true</strong> if footers are sticky; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetAreGroupFootersSticky(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether group footers are sticky.</summary>
      <returns>
        <strong>true</strong> if group footers are sticky; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetAreGroupHeadersSticky(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether group headers are sticky.</summary>
      <returns>
        <strong>true</strong> if group headers are sticky; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetAreGroupsFlattened(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether groups are flattened.</summary>
      <returns>
        <strong>true</strong> if groups are flattened; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetAreHeadersSticky(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether headers are sticky.</summary>
      <returns>
        <strong>true</strong> if headers are sticky; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetAreParentRowsSticky(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether parent rows are sticky.</summary>
      <returns>
        <strong>true</strong> if parent rows are sticky; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetContainerHeight(System.Windows.DependencyObject)">
      <summary>Gets the container height.</summary>
      <returns>A value representing the container height.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetIsDeferredLoadingEnabled(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the data rows' actual DataContexts should be assigned immediately.</summary>
      <returns>
        <strong>true</strong> the data rows' actual DataContexts should be assigned immediately; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetRowFadeInAnimationDuration(System.Windows.DependencyObject)">
      <summary>Gets a value indicating the duration of the fade-in animation when the background of the scroll bar is clicked.</summary>
      <returns>A double value indicating the duration of the fade-in animation when the background of the scroll bar is clicked. By default, 300d.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.GetScrollingAnimationDuration(System.Windows.DependencyObject)">
      <summary>Gets a value indicating the duration of the scrolling animation when the background of the scroll bar is clicked.</summary>
      <returns>A double value indicating the duration of the scrolling animation when the background of the scroll bar is clicked. By default, 750d.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetAreFootersSticky(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether footers are sticky.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetAreGroupFootersSticky(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether group footers are sticky.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetAreGroupHeadersSticky(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether group headers are sticky.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetAreGroupsFlattened(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether groups are flattened.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetAreHeadersSticky(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether headers are sticky.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetAreParentRowsSticky(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether parent rows are sticky.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetContainerHeight(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the container height.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetIsDeferredLoadingEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the data rows' actual DataContexts should be assigned immediately.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetRowFadeInAnimationDuration(System.Windows.DependencyObject,System.Double)">
      <summary>Sets a value indicating the duration of the fade-in animation when the background of the scroll bar is clicked.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowView.SetScrollingAnimationDuration(System.Windows.DependencyObject,System.Double)">
      <summary>Sets a value indicating the duration of the scrolling animation when the background of the scroll bar is clicked.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.AreFootersSticky">
      <summary>Gets or sets a value indicating whether the view's footers are sticky.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.AreGroupFootersSticky">
      <summary>Gets or sets a value indicating whether the view's group footers are sticky.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.AreGroupHeadersSticky">
      <summary>Gets or sets a value indicating whether the view's group headers are sticky.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.AreGroupsFlattened">
      <summary>Gets or sets a value indicating whether the view's groups are flattened.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.AreHeadersSticky">
      <summary>Gets or sets a value indicating whether the view's headers are sticky.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.AreParentRowsSticky">
      <summary>Gets or sets a value indicating whether the view's parent rows are sticky.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.ContainerHeight">
      <summary>Gets or sets the height of all containers in the ItemsHost.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.IsAnimatedColumnReorderingEnabled">
      <summary>Gets or sets a value indicating whether columns are animated as they are moved.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.IsDeferredLoadingEnabled">
      <summary>Gets or sets a value indicating whether the data rows' actual DataContexts should be assigned immediately.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.RowFadeInAnimationDuration">
      <summary>Gets or sets a value indicating the duration of the fade-in animation when the background of the scroll bar is clicked.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableflowView.ScrollingAnimationDuration">
      <summary>Gets or sets a value indicating the duration of the scrolling animation when the background of the scroll bar is clicked.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.AreColumnsBeingReorderedProperty">
      <summary>Identifies the AreColumnsBeingReordered attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.AreFootersStickyProperty">
      <summary>Identifies the AreFootersSticky dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.AreGroupFootersStickyProperty">
      <summary>Identifies the AreGroupFootersSticky
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.AreGroupHeadersStickyProperty">
      <summary>Identifies the AreGroupHeadersSticky
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.AreGroupsFlattenedProperty">
      <summary>Identifies the AreGroupsFlattened dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.AreHeadersStickyProperty">
      <summary>Identifies the AreHeadersSticky dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.AreParentRowsStickyProperty">
      <summary>Identifies the AreParentRowsSticky
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.ContainerHeightProperty">
      <summary>Identifies the ContainerHeight dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.IsAnimatedColumnReorderingEnabledProperty">
      <summary>Identifies the IsAnimatedColumnReorderingEnabled dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.IsDeferredLoadingEnabledProperty">
      <summary>Identifies the IsDeferredLoadingEnabled dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.RowFadeInAnimationDurationProperty">
      <summary>Identifies the RowFadeInAnimationDuration dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableflowView.ScrollingAnimationDurationProperty">
      <summary>Identifies the ScrollingAnimationDuration dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowViewItemsHost.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of the items.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowViewItemsHost.CreateChildCollection">
      <summary>Creates an empty list of <strong>UIElements</strong> that will contain the containers that are generated for data items and items contained in
non-fixed header and footer sections.</summary>
      <returns>An empty <strong>IList&lt;UIElement</strong>&gt; collection that will contain the containers that are generated for data items and items
contained in the non-fixed header and footer sections.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableflowViewItemsHost.MeasureOverride(System.Windows.Size)">
      <summary>Arranges the contents of <strong>TableflowViewItemsHost</strong>.</summary>
      <returns>The size of the <strong>TableflowViewItemsHost</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.#ctor">
      <summary>Initializes a new instance of the TableView class.<br />
Initializes a new instance of the TableView class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.AddDefaultHeadersFooters">
      <summary>Adds the default items to the header, <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.ViewBase~Footers.html">footer</see>, <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.ViewBase~FixedHeaders.html">fixed headers</see>, and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.ViewBase~FixedFooters.html">fixed footer</see> sections of a grid when it is in a table-view layout.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetAutoScrollInterval(System.Windows.DependencyObject)">
      <summary>Gets the auto scroll interval.</summary>
      <returns>A value representing the auto scroll interval.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetCanScrollHorizontally(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the item to which the property is attached can scroll with the content of a grid.</summary>
      <returns>
        <strong>true</strong> if the item can scroll with the content of a grid; <strong>false</strong> otherwise (the item will stay fix).</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetColumnStretchMinWidth(System.Windows.DependencyObject)">
      <summary>Gets the minimum width that a column in stretch mode can have.</summary>
      <returns>A value representing the minimum width that a column in stretch mode can have. By default, 50d.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetColumnStretchMode(System.Windows.DependencyObject)">
      <summary>
        <para>Gets a value that indicates which columns are in stretch mode.</para>
      </summary>
      <returns>
        <para>A ColumnStretchMode value indicating
which columns are in stretch mode. By default, <strong>None</strong>.</para>
        <para></para>
        <list class="FilteredItemListTable" type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term class="MemberNameCell">
              <strong>None</strong>
            </term>
            <description class="DescriptionCell">The widths of the columns are not stretched.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>First</strong>
            </term>
            <description class="DescriptionCell">Only the width of the first column is stretched.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>Last</strong>
            </term>
            <description class="DescriptionCell">Only the width of the last column is stretched.</description>
          </item>
          <item>
            <term class="MemberNameCell">
              <strong>All</strong>
            </term>
            <description class="DescriptionCell">The widths of all the columns are stretched so that they evenly occupy the available space.</description>
          </item>
        </list>
        <para></para>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetDetailIndicatorWidth(System.Windows.DependencyObject)">
      <summary>
        <para>Gets the width of the DetailIndicators when a
grid is in table-view.</para>
      </summary>
      <returns>
        <para>A value indicating the width of the DetailIndicators when a grid is in table-view. By default, <strong>double.NaN</strong>.</para>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetFixedColumnCount(System.Windows.DependencyObject)">
      <summary>Gets the number of columns that are fixed.</summary>
      <returns>A value representing the number of columns that are fixed. By default, 0.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetFixedColumnDropMarkPen(System.Windows.DependencyObject)">
      <summary>Gets the <strong>Pen</strong> used to draw the fixed-column drop-mark.</summary>
      <returns>The <strong>Pen</strong> used to draw the fixed-column drop-mark.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetFixedColumnSplitterStyle(System.Windows.DependencyObject)">
      <summary>Gets the style to apply to the fixed-column splitter for the item to which the property is attached.</summary>
      <returns>A <strong>Style</strong> representing the style to apply to the fixed-column splitter for the item to which the property is attached.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetFixedColumnSplitterWidth(System.Windows.DependencyObject)">
      <summary>Gets the width of the fixed-column splitter</summary>
      <returns>A value representing the width of the fixed-column splitter, for all splitters created by a fixed-cell panel .</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetGroupLevelIndicatorWidth(System.Windows.DependencyObject)">
      <summary>Gets the width of the GroupLevelIndicators when a grid is in table-view.</summary>
      <returns>A value indicating the width of the GroupLevelIndicators when a grid is in table-view. By default, <strong>double.NaN</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetHorizontalGridLineBrush(System.Windows.DependencyObject)">
      <summary>Gets the <strong>Brush</strong> used to paint the horizontal grid lines.</summary>
      <returns>The <strong>Brush</strong> used to paint the horizontal grid lines. By default, $$NULL$$.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetHorizontalGridLineThickness(System.Windows.DependencyObject)">
      <summary>Gets a value indicating the thickness of the horizontal grid lines.</summary>
      <returns>A value indicating the thickness of the horizontal grid lines. By default, <strong>double.NaN</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetIsAlternatingRowStyleEnabled(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether an alternate style is applied to every other row.</summary>
      <returns>
        <strong>true</strong> if an alternate style is applied to every other row; <strong>false</strong> otherwise. The default value of this property
is usually <strong>false</strong>; however, for some themes, alternate row styles may be enabled by default.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetIsColumnVirtualizationEnabled(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether column virtualization is enabled.</summary>
      <returns>
        <strong>true</strong> if column virtualization is enabled; <strong>false</strong> otherwise. By default, <strong>true</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetRemoveColumnStretchingOnResize(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether column stretching is removed when columns are resized.</summary>
      <returns>
        <strong>true</strong> if column stretching is removed when columns are resized; <strong>false</strong> otherwise. By default,
<strong>false</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetShowFixedColumnSplitter(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the fixed-column splitter is shown when a grid is in a table-view layout.</summary>
      <returns>
        <strong>true</strong> if the fixed-column splitter is shown; <strong>false</strong> otherwise. By default, <strong>true</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetVerticalGridLineBrush(System.Windows.DependencyObject)">
      <summary>Gets the <strong>Brush</strong> used to paint the vertical grid lines.</summary>
      <returns>The <strong>Brush</strong> used to paint the vertical grid lines. By default, $$NULL$$.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.GetVerticalGridLineThickness(System.Windows.DependencyObject)">
      <summary>Gets a value indicating the thickness of the vertical grid lines.</summary>
      <returns>A value indicating the thickness of the vertical grid lines. By default, <strong>double.NaN</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetAutoScrollInterval(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets the auto scroll interval.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetCanScrollHorizontally(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the item to which the property is attached can scroll with the content of a grid.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetColumnStretchMinWidth(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the minimum width that a column in stretch mode can have.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetColumnStretchMode(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.ColumnStretchMode)">
      <summary>
        <para>Sets a value that indicates which columns are in stretch mode.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetDetailIndicatorWidth(System.Windows.DependencyObject,System.Double)">
      <summary>
        <para>Sets the width of the DetailIndicators when a
grid is in table-view.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetFixedColumnCount(System.Windows.DependencyObject,System.Int32)">
      <summary>Sets a value indicating the thickness of the vertical grid lines.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetFixedColumnDropMarkPen(System.Windows.DependencyObject,System.Windows.Media.Pen)">
      <summary>Sets the <strong>Pen</strong> used to draw the fixed-column drop-mark.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetFixedColumnSplitterStyle(System.Windows.DependencyObject,System.Windows.Style)">
      <summary>Sets the style to apply to the fixed-column splitter for the item to which the property is attached.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetFixedColumnSplitterWidth(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the width of the fixed-column splitter.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetGroupLevelIndicatorWidth(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the width of the GroupLevelIndicators when a grid is in table-view.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetHorizontalGridLineBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>Sets the <strong>Brush</strong> used to paint the horizontal grid lines.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetHorizontalGridLineThickness(System.Windows.DependencyObject,System.Double)">
      <summary>Sets a value indicating the thickness of the horizontal grid lines.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetIsAlternatingRowStyleEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether an alternate style is applied to every other row.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetIsColumnVirtualizationEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether column virtualization is enabled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetRemoveColumnStretchingOnResize(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether column stretching is removed when columns are resized.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetShowFixedColumnSplitter(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the fixed-column splitter is shown when a grid is in a table-view layout.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetVerticalGridLineBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>Sets the <strong>Brush</strong> used to paint the vertical grid lines.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableView.SetVerticalGridLineThickness(System.Windows.DependencyObject,System.Double)">
      <summary>Sets a value indicating the thickness of the vertical grid lines.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.AllowRowResize">
      <summary>Gets or sets a value indicating whether rows can be resized through the row selector pane.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.DetailIndicatorWidth">
      <summary>Gets or sets the width of the DetailIndicators when a grid is in
table-view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.FixedColumnCount">
      <summary>Gets or sets the number of columns that are fixed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.FixedColumnDropMarkPen">
      <summary>Gets or sets the <strong>Pen</strong> used to draw the fixed-column drop-mark.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.FixedColumnSplitterDraggedCursor">
      <summary>Gets or sets the image used for the mouse pointer when dragging the fixed column splitter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.FixedColumnSplitterWidth">
      <summary>Gets or sets the width of the fixed-column splitter.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.GroupLevelIndicatorWidth">
      <summary>Gets or sets the width of the GroupLevelIndicators when a grid
is in table-view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.HorizontalGridLineBrush">
      <summary>Gets or sets the <strong>Brush</strong> used to paint the horizontal grid lines.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.HorizontalGridLineThickness">
      <summary>Gets or sets a value indicating the thickness of the horizontal grid lines.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.IsAlternatingRowStyleEnabled">
      <summary>Gets or sets a value indicating whether an alternate style is applied to every other row.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.IsColumnVirtualizationEnabled">
      <summary>Gets or sets a value indicating whether column virtualization is enabled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.RemoveColumnStretchingOnResize">
      <summary>Gets or sets a value indicating whether column stretching is removed when columns are resized.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.RowSelectorPaneWidth">
      <summary>Gets or sets the width of the row-selector pane.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.RowSelectorResizeNorthSouthCursor">
      <summary>Gets or sets the image used for the mouse pointer when the RowSelector is used to resize a Row in TableView when the
Orientation property of the
<see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.TableViewItemsHost">TableViewItemsHost</see> is <strong>Orientation.Vertical</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.RowSelectorResizeWestEastCursor">
      <summary>Gets or sets the image used for the mouse pointer when the RowSelector is used to resize a Row in TableView when the
Orientation property of the
<see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.TableViewItemsHost">TableViewItemsHost</see> is <strong>Orientation.Horizontal</strong>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.ShowFixedColumnSplitter">
      <summary>Gets or sets a value indicating whether the fixed-column splitter is shown when a grid is in a table-view layout.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.ShowRowSelectorPane">
      <summary>Gets or sets a value indicating whether the RowSelectorPane is
visible.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.VerticalGridLineBrush">
      <summary>Gets or sets the <strong>Brush</strong> used to paint the vertical grid lines.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableView.VerticalGridLineThickness">
      <summary>Gets or sets a value indicating the thickness of the vertical grid lines.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.AllowRowResizeProperty">
      <summary>Identifies the AllowRowResize dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.AutoScrollIntervalProperty">
      <summary>Identifies the <strong>AutoScrollInterval</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.CanScrollHorizontallyProperty">
      <summary>Identifies the <strong>CanScrollHorizontally</strong> attached property</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.ColumnStretchMinWidthProperty">
      <summary>Identifies the ColumnStretchMinWidth
attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.ColumnStretchModeProperty">
      <summary>Identifies the ColumnStretchMode attached
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.DetailIndicatorWidthProperty">
      <summary>Identifies the <strong>DetailIndicatorWidth</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.FixedColumnCountProperty">
      <summary>Identifies the FixedColumnCount attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.FixedColumnDropMarkPenProperty">
      <summary>Identifies the FixedColumnDropMarkPen
attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.FixedColumnSplitterDraggedCursorProperty">
      <summary>Identifies the FixedColumnSplitterDraggedCursor
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.FixedColumnSplitterStyleProperty">
      <summary>Identifies the <strong>FixedColumnSplitterStyle</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.FixedColumnSplitterWidthProperty">
      <summary>Identifies the FixedColumnSplitterWidth
attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.GroupLevelIndicatorWidthProperty">
      <summary>Identifies the GroupLevelIndicatorWidth
attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.HorizontalGridLineBrushProperty">
      <summary>Identifies the HorizontalGridLineBrush
attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.HorizontalGridLineThicknessProperty">
      <summary>Identifies the HorizontalGridLineThickness attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.IsAlternatingRowStyleEnabledProperty">
      <summary>Identifies the IsAlternatingRowStyleEnabled dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.IsColumnVirtualizationEnabledProperty">
      <summary>Identifies the IsColumnVirutalizationEnabled dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.RemoveColumnStretchingOnResizeProperty">
      <summary>Identifies the RemoveColumnStretchingOnResize dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.RowSelectorPaneWidthProperty">
      <summary>Identifies the RowSelectorPaneWidth dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.RowSelectorResizeNorthSouthCursorProperty">
      <summary>Identifies the RowSelectorResizeNorthSouthCursor
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.RowSelectorResizeWestEastCursorProperty">
      <summary>Identifies the RowSelectorResizeWestEastCursor
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.ShowFixedColumnSplitterProperty">
      <summary>Identifies the ShowFixedColumnSplitter
attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.ShowRowSelectorPaneProperty">
      <summary>Identifies the ShowRowSelectorPane dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.VerticalGridLineBrushProperty">
      <summary>Identifies the VerticalGridLineBrush attached
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableView.VerticalGridLineThicknessProperty">
      <summary>Identifies the VerticalGridLineThickness
attached property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableViewHeaderFooterPanel.#ctor">
      <summary>Initializes a new instance of the <strong>TableViewHeaderFooterPanel</strong> class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableViewHeaderFooterPanel.MeasureOverride(System.Windows.Size)">
      <summary>
        <para>Measures the child element in anticipation of arranging it during the <strong>ArrangeOverride</strong> pass.</para>
      </summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableViewItemsHost.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the content of the items.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableViewItemsHost.MeasureOverride(System.Windows.Size)">
      <summary>
        <para>Measures the child elements in anticipation of arranging them during the ArrangeOverride pass</para>
      </summary>
      <returns>
        <para>The <strong>Size</strong> that represents the desired size of the element.</para>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TableViewScrollViewer.OnApplyTemplate">
      <summary>Builds the visual tree for the element.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TableViewScrollViewer.ShowRowSelectorPane">
      <summary>Gets or sets a value indicating whether the RowSelectorPane should
be shown.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableViewScrollViewer.RowSelectorPaneWidthProperty">
      <summary>Identifies the RowSelectorPaneWidth dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.TableViewScrollViewer.ShowRowSelectorPaneProperty">
      <summary>Identifies the ShowRowSelectorPane dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.TargetViewAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the TargetViewAttribute
class.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.TargetViewAttribute.ViewType">
      <summary>Gets the view for which the theme applies.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Theme.IsViewSupported">
      <summary>Retrieves a value indicating whether the specified view type is supported by the theme.</summary>
      <returns>
        <strong>true</strong> if the view is supported; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Theme.IsViewSupported(System.Type)">
      <summary>Retrieves a value indicating whether the specified view type is supported by the theme.</summary>
      <returns>
        <strong>true</strong> if the view type is supported; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Theme.IsViewSupported(System.Type,System.Type)">
      <summary>Retrieves a value indicating whether the specified view type is supported by the theme.</summary>
      <returns>
        <para>
          <strong>true</strong> if the view type is supported<strong>; false</strong> otherwise.</para>
      </returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.UIViewBase.GetAllowColumnChooser(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the column-chooser context menu is enabled.</summary>
      <returns>
        <strong>true</strong> if the column-chooser context menu is enabled; <strong>false</strong> otherwise. By default, <strong>true</strong> if a
Professional 3.1-3.7 license key (or Xceed DataGrid for WPF v4.0+) is used.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.UIViewBase.GetColumnChooserSortOrder(System.Windows.DependencyObject)">
      <summary>Gets a value indicating the order in which the column titles displayed in the column-chooser context menu are sorted.</summary>
      <returns>A ColumnChooserSortOrder value representing the order
in which the column titles displayed in the column-chooser context menu are sorted.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.UIViewBase.GetDropMarkOrientation(System.Windows.DependencyObject)">
      <summary>Gets the value of the <strong>DropMarkOrientation</strong> attached property for the specified dependency object.</summary>
      <returns>The DropMarkOrientation value for the dependency object.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.UIViewBase.GetDropMarkPen(System.Windows.DependencyObject)">
      <summary>Gets the value of the <strong>DropMarkPen</strong> attached property for the specified dependency object.</summary>
      <returns>The <strong>Pen</strong> property value for the dependency object.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.UIViewBase.SetAllowColumnChooser(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the column-chooser context menu is enabled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.UIViewBase.SetColumnChooserSortOrder(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.ColumnChooserSortOrder)">
      <summary>Sets a value indicating the order in which the column titles displayed in the column-chooser context menu are sorted.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.UIViewBase.SetDropMarkOrientation(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.DropMarkOrientation)">
      <summary>Sets the value of the <strong>DropMarkOrientation</strong> attached property to the specified dependency object.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.UIViewBase.SetDropMarkPen(System.Windows.DependencyObject,System.Windows.Media.Pen)">
      <summary>Sets the value of the <strong>DropMarkPen</strong> attached property to the specified dependency object.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.AllowColumnChooser">
      <summary>Gets or sets a value indicating whether the column-chooser context menu is enabled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.AutoFilterDropDownGlyph">
      <summary>Gets or sets the glyph to display in a column-manager cell allows the auto-filter drop down to be opened.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.BusyCursor">
      <summary>Gets or sets the image used for the mouse pointer when the datagrid is busy while a FilterCell or AutoFilterControl is being used.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.CannotDropDraggedElementCursor">
      <summary>Gets or sets the image used for the mouse pointer when an element cannot be dropped on its target.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ClearFilterButtonGlyph">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to create the glyph displayed in a filter cell that allows the active filter to be cleared.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ColumnChooserSortOrder">
      <summary>Gets or sets a value indicating the order in which the column titles displayed in the column-chooser context menu are sorted.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ColumnResizeWestEastCursor">
      <summary>
        <para>Gets or sets the image used for the mouse pointer when a column is resized.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ConnectionStateCommittingGlyph">
      <summary>Gets or sets the glyph to display when the underlying virtualized data collection is committing data.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ConnectionStateErrorGlyph">
      <summary>Gets or sets the glyph to display when an error has occurred in the underlying virtualized data collection.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ConnectionStateLoadingGlyph">
      <summary>Gets or sets the glyph to display when the underlying virtualized data collection is loading data.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.CurrentItemGlyph">
      <summary>Gets or sets the glyph to display when an item is current.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.DefaultDropMarkOrientation">
      <summary>Gets or sets the default orientation of the drop-mark.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.DefaultDropMarkPen">
      <summary>Gets or sets the default <strong>Pen</strong> used to draw the drop-mark.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.EditingRowGlyph">
      <summary>Gets or sets the glyph to display when a row is being edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.InsertionRowGlyph">
      <summary>Gets or sets the glyph to display when an InsertionRow is active.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.IsConnectionStateGlyphEnabled">
      <summary>Gets or sets a value indicating whether the connection state glyphs that indicate the status of the underlying virtualized data collection are
enabled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.RemovingGroupCursor">
      <summary>
        <para>Gets or sets the image used for the mouse pointer when a GroupByItem is dragged out of a
<see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.GroupByControl">GroupByControl</see> to ungroup it.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ScrollTipContentTemplate">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to display the scroll
tip's content.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ScrollTipContentTemplateSelector">
      <summary>Gets or sets a <strong>DataTemplateSelector</strong> that provides a way to apply a different scroll-tip content template based on custom logic.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ShowScrollTip">
      <summary>Gets or sets a value indicating whether the scroll tip is visible when a
grid is scrolled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.UIViewBase.ValidationErrorGlyph">
      <summary>Gets or sets the glyph that is displayed when a validation error occurs.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.AllowColumnChooserProperty">
      <summary>Identifies the AllowColumnChooser dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.AutoFilterDropDownGlyphProperty">
      <summary>Identifies the AutoFilterDropDownGlyph
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.BusyCursorProperty">
      <summary>Identifies the BusyCursor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.CannotDropDraggedElementCursorProperty">
      <summary>Identifies the CannotDropDraggedElementCursor
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ClearFilterButtonGlyphProperty">
      <summary>Identifies the ClearFilterButtonGlyph
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ColumnChooserSortOrderProperty">
      <summary>Identifies the ColumnChooserSortOrder
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ColumnResizeWestEastCursorProperty">
      <summary>Identifies the ColumnResizeWestEastCursor dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ConnectionStateCommittingGlyphProperty">
      <summary>Identifies the ConnectionStateCommittingGlyph dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ConnectionStateErrorGlyphProperty">
      <summary>Identifies the ConnectionStateErrorGlyph
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ConnectionStateLoadingGlyphProperty">
      <summary>Identifies the ConnectionStateLoadingGlyph dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.CurrentItemGlyphProperty">
      <summary>Identifies the CurrentItemGlyph dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.DefaultDropMarkOrientationProperty">
      <summary>Identifies the DefaultDropMarkOrientation dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.DefaultDropMarkPenProperty">
      <summary>Identifies the DefaultDropMarkPen dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.DropMarkOrientationProperty">
      <summary>Identifies the <strong>DropMarkOrientation</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.DropMarkPenProperty">
      <summary>Identifies the <strong>DropMarkPen</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.EditingRowGlyphProperty">
      <summary>Identifies the EditingRowGlyph dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.InsertionRowGlyphProperty">
      <summary>Identifies the InsertionRowGlyph dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.IsConnectionStateGlyphEnabledProperty">
      <summary>Identifies the IsConnectionStateGlyphEnabled dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.RemovingGroupCursorProperty">
      <summary>Identifies the RemovingGroupCursor dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ScrollTipContentTemplateProperty">
      <summary>Identifies the ScrollTipTemplate
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ScrollTipContentTemplateSelectorProperty">
      <summary>Identifies the ScrollTipTemplateSelector dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ShowScrollTipProperty">
      <summary>Identifies the ShowScrollTip dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.UIViewBase.ValidationErrorGlyphProperty">
      <summary>Identifies the ValidationErrorGlyph
dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.ViewBase.AddDefaultHeadersFooters">
      <summary>Adds the default items to the header, <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.ViewBase~Footers.html">footer</see>, <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.ViewBase~FixedHeaders.html">fixed headers</see>, and <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.ViewBase~FixedFooters.html">fixed footer</see> sections of a grid.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.ViewBase.GetIsLastItem(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether the item to which the property is attached is the last element in a grid.</summary>
      <returns>
        <strong>true</strong> if the item is the last item in a grid; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.ViewBase.SetIsLastItem(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether the item to which the property is attached is the last item in a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.AscendingSortGlyph">
      <summary>Gets or sets the glyph to display when a column is sorted in an ascending direction.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.AutoFilterGlyph">
      <summary>Gets or sets the glyph to display in a column-manager cell when a column is automatically filtered. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.CollapseGroupGlyph">
      <summary>Gets or sets the glyph to display when a group is expanded to allow it to be collapsed.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.DescendingSortGlyph">
      <summary>Gets or sets the glyph to display when a column is sorted in an descending direction.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.ExpandGroupGlyph">
      <summary>Gets or sets the glyph to display when a group is collapsed to allow it to be expanded.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.FilterRowGlyph">
      <summary>Gets or sets the <strong>DataTemplate</strong> used to create the glyph that is displayed in a filter row's row selector. 
<!--<img border="0" alt="This feature is available only in the Professional Edition" src="images/Tag_ProMini.jpg" />--></summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.FixedFooters">
      <summary>Gets a collection that contains the items that are located in the fixed, non-scrollable footer section of a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.FixedHeaders">
      <summary>Gets a collection that contains the items that are located in the fixed, non-scrollable header section of a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.Footers">
      <summary>Gets a collection that contains the items that are located in the footer section of a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.Headers">
      <summary>Gets a collection that contains the items that are located in the header section of a grid.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.Theme">
      <summary>Gets or sets the theme that determines which styles are applied to the elements in a grid for this specific view.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewBase.UseDefaultHeadersFooters">
      <summary>Gets or sets a value indicating whether the default header and footer items are automatically added to a grid's fixed, and non-fixed, header and
footer sections.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.AscendingSortGlyphProperty">
      <summary>
        <para align="left">Identifies the AscendingSortGlyph dependency
property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.AutoFilterGlyphProperty">
      <summary>Identifies the AutoFilterGlyph dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.CollapseGroupGlyphProperty">
      <summary>Identifies the GroupCollapseGlyph dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.DescendingSortGlyphProperty">
      <summary>Identifies the DescendingSortGlyph dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.ExpandGroupGlyphProperty">
      <summary>Identifies the GroupExpandGlyph dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.FilterRowGlyphProperty">
      <summary>Identifies the FilterRowGlyph dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.FixedFootersProperty">
      <summary>Identifies the FixedFooters dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.FixedHeadersProperty">
      <summary>Identifies the FixedHeaders dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.FootersProperty">
      <summary>Identifies the Footers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.HeadersProperty">
      <summary>Identifies the Headers dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.IsLastItemProperty">
      <summary>Identifies the <strong>IsLastItem</strong> attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.ThemeProperty">
      <summary>
        <para>Identifies the Theme dependency property.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.ViewBase.UseDefaultHeadersFootersProperty">
      <summary>Identifies the UseDefaultHeadersFooters
dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.ViewPropertyAttribute.#ctor(Xceed.Wpf.DataGrid.Views.ViewPropertyMode)">
      <summary>Initializes a new instance of the <strong>ViewPropertyAttribute</strong> class specifying the ViewPropertyMode that determines how or if the property on which the attribute is
set can be accessed through a <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Markup.ViewBindingExtension.html">ViewBinding</see>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.ViewPropertyAttribute.ViewPropertyMode">
      <summary>Gets a value that determines how or if the property on which the attribute is set can be accessed through a ViewBinding.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Windows7Theme.#ctor">
      <summary>Initializes a new instance of the Windows7Theme class.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.ZuneNormalColorTheme.#ctor">
      <summary>Initializes a new instance of the <strong>ZuneNormalColorTheme</strong> class.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.CompleteSurfaceConfiguration">
      <summary>Represents a surface configuration that consists of an image, title, and data region­.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.DataSurfaceConfiguration">
      <summary>Represents a surface configuration that consists of only a data region.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.ImageAndDataSurfaceConfiguration">
      <summary>Represents a surface configuration that consists of an image and data region­.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.ImageAndTitleSurfaceConfiguration">
      <summary>Represents a surface configuration that consists of an image and title region­.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.ImageSurfaceConfiguration">
      <summary>Represents a surface configuration that consists of only an image region.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.MultiSurfaceTheme">
      <summary>Base class that represents a theme that can be applied to one or more multi-surface views.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.MultiSurfaceViewBase">
      <summary>Base class that provides various layout information that applies to all multi-surface views.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration">
      <summary>Class that determines how the content of a region
presenter is displayed (see Remarks).</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter">
      <summary>Represents an element in a <strong>ControlTemplate</strong> that indicates a location where content is to be displayed.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.SurfaceConfiguration">
      <summary>Represents configurations that can be applied to any surface exposed by a multi-surface view and supports various regions in which data can be
displayed.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.SurfaceConfigurationContext">
      <summary>
        <para>Class that represents the context through which the properties exposed by a surface configuration and multi-surface theme (e.g., TitleRegionPosition and <see cref="Xceed.Wpf.DataGrid.Views3D.v4.2~Xceed.Wpf.DataGrid.Views.ChameleonTheme~GradientLightColor.html">GradientLightColor</see>) can be accessed in order to bind
elements in the theme-defined <strong>ControlTemplates</strong> to their values or use them in triggers (see <see cref="{EDF25DFD-6825-435C-BB40-6796F289A922}">CardflowView3D.Elemental.Pink</see> resource dictionary).</para>
      </summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.TargetRegionPresenterNameAttribute">
      <summary>Represents an attribute that is set on a region-configuration property to identify its corresponding <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.html">region presenter­</see>.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.TargetSurfaceConfigurationAttribute">
      <summary>Represents an attribute that is set on a multi-surface theme to identify the target surface configurations it supports.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.TitleAndDataSurfaceConfiguration">
      <summary>Represents a surface configuration that consists of a title and data region.</summary>
    </member>
    <member name="T:Xceed.Wpf.DataGrid.Views.Surfaces.TitleSurfaceConfiguration">
      <summary>Represents a surface configuration that consists of only a title region.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.CompleteSurfaceConfiguration.DataRegionConfiguration">
      <summary>
        <para>Gets or sets a region configuration that is applied to the region on a surface that, by default, displays information from the fields that have not been
explicitly assigned to another region.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.CompleteSurfaceConfiguration.ImageRegionConfiguration">
      <summary>
        <para>Gets or sets a region configuration that is applied to the region on a surface that displays an image.</para>
      </summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.CompleteSurfaceConfiguration.TitleRegionConfiguration">
      <summary>
        <para>Gets or sets a region configuration that is applied to the region on a surface that displays a title.</para>
      </summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.CompleteSurfaceConfiguration.DataRegionConfigurationProperty">
      <summary>Identifies the DataRegionConfiguration dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.CompleteSurfaceConfiguration.ImageRegionConfigurationProperty">
      <summary>Identifies the ImageRegionConfiguration dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.CompleteSurfaceConfiguration.TitleRegionConfigurationProperty">
      <summary>Identifies the TitleRegionConfiguration dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.DataSurfaceConfiguration.DataRegionConfigurationProperty">
      <summary>Identifies the DataRegionConfiguration dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.ImageAndDataSurfaceConfiguration.DataRegionConfigurationProperty">
      <summary>Identifies the DataRegionConfiguration
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.ImageAndDataSurfaceConfiguration.ImageRegionConfigurationProperty">
      <summary>Identifies the ImageRegionConfiguration
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.ImageAndTitleSurfaceConfiguration.ImageRegionConfigurationProperty">
      <summary>Identifies the ImageRegionConfiguration
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.ImageAndTitleSurfaceConfiguration.TitleRegionConfigurationProperty">
      <summary>Identifies the TitleRegionConfiguration
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.ImageSurfaceConfiguration.ImageRegionConfigurationProperty">
      <summary>Identifies the ImageRegionConfiguration dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.MultiSurfaceTheme.GetSurfaceConfiguration(System.Predicate{Xceed.Wpf.DataGrid.Views.Surfaces.SurfaceConfiguration})">
      <summary>Gets the surface configuration that will be applied to a multi-surface view's surfaces.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.MultiSurfaceTheme.DefaultSurfaceConfigurations">
      <summary>Gets the default surface configurations that will be applied to a multi-surface view's surfaces.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.MultiSurfaceTheme.SurfaceConfigurations">
      <summary>Gets the surface configurations that will be applied to a multi-surface view's surfaces.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.MultiSurfaceViewBase.GetCoercedSurfaceConfiguration(System.Windows.DependencyObject)">
      <summary>Gets the surface configuration that is applied to a card (i.e., row).</summary>
      <returns>A reference to the the SurfaceConfiguration
that is applied to a card (i.e., row).</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.MultiSurfaceViewBase.GetCoercedSurfaceConfigurationType(System.Windows.DependencyObject)">
      <summary>Gets the type of the surface configuration that is applied to a card (i.e., row).</summary>
      <returns>A <strong>Type</strong> representing the type of the surface configuration that is applied to a card (i.e., row).</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.MultiSurfaceViewBase.GetSurfaceConfigurationContext(System.Windows.DependencyObject)">
      <summary>Gets the context through which the properties exposed by a surface configuration and multi-surface can be accessed.</summary>
      <returns>The context through which <span style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; BORDER-COLLAPSE: separate; FONT: 11px Verdana; WHITE-SPACE: normal; ORPHANS: 2; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0" class="Apple-style-span">the properties exposed by a surface configuration and multi-surface theme (e.g., TitleRegionPosition and <see cref="Xceed.Wpf.DataGrid.Views3D.v4.2~Xceed.Wpf.DataGrid.Views.ChameleonTheme~GradientLightColor.html">GradientLightColor</see>) can be accessed in order to bind
elements in the theme-defined <strong>ControlTemplates</strong> to their values or use them in triggers (see <see cref="CardflowView3D.Elemental.Pink.xaml.html">CardflowView3D.Elemental.Pink</see> resource
dictionary).</span></returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.MultiSurfaceViewBase.SetCoercedSurfaceConfiguration(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.Surfaces.SurfaceConfiguration)">
      <summary>Sets the surface configuration that is applied to a card (i.e., row).</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.MultiSurfaceViewBase.SetSurfaceConfigurationContext(System.Windows.DependencyObject,Xceed.Wpf.DataGrid.Views.Surfaces.SurfaceConfigurationContext)">
      <summary>Sets the context through which the properties exposed by a surface configuration and multi-surface an be accessed.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.MultiSurfaceViewBase.CoercedSurfaceConfigurationProperty">
      <summary>Identifies the CoercedSurfaceConfiguration attached
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.MultiSurfaceViewBase.CoercedSurfaceConfigurationTypeProperty">
      <summary>Identifies the CoercedSurfaceConfigurationType
attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.MultiSurfaceViewBase.SurfaceConfigurationContextProperty">
      <summary>Identifies the SurfaceConfigurationContext attached
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration.GetShowCellTitles(System.Windows.DependencyObject)">
      <summary>Gets a value indicating whether cell titles are shown.</summary>
      <returns>
        <strong>true</strong> if cell titles are shown; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration.SetShowCellTitles(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value indicating whether cell titles are shown.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration.FieldNames">
      <summary>Gets or sets the names of the fields that will be displayed in the region.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration.ImageStretch">
      <summary>Gets or sets a value indicating how images displayed in the region should be stretched</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration.ImageStretchDirection">
      <summary>Gets or sets a value indicating how images displayed in the region are scaled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration.ReadOnly">
      <summary>Gets or sets a value indicating whether DataCells contained in the region
can be edited.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration.ShowCellTitles">
      <summary>Identifies the ShowCellTitles
attached property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration.Template">
      <summary>Gets or sets the <strong>DataTemplate</strong> that can be used to change the layout of the fields in the region.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration.FieldNamesProperty">
      <summary>Identifies the FieldNames dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration.ImageStretchDirectionProperty">
      <summary>Identifies the ImageStretchDirection dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration.ImageStretchProperty">
      <summary>Identifies the ImageStretch
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration.ReadOnlyProperty">
      <summary>Identifies the ReadOnly dependency
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration.ShowCellTitlesProperty">
      <summary>Identifies the ShowCellTitles
attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.RegionConfiguration.TemplateProperty">
      <summary>Identifies the Template dependency
property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>Arranges the contents of a region presenter.</summary>
      <returns>The size of the <strong>RegionPresenter</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.GetImageStretch(System.Windows.DependencyObject)">
      <summary>Gets a value indicating how images displayed in the region presenter should be stretched</summary>
      <returns>A <strong>Stretch</strong> value indicating how images displayed in the region are stretched to fill their destination rectangles. By default,
<strong>UniformToFill</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.GetImageStretchDirection(System.Windows.DependencyObject)">
      <summary>Gets a value indicating how images displayed in the region presenter are scaled.</summary>
      <returns>A <strong>StretchDirection</strong> value indicating how images displayed in the region are scaled. By default, <strong>UniformToFill</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.GetIsCellsHost(System.Windows.DependencyObject)">
      <summary>Gets a value that indicates whether the <strong>Panel</strong> to which it is attached can contain cells.</summary>
      <returns>
        <strong>true</strong> if the <strong>Panel</strong> can contain cells; <strong>false</strong> otherwise.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.GetVisualChild(System.Int32)">
      <summary>Gets the visual child at the specified index.</summary>
      <returns>The visual child at <em>index</em>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.MeasureOverride(System.Windows.Size)">
      <summary>Measures the child elements of the region presenter before they are arranged during the ArrangeOverride pass.</summary>
      <returns>A <strong>Size</strong> representing the upper size limit of the <strong>RegionPresenter</strong>.</returns>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.SetImageStretch(System.Windows.DependencyObject,System.Windows.Media.Stretch)">
      <summary>Sets a value indicating how images displayed in the region presenter should be stretched to fill their destination rectangles.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.SetImageStretchDirection(System.Windows.DependencyObject,System.Windows.Controls.StretchDirection)">
      <summary>Sets a value indicating how images displayed in the region presenter are scaled.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.SetIsCellsHost(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets a value that indicates whether the <strong>Panel</strong> to which it is attached can contain cells.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.Content">
      <summary>Gets or sets the visual tree used to display the region presenter's data.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.ImageStretch">
      <summary>Gets or sets a value indicating how images displayed in the region presenter should be stretched</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.ImageStretchDirection">
      <summary>Gets or sets a value indicating how images displayed in the region presenter are scaled.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.IsDefaultRegion">
      <summary>Gets or sets a value that indicates whether a region presenter is the default region.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.LogicalChildren">
      <summary>Gets an enumerator to the region presenter's logical child elements.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.ReadOnly">
      <summary>Gets or sets a value indicating whether the region presenter is read-only.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.VisualChildrenCount">
      <summary>Gets the number of visible child elements.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.ImageStretchDirectionProperty">
      <summary>Identifies the ImageStretchDirection attached property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.ImageStretchProperty">
      <summary>Identifies the ImageStretch attached
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.IsCellsHostProperty">
      <summary>Identifies the IsCellsHost attached
property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.IsDefaultRegionProperty">
      <summary>Identifies the IsDefaultRegion
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.ReadOnlyProperty">
      <summary>Identifies the ReadOnly dependency
property.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.SurfaceConfiguration.AutoFillDefaultRegion">
      <summary>Gets or sets a value indicating whether information from the fields that have not been explicitly assigned to another region is displayed.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.SurfaceConfiguration.AutoFillDefaultRegionProperty">
      <summary>Identifies the AutoFillDefaultRegion dependency property.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.TargetRegionPresenterNameAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <strong>TargetRegionPresenterNameAttribute</strong> class specifying the name of a RegionConfiguration's corresponding <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.html">RegionPresenter</see>.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.TargetRegionPresenterNameAttribute.RegionPresenterName">
      <summary>Gets the case-sensitive string representing the name of a RegionConfiguration's corresponding <see cref="Xceed.Wpf.DataGrid.v4.2~Xceed.Wpf.DataGrid.Views.Surfaces.RegionPresenter.html">RegionPresenter</see>.</summary>
    </member>
    <member name="M:Xceed.Wpf.DataGrid.Views.Surfaces.TargetSurfaceConfigurationAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <strong>TargetSurfaceConfigurationAttribute</strong> class specifying the target surface configuration type.</summary>
    </member>
    <member name="P:Xceed.Wpf.DataGrid.Views.Surfaces.TargetSurfaceConfigurationAttribute.SurfaceConfigurationType">
      <summary>Gets the type of the targeted SurfaceConfiguration.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.TitleAndDataSurfaceConfiguration.DataRegionConfigurationProperty">
      <summary>Identifies the DataRegionConfiguration
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.TitleAndDataSurfaceConfiguration.TitleRegionConfigurationProperty">
      <summary>Identifies the TitleRegionConfiguration
dependency property.</summary>
    </member>
    <member name="F:Xceed.Wpf.DataGrid.Views.Surfaces.TitleSurfaceConfiguration.TitleRegionConfigurationProperty">
      <summary>Identifies the TitleRegionConfiguration dependency
property.</summary>
    </member>
  </members>
</doc>